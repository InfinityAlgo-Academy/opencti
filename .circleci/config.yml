version: 2.1

jobs:
  build_frontend:
    working_directory: ~/opencti
    docker:
      - image: nikolaik/python-nodejs:python3.9-nodejs15
    steps:
      - run:
          command: apt-get update --allow-insecure-repositories --allow-unauthenticated && apt-get install -y build-essential libffi-dev
      - checkout
      - run: 
          working_directory: ~/opencti/opencti-platform/opencti-front
          command: yarn install
      - run:
          working_directory: ~/opencti/opencti-platform/opencti-front
          command: yarn build
          no_output_timeout: 30m
      - run: 
          working_directory: ~/
          command: cp -a opencti opencti_docker && cp -a opencti opencti_musl
      - persist_to_workspace:
          root: ~/
          paths:
            - opencti
            - opencti_docker
            - opencti_musl
            
  build_platform:
    working_directory: ~/opencti
    docker:
      - image: nikolaik/python-nodejs:python3.9-nodejs15
    steps:
      - run:
          command: apt-get update --allow-insecure-repositories --allow-unauthenticated && apt-get install -y build-essential libffi-dev
      - attach_workspace:
          at: ~/
      - run:
          working_directory: ~/opencti/opencti-platform/opencti-graphql
          command: yarn install
      - run:
          working_directory: ~/opencti/opencti-platform/opencti-graphql
          command: yarn build
      - persist_to_workspace:
          root: ~/
          paths:
            - opencti

  build_platform_musl:
    working_directory: ~/opencti_musl
    docker:
      - image: nikolaik/python-nodejs:python3.9-nodejs15-alpine
    steps:
      - run:
          command: apk update && apk upgrade && apk --no-cache add git build-base libmagic libffi-dev
      - attach_workspace:
          at: ~/           
      - run:
          working_directory: ~/opencti_musl/opencti-platform/opencti-graphql
          command: yarn install
      - run:
          working_directory: ~/opencti_musl/opencti-platform/opencti-graphql
          command: yarn build
      - persist_to_workspace:
          root: ~/
          paths:
            - opencti_musl         
            
  package_rolling:
    working_directory: ~/opencti
    docker:
      - image: circleci/node:15-stretch
    steps:
      - attach_workspace:
          at: ~/
      - add_ssh_keys
      - run: ssh-keyscan -H opencti.io >> ~/.ssh/known_hosts
      - run: git config --global user.email "ci@opencti.io" && git config --global user.name "OpenCTI CircleCI"
      - run: git remote add opencti ssh://git-OLOszi5F@opencti.io:/~/git-OLOszi5F.git && git push --force opencti master
      - run: mkdir release
      - run: cp -a ./opencti-platform/opencti-graphql release/opencti
      - run: cp -a ./opencti-worker/src release/opencti/worker
      - run: cd release/opencti && git clone https://github.com/OpenCTI-Platform/docker
      - run: cd release/opencti && git clone https://github.com/OpenCTI-Platform/connectors
      - run:
          working_directory: ~/opencti/release
          command: tar -zcvf "opencti-$(date '+%Y%m%d').tar.gz" opencti
      - run: 
          working_directory: ~/opencti/release
          command: scp "opencti-$(date '+%Y%m%d').tar.gz" git-OLOszi5F@opencti.io:/dns/io/opencti/releases/

  package_rolling_musl:
    working_directory: ~/opencti_musl
    docker:
      - image: circleci/node:15-stretch
    steps:
      - attach_workspace:
          at: ~/
      - add_ssh_keys
      - run: ssh-keyscan -H opencti.io >> ~/.ssh/known_hosts
      - run: git config --global user.email "ci@opencti.io" && git config --global user.name "OpenCTI CircleCI"
      - run: git remote add opencti ssh://git-OLOszi5F@opencti.io:/~/git-OLOszi5F.git && git push --force opencti master
      - run: mkdir release
      - run: cp -a ./opencti-platform/opencti-graphql release/opencti
      - run: cp -a ./opencti-worker/src release/opencti/worker
      - run: cd release/opencti && git clone https://github.com/OpenCTI-Platform/docker
      - run: cd release/opencti && git clone https://github.com/OpenCTI-Platform/connectors
      - run:
          working_directory: ~/opencti_musl/release
          command: tar -zcvf "opencti-$(date '+%Y%m%d')_musl.tar.gz" opencti
      - run: 
          working_directory: ~/opencti_musl/release
          command: scp "opencti-$(date '+%Y%m%d')_musl.tar.gz" git-OLOszi5F@opencti.io:/dns/io/opencti/releases/

  deploy_demo:
    working_directory: ~/opencti
    docker:
      - image: circleci/node:15-stretch
    steps:
      - attach_workspace:
          at: ~/
      - add_ssh_keys
      - run: ssh-keyscan -H opencti.io >> ~/.ssh/known_hosts
      - run: sudo apt-get update -qq && sudo apt install rsync
      - run: mkdir deploy
      - run: git config --global user.email "ci@opencti.io" && git config --global user.name "OpenCTI CircleCI"
      - run:
          working_directory: ~/opencti/deploy
          command: git clone ssh://opencti-fiqid45E@opencti.io:/~/opencti-fiqid45E.git .
      - run:
          working_directory: ~/opencti/deploy
          command: git submodule init && git submodule update --remote          
      - run:
          working_directory: ~/opencti/deploy
          command: git remote add ci ~/opencti && git pull --no-edit -s recursive -X theirs ci master
      - run:
          working_directory: ~/opencti/deploy
          command: rsync -av --delete ~/opencti/opencti-platform/opencti-graphql/public/ ./opencti-platform/opencti-graphql/public/
      - run:
          working_directory: ~/opencti/deploy
          command: rsync -av --delete ~/opencti/opencti-platform/opencti-graphql/build/ ./opencti-platform/opencti-graphql/build/
      - run:  
          working_directory: ~/opencti/deploy 
          command: rsync -av ./opencti-connectors/ ./opencti-connectors-enabled/          
      - run:
          working_directory: ~/opencti/deploy
          command: git add -A
      - run:
          working_directory: ~/opencti/deploy
          command: git diff-index --quiet HEAD || git commit -a -m "[CircleCI-Workflow] Deploy new version" && git push origin master

  deploy_reference:
    working_directory: ~/opencti
    docker:
      - image: circleci/node:15-stretch
    steps:
      - attach_workspace:
          at: ~/
      - add_ssh_keys
      - run: ssh-keyscan -H opencti.io >> ~/.ssh/known_hosts    
      - run: sudo apt-get update -qq && sudo apt install rsync
      - run: mkdir -p deploy
      - run: git config --global user.email "ci@opencti.io" && git config --global user.name "OpenCTI CircleCI"
      - run:
          working_directory: ~/opencti/deploy
          command: git clone ssh://opencti-b0gY5UHe@opencti.io:/~/opencti-b0gY5UHe.git .
      - run:
          working_directory: ~/opencti/deploy
          command: git submodule init && git submodule update --remote          
      - run:
          working_directory: ~/opencti/deploy
          command: git remote add ci ~/opencti && git pull --no-edit -s recursive -X theirs ci master          
      - run:
          working_directory: ~/opencti/deploy
          command: rsync -av --delete ~/opencti/opencti-platform/opencti-graphql/public/ ./opencti-platform/opencti-graphql/public/
      - run:
          working_directory: ~/opencti/deploy
          command: rsync -av --delete ~/opencti/opencti-platform/opencti-graphql/build/ ./opencti-platform/opencti-graphql/build/
      - run:  
          working_directory: ~/opencti/deploy 
          command: rsync -av ./opencti-connectors/ ./opencti-connectors-enabled/          
      - run:
          working_directory: ~/opencti/deploy
          command: git add -A
      - run:
          working_directory: ~/opencti/deploy
          command: git diff-index --quiet HEAD || git commit -a -m "[CircleCI-Workflow] Deploy new version" && git push origin master

  deploy_testing:
    working_directory: ~/opencti
    docker:
      - image: circleci/node:15-stretch
    steps:
      - attach_workspace:
          at: ~/
      - add_ssh_keys
      - run: ssh-keyscan -H opencti.io >> ~/.ssh/known_hosts
      - run: sudo apt-get update -qq && sudo apt install rsync
      - run: mkdir deploy
      - run: git config --global user.email "ci@opencti.io" && git config --global user.name "OpenCTI CircleCI"
      - run:
          working_directory: ~/opencti/deploy
          command: git clone ssh://opencti-MNdnBVNb@opencti.io:/~/opencti-MNdnBVNb.git .
      - run:
          working_directory: ~/opencti/deploy
          command: git submodule init && git submodule update --remote          
      - run:
          working_directory: ~/opencti/deploy
          command: git remote add ci ~/opencti && git pull --no-edit -s recursive -X theirs ci master
      - run:
          working_directory: ~/opencti/deploy
          command: rsync -av --delete ~/opencti/opencti-platform/opencti-graphql/public/ ./opencti-platform/opencti-graphql/public/
      - run:
          working_directory: ~/opencti/deploy
          command: rsync -av --delete ~/opencti/opencti-platform/opencti-graphql/build/ ./opencti-platform/opencti-graphql/build/
      - run:  
          working_directory: ~/opencti/deploy 
          command: rsync -av ./opencti-connectors/ ./opencti-connectors-enabled/          
      - run:
          working_directory: ~/opencti/deploy
          command: git add -A
      - run:
          working_directory: ~/opencti/deploy
          command: git diff-index --quiet HEAD || git commit -a -m "[CircleCI-Workflow] Deploy new version" && git push origin master
          
  deploy_club:
    working_directory: ~/opencti
    docker:
      - image: circleci/node:15-stretch
    steps:
      - attach_workspace:
          at: ~/
      - add_ssh_keys
      - run: ssh-keyscan -H opencti.io >> ~/.ssh/known_hosts
      - run: sudo apt-get update -qq && sudo apt install rsync
      - run: mkdir deploy
      - run: git config --global user.email "ci@opencti.io" && git config --global user.name "OpenCTI CircleCI"
      - run:
          working_directory: ~/opencti/deploy
          command: git clone ssh://opencti-Lb8xQHh9@opencti.io:/~/opencti-Lb8xQHh9.git .
      - run:
          working_directory: ~/opencti/deploy
          command: git submodule init && git submodule update --remote          
      - run:
          working_directory: ~/opencti/deploy
          command: git remote add ci ~/opencti && git pull --no-edit -s recursive -X theirs ci master
      - run:
          working_directory: ~/opencti/deploy
          command: rsync -av --delete ~/opencti/opencti-platform/opencti-graphql/public/ ./opencti-platform/opencti-graphql/public/
      - run:
          working_directory: ~/opencti/deploy
          command: rsync -av --delete ~/opencti/opencti-platform/opencti-graphql/build/ ./opencti-platform/opencti-graphql/build/
      - run:  
          working_directory: ~/opencti/deploy 
          command: rsync -av ./opencti-connectors/ ./opencti-connectors-enabled/          
      - run:
          working_directory: ~/opencti/deploy
          command: git add -A
      - run:
          working_directory: ~/opencti/deploy
          command: git diff-index --quiet HEAD || git commit -a -m "[CircleCI-Workflow] Deploy new version" && git push origin master          
          
  deploy_lab:
    working_directory: ~/opencti
    docker:
      - image: circleci/node:15-stretch
    steps:
      - attach_workspace:
          at: ~/
      - add_ssh_keys
      - run: ssh-keyscan -H opencti.io >> ~/.ssh/known_hosts
      - run: sudo apt-get update -qq && sudo apt install rsync
      - run: mkdir deploy
      - run: git config --global user.email "ci@opencti.io" && git config --global user.name "OpenCTI CircleCI"
      - run:
          working_directory: ~/opencti/deploy
          command: git clone ssh://opencti-ZuPs8Mvn@opencti.io:/~/opencti-ZuPs8Mvn.git .
      - run:
          working_directory: ~/opencti/deploy
          command: git submodule init && git submodule update --remote          
      - run:
          working_directory: ~/opencti/deploy
          command: git remote add ci ~/opencti && git pull --no-edit -s recursive -X theirs ci master
      - run:
          working_directory: ~/opencti/deploy
          command: rsync -av --delete ~/opencti/opencti-platform/opencti-graphql/public/ ./opencti-platform/opencti-graphql/public/
      - run:
          working_directory: ~/opencti/deploy
          command: rsync -av --delete ~/opencti/opencti-platform/opencti-graphql/build/ ./opencti-platform/opencti-graphql/build/
      - run:  
          working_directory: ~/opencti/deploy 
          command: rsync -av ./opencti-connectors/ ./opencti-connectors-enabled/          
      - run:
          working_directory: ~/opencti/deploy
          command: git add -A
      - run:
          working_directory: ~/opencti/deploy
          command: git diff-index --quiet HEAD || git commit -a -m "[CircleCI-Workflow] Deploy new version" && git push origin master    
                    
  docker_build:
    working_directory: ~/opencti_docker
    machine:
      image: ubuntu-1604:202007-01
    environment:
      DOCKER_BUILDKIT: 1
      BUILDX_PLATFORMS: linux/amd64,linux/arm64,linux/ppc64le,linux/arm/v7
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Install buildx
          command: |
            BUILDX_BINARY_URL="https://github.com/docker/buildx/releases/download/v0.4.2/buildx-v0.4.2.linux-amd64"
            curl --output docker-buildx \
              --silent --show-error --location --fail --retry 3 \
              "$BUILDX_BINARY_URL"
            mkdir -p ~/.docker/cli-plugins
            mv docker-buildx ~/.docker/cli-plugins/
            chmod a+x ~/.docker/cli-plugins/docker-buildx
            docker buildx install
            # Run binfmt
            docker run --rm --privileged tonistiigi/binfmt:latest --install "$BUILDX_PLATFORMS"
            docker buildx create --name mybuilder --use
      - run:
          name: Login
          command: echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
      - run:
          working_directory: ~/opencti_docker/opencti-platform
          name: Build Docker image opencti/platform
          command: docker buildx build --platform $BUILDX_PLATFORMS -f Dockerfile_circleci -t opencti/platform:latest -t opencti/platform:${CIRCLE_TAG} --push .
          no_output_timeout: 30m
      - run:
          working_directory: ~/opencti_docker/opencti-worker
          name: Build Docker image opencti/worker
          command: docker buildx build --platform $BUILDX_PLATFORMS -t opencti/worker:latest -t opencti/worker:${CIRCLE_TAG} --push .

  docker_build_rolling:
    working_directory: ~/opencti_docker
    machine:
      image: ubuntu-1604:202007-01
    environment:
      DOCKER_BUILDKIT: 1
      BUILDX_PLATFORMS: linux/amd64,linux/arm64
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Install buildx
          command: |
            BUILDX_BINARY_URL="https://github.com/docker/buildx/releases/download/v0.4.2/buildx-v0.4.2.linux-amd64"
            curl --output docker-buildx \
              --silent --show-error --location --fail --retry 3 \
              "$BUILDX_BINARY_URL"
            mkdir -p ~/.docker/cli-plugins
            mv docker-buildx ~/.docker/cli-plugins/
            chmod a+x ~/.docker/cli-plugins/docker-buildx
            docker buildx install
            # Run binfmt
            docker run --rm --privileged tonistiigi/binfmt:latest --install "$BUILDX_PLATFORMS"
            docker buildx create --name mybuilder --use
      - run:
          name: Login
          command: echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
      - run:
          working_directory: ~/opencti_docker/opencti-platform
          name: Build Docker image opencti/platform
          command: docker buildx build --platform $BUILDX_PLATFORMS -f Dockerfile_circleci -t opencti/platform:rolling --push .
          no_output_timeout: 30m
      - run:
          working_directory: ~/opencti_docker/opencti-worker
          name: Build Docker image opencti/worker
          command: docker buildx build --platform $BUILDX_PLATFORMS -t opencti/worker:rolling --push .

workflows:
  opencti:
    jobs:
      - build_frontend:
          filters:
            tags:
              only: /.*/    
      - build_platform:
          filters:
            tags:
              only: /.*/
          requires:
            - build_frontend                
      - build_platform_musl:
          filters:
            tags:
              only: /.*/      
          requires:
            - build_frontend                   
      - package_rolling:
          requires:
            - build_platform
          filters:
            branches:
              only:
                - master
      - package_rolling_musl:
          requires:
            - build_platform_musl
          filters:
            branches:
              only:
                - master                
      - deploy_demo:
          requires:
            - build_platform
          filters:
            branches:
              only:
                - master                
      - deploy_reference:
          requires:
            - build_platform
          filters:
            branches:
              only:
                - master
      - deploy_testing:
          requires:
            - build_platform
          filters:
            branches:
              only:
                - master
      - deploy_club:
          requires:
            - deploy_reference
          filters:
            branches:
              only:
                - master              
      - deploy_lab:
          requires:
            - build_platform
          filters:
            branches:
              only:
                - master                                          
      - docker_build_rolling:
          requires:
            - build_frontend  
          filters:
            branches:
              only:
                - master
      - docker_build:
          requires:
            - build_frontend
          filters:
            tags:
              only: /[0-9]+(\.[0-9]+)+(\.[0-9]+)*/
            branches:
              ignore: /.*/
