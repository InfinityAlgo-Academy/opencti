import React, { FunctionComponent } from 'react';
import { graphql, PreloadedQuery, usePreloadedQuery } from 'react-relay';
import List from '@mui/material/List';
import ListItemIcon from '@mui/material/ListItemIcon';
import Skeleton from '@mui/material/Skeleton';
import ListItemText from '@mui/material/ListItemText';
import ListItem from '@mui/material/ListItem';
import makeStyles from '@mui/styles/makeStyles';
import { Theme } from '../../../../components/Theme';
import useQueryLoading from '../../../../utils/hooks/useQueryLoading';
import {
  StixCyberObservableMalwareAnalysesQuery,
  StixCyberObservableMalwareAnalysesQuery$variables,
} from './__generated__/StixCyberObservableMalwareAnalysesQuery.graphql';
import { MalwareAnalysesFilter } from './__generated__/SCOMalwareAnalysesQuery.graphql';
import usePreloadedPaginationFragment from '../../../../utils/hooks/usePreloadedPaginationFragment';

const useStyles = makeStyles<Theme>((theme) => ({
  itemIcon: {
    color: theme.palette.primary.main,
  },
  submitted: {
    float: 'left',
    width: '20%',
    height: 20,
    whiteSpace: 'nowrap',
    overflow: 'hidden',
    textOverflow: 'ellipsis',
  },
  result_name: {
    float: 'left',
    width: '50%',
    height: 20,
    whiteSpace: 'nowrap',
    overflow: 'hidden',
    textOverflow: 'ellipsis',
  },
  created_at: {
    float: 'left',
    height: 20,
    whiteSpace: 'nowrap',
    overflow: 'hidden',
    textOverflow: 'ellipsis',
  },
}));

interface StixCyberObservableMalwareAnalysesComponentProps {
  stixCyberObservableId: string
}

interface MalwareAnalysesTrucProps {
  queryRef: PreloadedQuery<StixCyberObservableMalwareAnalysesQuery>
}

const query = graphql`
  query StixCyberObservableMalwareAnalysesQuery(
    $filters: [MalwareAnalysesFiltering!]
  ) {
    malwareAnalyses(filters: $filters) {
      edges {
        node {
          ... StixCyberObservableMalwareAnalyses_data
        }
      }
    }
  }
`;

const fragment = graphql`
  fragment StixCyberObservableMalwareAnalyses_data on MalwareAnalysis {
    id
    result_name
    submitted
    entity_type
    created_at
  }
`;

const MalwareAnalysesTruc: FunctionComponent<MalwareAnalysesTrucProps> = ({ queryRef }) => {
  const data = usePreloadedQuery<StixCyberObservableMalwareAnalysesQuery>(query, queryRef);


  console.log(data.malwareAnalyses);

  return (
    <>
      <p>{'data.malwareAnalyses'}</p>
    </>
  );
};

export const StixCyberObservableMalwareAnalyses: FunctionComponent<StixCyberObservableMalwareAnalysesComponentProps> = ({ stixCyberObservableId }) => {
  const classes = useStyles();

  // const options: StixCyberObservableMalwareAnalysesQuery$variables = {
  //   filters: [
  //     { key: ['sample' as MalwareAnalysesFilter], values: [stixCyberObservableId] },
  //   ],
  // };
  //
  const queryRef = useQueryLoading<StixCyberObservableMalwareAnalysesQuery>(query, {});

  // const malwareAnalysis = {
  //   id: 'fake-id',
  //   result_name: 'fake-result_name',
  //   submitted: '',
  //   entity_type: '',
  //   created_at: '',
  // };
  return (
    <List>
      {queryRef && (
        <React.Suspense fallback={
          <>{Array(3).fill(0).map((index) => (
            <ListItem
              key={index}
              dense={true}
              divider={true}
            >
              <ListItemIcon classes={{ root: classes.itemIcon }}>
                <Skeleton
                  animation="wave"
                  variant="circular"
                  width={30}
                  height={30}
                />
              </ListItemIcon>
              <ListItemText
                primary={
                  <Skeleton
                    animation="wave"
                    variant="rectangular"
                    width="90%"
                    height={15}
                    style={{ marginBottom: 10 }}
                  />
                }
                secondary={
                  <Skeleton
                    animation="wave"
                    variant="rectangular"
                    width="90%"
                    height={15}
                  />
                }
              />
            </ListItem>
          ))}</>
        }>
          <MalwareAnalysesTruc queryRef={queryRef} />
        </React.Suspense>
      )}
    </List>
  );
};
//
// <ListItem
//   key={malwareAnalysis.id}
//   classes={{ root: classes.item }}
//   divider={true}
//   button={true}
//   component={Link}
//   to={`/dashboard/analysis/malware_analyses/${malwareAnalysis.id}`}
// >
//   <ListItemIcon classes={{ root: classes.itemIcon }}>
//     <ItemIcon type={malwareAnalysis.entity_type}/>
//   </ListItemIcon>
//   <ListItemText
//     primary={
//       <div>
//         <div
//           className={classes.bodyItem}
//           // style={classes.submitted}
//         >
//           {malwareAnalysis.submitted}
//         </div>
//         <div
//           className={classes.bodyItem}
//           // style={classes.result_name}
//         >
//           {malwareAnalysis.result_name}
//         </div>
//         <div
//           className={classes.bodyItem}
//           // style={classes.created_at}
//         >
//           {fd(malwareAnalysis.created_at)}
//         </div>
//       </div>
//     }
//   />
// </ListItem>
