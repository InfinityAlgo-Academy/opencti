import React, { Component } from 'react';
import PropTypes from 'prop-types';
import { Route, withRouter } from 'react-router-dom';
import { compose } from 'ramda';
import { createFragmentContainer } from 'react-relay';
import graphql from 'babel-plugin-relay/macro';
import { withStyles } from '@material-ui/core/styles';
import inject18n from '../../../../components/i18n';
import EntityStixCoreRelationships from '../../common/stix_core_relationships/EntityStixCoreRelationships';
import StixDomainObjectThreatKnowledge from '../../common/stix_domain_objects/StixDomainObjectThreatKnowledge';
import StixCoreRelationship from '../../common/stix_core_relationships/StixCoreRelationship';
import MalwarePopover from './MalwarePopover';
import MalwareKnowledgeBar from './MalwareKnowledgeBar';
import StixDomainObjectHeader from '../../common/stix_domain_objects/StixDomainObjectHeader';
import StixDomainObjectKillChain from '../../common/stix_domain_objects/StixDomainObjectKillChain';
import StixDomainObjectVictimology from '../../common/stix_domain_objects/StixDomainObjectVictimology';

const styles = () => ({
  container: {
    margin: 0,
    padding: '0 260px 0 0',
  },
});

class MalwareKnowledgeComponent extends Component {
  render() {
    const { classes, malware } = this.props;
    const link = `/dashboard/threats/malwares/${malware.id}/knowledge`;
    return (
      <div className={classes.container}>
        <StixDomainObjectHeader
          stixDomainObject={malware}
          PopoverComponent={<MalwarePopover />}
        />
        <MalwareKnowledgeBar malwareId={malware.id} />
        <Route
          exact
          path="/dashboard/threats/malwares/:malwareId/knowledge/relations/:relationId"
          render={(routeProps) => (
            <StixCoreRelationship
              entityId={malware.id}
              paddingRight={true}
              {...routeProps}
            />
          )}
        />
        <Route
          exact
          path="/dashboard/threats/malwares/:malwareId/knowledge/overview"
          render={(routeProps) => (
            <StixDomainObjectThreatKnowledge
              stixDomainObjectId={malware.id}
              stixDomainObjectType="malware"
              {...routeProps}
            />
          )}
        />
        <Route
          exact
          path="/dashboard/threats/malwares/:malwareId/knowledge/attribution"
          render={(routeProps) => (
            <EntityStixCoreRelationships
              entityId={malware.id}
              relationType="attributed-to"
              targetEntityTypes={['Threat-Actor', 'Organization', 'User']}
              entityLink={link}
              creationIsFrom={true}
              {...routeProps}
            />
          )}
        />
        <Route
          exact
          path="/dashboard/threats/malwares/:malwareId/knowledge/usage"
          render={(routeProps) => (
            <EntityStixCoreRelationships
              entityId={malware.id}
              relationType="uses"
              targetEntityTypes={['Threat-Actor', 'Intrusion-Set']}
              entityLink={link}
              creationIsFrom={false}
              {...routeProps}
            />
          )}
        />
        <Route
          exact
          path="/dashboard/threats/malwares/:malwareId/knowledge/variants"
          render={(routeProps) => (
            <EntityStixCoreRelationships
              entityId={malware.id}
              relationType="variant-of"
              targetEntityTypes={['Malware']}
              entityLink={link}
              creationIsFrom={true}
              {...routeProps}
            />
          )}
        />
        <Route
          exact
          path="/dashboard/threats/malwares/:malwareId/knowledge/campaigns"
          render={(routeProps) => (
            <EntityStixCoreRelationships
              entityId={malware.id}
              relationType="uses"
              targetEntityTypes={['Campaign']}
              entityLink={link}
              creationIsFrom={false}
              {...routeProps}
            />
          )}
        />
        <Route
          exact
          path="/dashboard/threats/malwares/:malwareId/knowledge/incidents"
          render={(routeProps) => (
            <EntityStixCoreRelationships
              entityId={malware.id}
              relationType="uses"
              targetEntityTypes={['Incident']}
              entityLink={link}
              creationIsFrom={false}
              {...routeProps}
            />
          )}
        />
        <Route
          exact
          path="/dashboard/threats/malwares/:malwareId/knowledge/victimology"
          render={(routeProps) => (
            <StixDomainObjectVictimology
              stixDomainObjectId={malware.id}
              entityLink={link}
              {...routeProps}
            />
          )}
        />
        <Route
          exact
          path="/dashboard/threats/malwares/:malwareId/knowledge/ttp"
          render={(routeProps) => (
            <StixDomainObjectKillChain
              stixDomainObjectId={malware.id}
              entityLink={link}
              {...routeProps}
            />
          )}
        />
        <Route
          exact
          path="/dashboard/threats/malwares/:malwareId/knowledge/tools"
          render={(routeProps) => (
            <EntityStixCoreRelationships
              entityId={malware.id}
              relationType="uses"
              targetEntityTypes={['Tool']}
              entityLink={link}
              creationIsFrom={true}
              {...routeProps}
            />
          )}
        />
        <Route
          exact
          path="/dashboard/threats/malwares/:malwareId/knowledge/vulnerabilities"
          render={(routeProps) => (
            <EntityStixCoreRelationships
              entityId={malware.id}
              relationType="targets"
              targetEntityTypes={['Vulnerability']}
              entityLink={link}
              creationIsFrom={true}
              {...routeProps}
            />
          )}
        />
      </div>
    );
  }
}

MalwareKnowledgeComponent.propTypes = {
  malware: PropTypes.object,
  classes: PropTypes.object,
  t: PropTypes.func,
};

const MalwareKnowledge = createFragmentContainer(MalwareKnowledgeComponent, {
  malware: graphql`
    fragment MalwareKnowledge_malware on Malware {
      id
      name
      alias
    }
  `,
});

export default compose(
  inject18n,
  withRouter,
  withStyles(styles),
)(MalwareKnowledge);
