import { assoc, isNil, pipe } from 'ramda';
import { createEntity, FROM_START, listEntities, loadById, UNTIL_END } from '../database/middleware';
import { BUS_TOPICS } from '../config/conf';
import { notify } from '../database/redis';
import { ENTITY_TYPE_MALWARE } from '../schema/stixDomainObject';
import { ABSTRACT_STIX_DOMAIN_OBJECT } from '../schema/general';

export const findById = (malwareId) => {
  return loadById(malwareId, ENTITY_TYPE_MALWARE);
};

export const findAll = (args) => {
  return listEntities([ENTITY_TYPE_MALWARE], args);
};

export const addMalware = async (user, malware) => {
  const malwareToCreate = pipe(
    assoc('first_seen', isNil(malware.first_seen) ? new Date(FROM_START) : malware.first_seen),
    assoc('last_seen', isNil(malware.last_seen) ? new Date(UNTIL_END) : malware.last_seen)
  )(malware);
  const created = await createEntity(user, malwareToCreate, ENTITY_TYPE_MALWARE);
  return notify(BUS_TOPICS[ABSTRACT_STIX_DOMAIN_OBJECT].ADDED_TOPIC, created, user);
};
