  # Query Extensions
  extend type Query {
    networkAssetList(
        first: Int
        offset: Int
        orderedBy: NetworkAssetOrdering
        orderMode: OrderingMode
        filters: [NetworkAssetFiltering]
        filterMode: FilterMode
        search: String
      ): NetworkAssetConnection
    networkAsset(id: ID!): NetworkAsset
  }

  extend type Mutation {
    createNetworkAsset(input: NetworkAssetAddInput): NetworkAsset
    deleteNetworkAsset(id: ID!): String!
    editNetworkAsset(id: ID!, input: [EditInput]!, commitMessage: String): NetworkAsset
  }

  # Query Types
  "Defines identifying information about a network."
  type NetworkAsset implements BasicObject & LifecycleObject & CoreObject & Asset & ItAsset {
    # BasicObject
    "Uniquely identifies this object."
    id: ID!
    "Identifies the identifier defined by the standard."
    standard_id: String!
    "Identifies the type of the Object."
    entity_type: String!
    "Identifies the parent types of this object."
    parent_types: [String]!
    # CoreObject
    created: Timestamp
    modified: Timestamp
    labels: [String]
    # Asset
    asset_id: String
    name: String!
    description: String
    locations: [AssetLocation]
    external_references( first: Int ): CyioExternalReferenceConnection
    notes( first: Int ): CyioNoteConnection
    # ItAsset
    asset_tag: String
    asset_type: AssetType!
    serial_number: String
    vendor_name: String
    version: String
    release_date: Timestamp
    implementation_point: ImplementationPoint
    operational_status: OperationalStatus
    # responsible_parties: [ResponsibleParty]
    # NetworkAsset
    network_id: String!
    network_name: String
    network_address_range: IpAddressRange
    is_publicly_accessible: Boolean
    is_scanned: Boolean
    last_scanned: Timestamp
  }

  # Mutation Types
  input NetworkAssetAddInput {
    labels: [String]
    # Asset
    asset_id: String
    name: String!
    description: String
    # ItAsset
    asset_tag: String
    asset_type: AssetType!
    serial_number: String
    vendor_name: String
    version: String
    release_date: Timestamp
    implementation_point: ImplementationPoint
    operational_status: OperationalStatus
    # NetworkAsset
    network_id: String!
    network_name: String!
    network_ipv4_address_range: IpV4AddressRangeAddInput
    network_ipv6_address_range: IpV6AddressRangeAddInput
    is_publicly_accessible: Boolean
    is_scanned: Boolean
    last_scanned: Timestamp
  }

  input NetworkAssetFiltering {
    key: NetworkAssetFilter!
    values: [String]
    operator: String
    filterMode: FilterMode 
  }

  # Pagination Types
  type NetworkAssetConnection {
    pageInfo: PageInfo!
    edges: [NetworkAssetEdge]
  }

  type NetworkAssetEdge {
    cursor: String!
    node: NetworkAsset!
  }

  enum NetworkAssetOrdering {
    "Name"
    name
    "Asset ID"
    asset_id
    "Network ID"
    network_id
    "Labels"
    labels
  }

  "Defines the list of fields that can be filtered upon for Network Assets."
  enum NetworkAssetFilter {
    "Created"
    created       # Created before/Created after (key: created, values: ["2021-11-10"], operator: "gt|lt")
    "Modified"
    modified      # Modified before/Created after (key: created, values: ["2021-11-10"], operator: "gt|lt")
    "Name"
    name          # Name (key:name, values: ["name1","name2"], operator: "matches", filterMode: "or")
    "Labels"
    labels        # Label (key:labels, values:["label1","label2"], operator: "matches", filterMode: "or")
    "Network ID"
    network_id
    "Is Publicly Accessible"
    is_publicly_accessible
  }

  # this is used to restrict the set of asset_types values that are allowed in a filter
  "Defines the list of Network assets types that can be used in filtering"
  enum NetworkAssetTypes {
    "Network"
    network
  }
