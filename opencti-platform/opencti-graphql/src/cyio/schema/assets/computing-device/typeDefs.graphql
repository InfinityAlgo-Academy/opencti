  extend type Query {
      computingDeviceAssetList(
          first: Int
          offset: Int
          orderedBy: ComputingDeviceAssetOrdering
          orderMode: OrderingMode
          filters: [ComputingDeviceAssetFiltering]
          filterMode: FilterMode
          search: String
        ): ComputingDeviceAssetConnection
      computingDeviceAsset(id: ID!): ComputingDeviceAsset
  }

  extend type Mutation {
      createComputingDeviceAsset(input: ComputingDeviceAssetAddInput): ComputingDeviceAsset
      deleteComputingDeviceAsset(id: ID!): String!
      editComputingDeviceAsset(id: ID!, input: [EditInput]!, commitMessage: String): ComputingDeviceAsset
  }

  "Defines identifying information about a network."
  type ComputingDeviceAsset implements BasicObject & LifecycleObject & CoreObject & Asset & ItAsset {
    # BasicObject
    "Uniquely identifies this object."
    id: ID!
    "Identifies the identifier defined by the standard."
    standard_id: String!
    "Identifies the type of the Object."
    entity_type: String!
    "Identifies the parent types of this object."
    parent_types: [String]!
    # CoreObject
    created: DateTime
    modified: DateTime
    labels: [String]
    # Asset
    asset_id: String
    name: String!
    description: String
    locations: [AssetLocation]
    external_references( first: Int ): CyioExternalReferenceConnection
    notes( first: Int ): CyioNoteConnection
    # ItAsset
    asset_tag: String
    asset_type: AssetType!
    serial_number: String
    vendor_name: String
    version: String
    release_date: DateTime
    implementation_point: ImplementationPoint
    operational_status: OperationalStatus
    # responsible_parties: [ResponsibleParty]
    # HardwareAsset
    cpe_identifier: String
    installation_id: String
    installed_hardware: [ComputingDeviceAsset]
    installed_operating_system: OperatingSystemAsset
    model: String
    motherboard_id: String
    baseline_configuration_name: String
    function: String
    # Computing Device
    bios_id: String
    connected_to_network: NetworkAsset
    default_gateway: String
    fqdn: String
    hostname: String
    netbios_name: String
    installed_software: [SoftwareAsset]
    ipv4_address: [IpV4Address]
    ipv6_address: [IpV6Address]
#    mac_address: [MACAddress]     this is what it should be because MAC address are objects
    mac_address: [MAC]
    network_id: String
    vlan_id: String
    uri: URL
    ports: [PortInfo!]!
    is_publicly_accessible: Boolean
    is_scanned: Boolean
    is_virtual: Boolean
  }

  "Defines identifying information about infrastructure server device that perform generic computing capabilities."
  type ServerAsset implements BasicObject & LifecycleObject & CoreObject & Asset & ItAsset {
    # BasicObject
    "Uniquely identifies this object."
    id: ID!
    "Identifies the identifier defined by the standard."
    standard_id: String!
    "Identifies the type of the Object."
    entity_type: String!
    "Identifies the parent types of this object."
    parent_types: [String]!
    # CoreObject
    created: DateTime
    modified: DateTime
    labels: [String]
    # Asset
    asset_id: String
    name: String!
    description: String
    locations: [AssetLocation]
    external_references( first: Int ): CyioExternalReferenceConnection
    notes( first: Int ): CyioNoteConnection
    # ItAsset
    asset_tag: String
    asset_type: AssetType!
    serial_number: String
    vendor_name: String
    version: String
    release_date: DateTime
    implementation_point: ImplementationPoint
    operational_status: OperationalStatus
    # responsible_parties: [ResponsibleParty]
    # HardwareAsset
    cpe_identifier: String
    installation_id: String
    installed_hardware: [ComputingDeviceAsset]
    installed_operating_system: OperatingSystemAsset
    model: String
    motherboard_id: String
    baseline_configuration_name: String
    function: String
    # Computing Device
    bios_id: String
    connected_to_network: NetworkAsset
    default_gateway: String
    fqdn: String
    hostname: String
    netbios_name: String
    installed_software: [SoftwareAsset]
    ipv4_address: [IpV4Address]
    ipv6_address: [IpV6Address]
#    mac_address: [MACAddress]     this is what it should be because MAC address are objects
    mac_address: [MAC]
    vlan_id: String
    uri: String
    ports: [PortInfo!]!
    is_publicly_accessible: Boolean
    is_scanned: Boolean
    is_virtual: Boolean
  }

  "Defines identifying information about a workstation that perform generic computing capabilities."
  type WorkstationAsset implements BasicObject & LifecycleObject & CoreObject & Asset & ItAsset {
    # BasicObject
    "Uniquely identifies this object."
    id: ID!
    "Identifies the identifier defined by the standard."
    standard_id: String!
    "Identifies the type of the Object."
    entity_type: String!
    "Identifies the parent types of this object."
    parent_types: [String]!
    # CoreObject
    created: DateTime
    modified: DateTime
    labels: [String]
    # Asset
    asset_id: String
    name: String!
    description: String
    locations: [AssetLocation]
    external_references( first: Int ): CyioExternalReferenceConnection
    notes( first: Int ): CyioNoteConnection
    # ItAsset
    asset_tag: String
    asset_type: AssetType!
    serial_number: String
    vendor_name: String
    version: String
    release_date: DateTime
    implementation_point: ImplementationPoint
    operational_status: OperationalStatus
    # responsible_parties: [ResponsibleParty]
    # HardwareAsset
    cpe_identifier: String
    installation_id: String
    installed_hardware: [ComputingDeviceAsset]
    installed_operating_system: OperatingSystemAsset
    model: String
    motherboard_id: String
    baseline_configuration_name: String
    function: String
    # Computing Device
    bios_id: String
    connected_to_network: NetworkAsset
    default_gateway: String
    fqdn: String
    hostname: String
    netbios_name: String
    installed_software: [SoftwareAsset]
    ipv4_address: [IpV4Address]
    ipv6_address: [IpV6Address]
#    mac_address: [MACAddress]     this is what it should be because MAC address are objects
    mac_address: [MAC]
    vlan_id: String
    uri: String
    ports: [PortInfo!]!
    is_publicly_accessible: Boolean
    is_scanned: Boolean
    is_virtual: Boolean
  }

  # Mutation Types
  input ComputingDeviceAssetAddInput {
    labels: [String]
    # Asset
    asset_id: String
    name: String!
    description: String
    # ItAsset
    asset_tag: String
    asset_type: AssetType!
    serial_number: String
    vendor_name: String
    version: String
    release_date: DateTime
    implementation_point: ImplementationPoint
    operational_status: OperationalStatus
    # responsible_parties: [ResponsibleParty]
    # HardwareAsset
    cpe_identifier: String
    installation_id: String
    model: String
    motherboard_id: String
    baseline_configuration_name: String
    function: String
    # Computing Device
    bios_id: String
    default_gateway: String
    fqdn: String
    hostname: String
    netbios_name: String
    ipv4_address: [IpV4AddressAddInput]
    ipv6_address: [IpV6AddressAddInput]
#    mac_address: [MACAddressAddInput]     this is what it should be because MAC address are objects
    mac_address: [MAC]
    network_id: String
    vlan_id: String
    uri: URL
    ports: [PortInfoAddInput!]!
    is_publicly_accessible: Boolean
    is_scanned: Boolean
    is_virtual: Boolean
  }

  # Pagination Types
  type ComputingDeviceAssetConnection {
    pageInfo: PageInfo!
    edges: [ComputingDeviceAssetEdge]
  }

  type ComputingDeviceAssetEdge {
    cursor: String!
    node: ComputingDeviceAsset!
  }

  # Slicing Types
  enum ComputingDeviceAssetOrdering {
    name
    asset_type
    asset_id
    ip_address
    installed_operating_system
    network_id
    labels
  }

  # Filtering Types
  input ComputingDeviceAssetFiltering {
    key: ComputingDeviceAssetFilter!
    values: [String]
    operator: String            # match, wildcard, gt, lt, gte, lte, eq, ne
    filterMode: FilterMode      # unused
  }

  "Defines the list of fields that can be filtered upon for Device Assets."
  enum ComputingDeviceAssetFilter {
    created       # Created before/Created after (key: created, values: ["2021-11-10"], operator: "gt|lt")
    modified      # Modified before/Mreated after (key: created, values: ["2021-11-10"], operator: "gt|lt")
    name          # Name (key:name, values: ["name1","name2"], operator: "matches", filterMode: "or")
    asset_type    # Asset Type (key:asset_type, values: ["type1","type2","type3"], operator: "matches", filterMode: "or")
    labels        # Label (key:labels, values:["label1","label2"], operator: "matches", filterMode: "or")
    ip_address
    installed_operating_system
    network_id
  }

  # this is used to restrict the set of asset_types values that are allowed in a filter
  "Defines the list of Device assets types that can be used in filtering"
  enum DeviceAssetTypes {
    "Computing Device"
    computing_device
    "Appliance"
    appliance
    "Workstation"
    workstation
    "Network Device"
    network_device
    "Load Balancer"
    load_balancer
    "Router"
    router
    "Switch"
    switch
    "Printer"
    printer
    "Storage Array"
    storage_array
    "VoIP Device"
    voip_device
    "Physical Device"
    physical_device
  }

  union ComputingDeviceKind = ComputingDeviceAsset | ServerAsset | WorkstationAsset 

