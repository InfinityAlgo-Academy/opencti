# contains common type definitions used across OSCAL objects
# declares the query entry-points for this type
extend type Query {
  # OSCAL Location
  oscalLocation(id: ID!): OscalLocation
  oscalLocations(
    first: Int
    offset: Int
    orderedBy: OscalLocationOrdering
    orderMode: OrderingMode
    filters: [OscalLocationFiltering]
    filterMode: FilterMode
    search: String
  ): OscalLocationConnection
  # OSCAL Party
  oscalParty(id: ID!): OscalParty
  oscalParties(
    first: Int
    offset: Int
    orderedBy: OscalPartyOrdering
    orderMode: OrderingMode
    filters: [OscalPartyFiltering]
    filterMode: FilterMode
    search: String
  ): OscalPartyConnection
  # OSCAL Relationship
  oscalRelationship(id: ID!): OscalRelationship
  oscalRelationships(
    first: Int
    offset: Int
    orderedBy: OscalRelationshipsOrdering
    orderMode: OrderingMode
    filters: [OscalRelationshipsFiltering]
    filterMode: FilterMode
    search: String
  ): OscalRelationshipConnection
  # OSCAL Resource
  oscalResource(id: ID!): OscalResource
  oscalResources(
    first: Int
    offset: Int
    orderedBy: OscalResourcesOrdering
    orderMode: OrderingMode
    filters: [OscalResourcesFiltering]
    filterMode: FilterMode
    search: String
  ): OscalResourceConnection
  # OSCAL Responsible Party
  oscalResponsibleParty(id: ID!): OscalResponsibleParty
  oscalResponsibleParties(
    first: Int
    offset: Int
    orderedBy: OscalResponsiblePartyOrdering
    orderMode: OrderingMode
    filters: [OscalResponsiblePartyFiltering]
    filterMode: FilterMode
    search: String
  ): OscalResponsiblePartyConnection
  # OSCAL Responsible Role
  oscalResponsibleRole(id: ID!): OscalResponsibleRole
  oscalResponsibleRoles(
    first: Int
    offset: Int
    orderedBy: OscalResponsibleRoleOrdering
    orderMode: OrderingMode
    filters: [OscalResponsibleRoleFiltering]
    filterMode: FilterMode
    search: String
  ): OscalResponsibleRoleConnection
  # OSCAL Role
  oscalRole(id: ID!): OscalRole
  oscalRoles(
    first: Int
    offset: Int
    orderedBy: OscalRolesOrdering
    orderMode: OrderingMode
    filters: [OscalRolesFiltering]
    filterMode: FilterMode
    search: String
  ): OscalRoleConnection
  # OSCAL User
  oscalUser(id: ID!): OscalUser
  oscalUsers(
    first: Int
    offset: Int
    orderedBy: OscalUsersOrdering
    orderMode: OrderingMode
    filters: [OscalUsersFiltering]
    filterMode: FilterMode
    search: String
  ): OscalUserConnection
}

# declares the mutation entry-points for this type
extend type Mutation {
  # Base64Content
  createBase64Content(input: Base64ContentAddInput): Base64Content
  deleteBase64Content(id: ID!): String!
  editBase64Content(
    id: ID!
    input: [EditInput]!
    commitMessage: String
  ): Base64Content
  # Citation
  createCitation(input: CitationAddInput): Citation
  deleteCitation(id: ID!): String!
  editCitation(id: ID!, input: [EditInput]!, commitMessage: String): Citation
  # OSCAL Location
  createOscalLocation(input: OscalLocationAddInput): OscalLocation
  deleteOscalLocation(id: ID!): String!
  editOscalLocation(
    id: ID!
    input: [EditInput]!
    commitMessage: String
  ): OscalLocation
  # OSCAL Party
  createOscalParty(input: OscalPartyAddInput): OscalParty
  deleteOscalParty(id: ID!): String!
  editOscalParty(
    id: ID!
    input: [EditInput]!
    commitMessage: String
  ): OscalParty
  # OSCAL Relationship
  createOscalRelationship(input: OscalRelationshipAddInput): OscalRelationship
  deleteOscalRelationship(id: ID!): String!
  editOscalRelationship(
    id: ID!
    input: [EditInput]!
    commitMessage: String
  ): OscalRelationship
  # OSCAL Resource
  createOscalResource(input: OscalResourceAddInput): OscalResource
  deleteOscalResource(id: ID!): String!
  editOscalResource(
    id: ID!
    input: [EditInput]!
    commitMessage: String
  ): OscalResource
  # OSCAL Responsible Party
  createOscalResponsibleParty(
    input: OscalResponsiblePartyAddInput
  ): OscalResponsibleParty
  deleteOscalResponsibleParty(id: ID!): String!
  editOscalResponsibleParty(
    id: ID!
    input: [EditInput]!
    commitMessage: String
  ): OscalResponsibleParty
  # OSCAL Responsible Role
  createOscalResponsibleRole(
    input: OscalResponsibleRoleAddInput
  ): OscalResponsibleRole
  deleteOscalResponsibleRole(id: ID!): String!
  editOscalResponsibleRole(
    id: ID!
    input: [EditInput]!
    commitMessage: String
  ): OscalResponsibleRole
  # OSCAL Role
  createOscalRole(input: OscalRoleAddInput): OscalRole
  deleteOscalRole(id: ID!): String!
  editOscalRole(id: ID!, input: [EditInput]!, commitMessage: String): OscalRole
  # OSCAL User
  createOscalUser(input: OscalUserAddInput): OscalUser
  deleteOscalUser(id: ID!): String!
  editOscalUser(id: ID!, input: [EditInput]!, commitMessage: String): OscalUser
  # Export OSCAL Model
  exportOscal(model: OscalModelType, id: ID, media_type: OscalMediaType): ID
  # Generate Report
  generateRiskReport(
    report: RiskReportType!
    id: ID
    media_type: ReportMediaType
    options: [RiskReportOption]
  ): ID
}

##### OSCAL Model
##
"Defines identifying information about an OSCAL Model."
interface Model {
  # BasicObject
  "Uniquely identifies this object."
  id: ID!
  "Identifies the identifier defined by the standard."
  standard_id: String!
  "Identifies the type of the Object."
  entity_type: String!
  "Identifies the parent types of this object."
  parent_types: [String]!
  # LifecycleObject
  "Indicates the date and time at which the object was originally created."
  created: Timestamp
  "Indicates the date and time that this particular version of the object was last modified."
  modified: Timestamp
  # OscalObject
  "Identifies a set of terms used to describe this object. The terms are user-defined or trust-group defined."
  labels: [CyioLabel]
  "Identifies a list of CyioExternalReferences, each of which refers to information external to the data model. This property is used to provide one or more URLs, descriptions, or IDs to records in other systems."
  links: [CyioExternalReference]
  "Identifies one or more references to additional commentary on the Model."
  remarks: [CyioNote]
  "Identifies one or more relationships to other entities."
  relationships(
    first: Int
    offset: Int
    orderedBy: OscalRelationshipsOrdering
    orderMode: OrderingMode
    filters: [OscalRelationshipsFiltering]
    filterMode: FilterMode
    search: String
  ): OscalRelationshipConnection
  # Metadata
  "Identifies the name given to the document."
  name: String!
  "Identifies the date and time the document was published."
  published: Timestamp
  "Identifies the date and time the document as last modified."
  last_modified: Timestamp
  "Identifies the current version of the document."
  version: String!
  "Identifies the OSCAL model version the document was authored against."
  oscal_version: String!
  "Identifies a list of revisions to the containing document."
  revisions: [Revision]
  "Identifies references to previous versions of this document."
  document_ids: [ID]
  "Identifies one or more references to a function assumed or expected to be assumed by a party in a specific situation."
  roles(first: Int, offset: Int): OscalRoleConnection
  "Identifies one or more references to a location."
  locations(first: Int, offset: Int): OscalLocationConnection
  "Identifies one or more references to a responsible entity which is either a person or an organization."
  parties(first: Int, offset: Int): OscalPartyConnection
  "Identifies one or more references to a set of organizations or persons that have responsibility for performing a referenced role in the context of the containing object."
  responsible_parties(first: Int, offset: Int): OscalResponsiblePartyConnection
  # Back-matter
  resources(first: Int, offset: Int): OscalResourceConnection
}

##### OSCAL Object
##
"Defines the identifying information about an OSCAL object."
interface OscalObject {
  # OscalObject
  "Identifies a set of terms used to describe this object. The terms are user-defined or trust-group defined."
  labels: [CyioLabel]
  "Identifies a list of CyioExternalReferences, each of which refers to information external to the data model. This property is used to provide one or more URLs, descriptions, or IDs to records in other systems."
  links: [CyioExternalReference]
  "Identifies one or more references to additional commentary on the Model."
  remarks: [CyioNote]
  "Identifies one or more relationships to other entities."
  relationships(
    first: Int
    offset: Int
    orderedBy: OscalRelationshipsOrdering
    orderMode: OrderingMode
    filters: [OscalRelationshipsFiltering]
    filterMode: FilterMode
    search: String
  ): OscalRelationshipConnection
}

##### OSCAL Location
##
"Defines identifying information about a location."
type OscalLocation implements BasicObject & LifecycleObject & OscalObject {
  # BasicObject
  "Uniquely identifies this object."
  id: ID!
  "Identifies the identifier defined by the standard."
  standard_id: String!
  "Identifies the type of the Object."
  entity_type: String!
  "Identifies the parent types of this object."
  parent_types: [String]!
  # LifecycleObject
  "Indicates the date and time at which the object was originally created."
  created: Timestamp
  "Indicates the date and time that this particular version of the object was last modified."
  modified: Timestamp
  "Identifies a set of terms used to describe this object. The terms are user-defined or trust-group defined."
  labels: [CyioLabel]
  # OscalObject
  "Identifies a list of CyioExternalReferences, each of which refers to information external to the data model. This property is used to provide one or more URLs, descriptions, or IDs to records in other systems."
  links: [CyioExternalReference]
  "Identifies one or more references to additional commentary on the Model."
  remarks: [CyioNote]
  "Identifies one or more relationships to other entities."
  relationships(
    first: Int
    offset: Int
    orderedBy: OscalRelationshipsOrdering
    orderMode: OrderingMode
    filters: [OscalRelationshipsFiltering]
    filterMode: FilterMode
    search: String
  ): OscalRelationshipConnection
  # CyioLocation
  "Identifies the name given to the location."
  name: String!
  "Identifies a brief description of the location."
  description: String
  # Oscal Location
  "Identifies the type of the location."
  location_type: OscalLocationType
  "Identifies the purpose of the location."
  location_class: OscalLocationClass
  "Identifies a postal addresses for the location."
  address: CivicAddress
  "Identifies one or more email addresses for the location."
  email_addresses: [EmailAddress]
  "Identifies one or more telephone numbers used to contact the the location."
  telephone_numbers: [TelephoneNumber]
  "Identifies one or more uniform resource locator (URL) for a web site or Internet presence associated with the location."
  urls: [URL]
}
input OscalLocationAddInput {
  # CyioLocation
  name: String!
  description: String
  # OscalLocation
  location_type: OscalLocationType
  location_class: OscalLocationClass
  address: CivicAddressAddInput
  email_addresses: [EmailAddress]
  telephone_numbers: [TelephoneNumberAddInput]
  urls: [URL]
}
# Ordering
enum OscalLocationOrdering {
  "Created"
  created
  "Modified"
  modified
  "Label"
  label_name
  "Name"
  name
  "Marking"
  marking
}
# Filtering Types
enum OscalLocationFilter {
  "Created"
  created
  "Modified"
  modified
  "Label"
  label_name
  "Name"
  name
}
input OscalLocationFiltering {
  key: OscalLocationFilter!
  values: [String]!
  operator: String
  filterMode: FilterMode
}
# Pagination Types
type OscalLocationConnection {
  pageInfo: PageInfo!
  edges: [OscalLocationEdge]
}
type OscalLocationEdge {
  cursor: String!
  node: OscalLocation!
}
# Object-specific Enumerations
"Characterizes the kind of location."
enum OscalLocationType {
  "A location that contains computing assets."
  data_center
}
"Characterizes the purpose of the location."
enum OscalLocationClass {
  "The location is a data-center used for normal operations."
  primary
  "The location is a data-center used for fail-over or backup operations."
  alternate
}

##### OSCAL Party
##
"Defines identifying information about a Party in OSCAL"
type OscalParty {
  # BasicObject
  "Uniquely identifies this object."
  id: ID!
  "Identifies the identifier defined by the standard."
  standard_id: String!
  "Identifies the type of the Object."
  entity_type: String!
  "Identifies the parent types of this object."
  parent_types: [String]!
  # LifecycleObject
  "Indicates the date and time at which the object was originally created."
  created: Timestamp
  "Indicates the date and time that this particular version of the object was last modified."
  modified: Timestamp
  # OscalObject
  "Identifies a set of terms used to describe this object. The terms are user-defined or trust-group defined."
  labels: [CyioLabel]
  "Identifies a list of CyioExternalReferences, each of which refers to information external to the data model. This property is used to provide one or more URLs, descriptions, or IDs to records in other systems."
  links: [CyioExternalReference]
  "Identifies one or more references to additional commentary on the Model."
  remarks: [CyioNote]
  "Identifies one or more relationships to other entities."
  relationships(
    first: Int
    offset: Int
    orderedBy: OscalRelationshipsOrdering
    orderMode: OrderingMode
    filters: [OscalRelationshipsFiltering]
    filterMode: FilterMode
    search: String
  ): OscalRelationshipConnection
  # CyioIdentity
  "Identifies the name given to the party."
  name: String!
  "Identifies a brief description of the Party."
  description: String
  # OscalParty
  "Identifies the kind of party the object describes."
  party_type: PartyType!
  "Identifies a short common name, abbreviation, or acronym for the party."
  short_name: String
  "Identifies one or more external identifiers for a person or organization using a designated scheme. e.g. an Open Researcher and Contributor ID (ORCID)."
  external_identifiers: [ExternalIdentifier]
  "Identifies a postal addresses for the location."
  addresses: [CivicAddress]
  "Identifies one or more email addresses for the location."
  email_addresses: [EmailAddress]
  "Identifies one or more telephone numbers used to contact the the location."
  telephone_numbers: [TelephoneNumber]
  "Identifies one or more references to a location."
  locations: [OscalLocation]
  "Identifies a mail stop associated with the party."
  mail_stop: String
  "Identifies the  name or number of the party's office."
  office: String
  "Identifies that the party object is a member of this organization."
  member_of_organizations: [OscalParty]
  "Identifes the formal job title of this person"
  job_title: String
}
input OscalPartyAddInput {
  # OscalParty
  "Identifies the kind of party the object describes."
  party_type: PartyType!
  "Identifies the name given to the party."
  name: String!
  "Identifies a short common name, abbreviation, or acronym for the party."
  short_name: String
  "Identifies a brief description of the Party."
  description: String
  "Identifies one or more external identifiers for a person or organization using a designated scheme. e.g. an Open Researcher and Contributor ID (ORCID)."
  external_identifiers: [ExternalIdentifierAddInput]
  "Identifies one or more email addresses for the location."
  email_addresses: [EmailAddress]
  "Identifies one or more telephone numbers used to contact the the location."
  telephone_numbers: [TelephoneNumberAddInput]
  "Identifies a postal addresses for the location."
  addresses: [CivicAddressAddInput]
  "Identifies one or more references to a location."
  locations: [ID]
  "Identifies a mail stop associated with the party."
  mail_stop: String
  "Identifies the  name or number of the party's office."
  office: String
  "Identifies that the party object is a member of the organization."
  member_of_organizations: [ID]
  "Identifes the formal job title of this person"
  job_title: String
}
# Ordering Type
enum OscalPartyOrdering {
  "Created"
  created
  "Modified"
  modified
  "Label"
  label_name
  "Name"
  name
  "Party Type"
  party_type
  "Marking"
  marking
}
# Filtering Types
enum OscalPartyFilter {
  "Created"
  created
  "Modified"
  modified
  "Label"
  label_name
  "Name"
  name
  "Party Type"
  party_type
}
input OscalPartyFiltering {
  key: OscalPartyFilter!
  values: [String]!
  operator: String
  filterMode: FilterMode
}
# Pagination Types
type OscalPartyConnection {
  pageInfo: PageInfo!
  edges: [OscalPartyEdge]
}
type OscalPartyEdge {
  cursor: String!
  node: OscalParty!
}
# Object-specific Enumerations
"Characterizes the type of the party."
enum PartyType {
  "Indicates the party is a person"
  person
  "Indicates the party is an organization"
  organization
}

##### OSCAL Relationship
##
"Defines identifying information about a relationship in OSCAL"
type OscalRelationship {
  # BasicObject
  "Uniquely identifies this object."
  id: ID!
  "Identifies the identifier defined by the standard."
  standard_id: String!
  "Identifies the type of the Object."
  entity_type: String!
  "Identifies the parent types of this object."
  parent_types: [String]!
  # CoreObject
  "Indicates the date and time at which the object was originally created."
  created: Timestamp
  "Indicates the date and time that this particular version of the object was last modified."
  modified: Timestamp
  # OscalObject
  "Identifies a set of terms used to describe this object. The terms are user-defined or trust-group defined."
  labels: [CyioLabel]
  "Identifies a list of CyioExternalReferences, each of which refers to information external to the data model. This property is used to provide one or more URLs, descriptions, or IDs to records in other systems."
  links: [CyioExternalReference]
  "Identifies one or more references to additional commentary on the Model."
  remarks: [CyioNote]
  # OscalRelationship
  "Identifies the type of the relationship"
  relationship_type: String!
  "Identifies a human-readable description about the relationship"
  description: String
  "Identifies the source of the relationship"
  source: ID
  "Identifies the target of the relationship"
  target: ID
  "Indicates the time and date when the relationship was first established"
  valid_from: Timestamp
  "Indicates the time and date when the relationship was terminated."
  valid_until: Timestamp
  "Identifies the level of confidence in the assertion."
  confidence: PositiveInt
}
input OscalRelationshipAddInput {
  # OscalRelationship
  "Identifies the type of the relationship"
  relationship_type: String!
  "Identifies a human-readable description about the relationship"
  description: String
  "Identifies the source of the relationship"
  source: ID
  "Identifies the target of the relationship"
  target: ID
  "Indicates the time and date when the relationship was first established"
  valid_from: Timestamp
  "Indicates the time and date when the relationship was terminated."
  valid_until: Timestamp
  "Identifies the level of confidence in the assertion."
  confidence: PositiveInt
}
# Ordering
enum OscalRelationshipsOrdering {
  "Relationship Type"
  relationship_type
  "Created"
  created
  "Modified"
  modified
  "Confidence"
  confidence
  "Valid From"
  valid_from
  "Valid To"
  valid_until
}
# Filtering
input OscalRelationshipsFiltering {
  key: OscalRelationshipsFilter!
  values: [String]
  operator: String
  filterMode: FilterMode
}
enum OscalRelationshipsFilter {
  "Source"
  source
  "Target"
  target
  "Created"
  created
  "Modified"
  modified
  "Confidence"
  confidence
}
# Pagination
type OscalRelationshipConnection {
  pageInfo: PageInfo!
  edges: [OscalRelationshipEdge]
}
type OscalRelationshipEdge {
  cursor: String!
  node: OscalRelationship!
}

##### OSCAL Resource
##
"Defines identifying information about a resource in OSCAL"
type OscalResource implements BasicObject & LifecycleObject & OscalObject {
  # BasicObject
  "Uniquely identifies this object."
  id: ID!
  "Identifies the identifier defined by the standard."
  standard_id: String!
  "Identifies the type of the Object."
  entity_type: String!
  "Identifies the parent types of this object."
  parent_types: [String]!
  # CoreObject
  "Indicates the date and time at which the object was originally created."
  created: Timestamp
  "Indicates the date and time that this particular version of the object was last modified."
  modified: Timestamp
  "Identifies a set of terms used to describe this object. The terms are user-defined or trust-group defined."
  labels: [CyioLabel]
  # OscalObject
  "Identifies a list of CyioExternalReferences, each of which refers to information external to the data model. This property is used to provide one or more URLs, descriptions, or IDs to records in other systems."
  links: [CyioExternalReference]
  "Identifies one or more references to additional commentary on the Model."
  remarks: [CyioNote]
  "Identifies one or more relationships to other entities."
  relationships(
    first: Int
    offset: Int
    orderedBy: OscalRelationshipsOrdering
    orderMode: OrderingMode
    filters: [OscalRelationshipsFiltering]
    filterMode: FilterMode
    search: String
  ): OscalRelationshipConnection
  # Resource
  "Identifies the type of resource represented."
  resource_type: ResourceType!
  "Identifies the version number of a published document."
  version: String
  "Identifies the publication date of a published document."
  published: Timestamp
  "Identifies the name given to the party."
  name: String!
  "Identifies a brief description of the Party."
  description: String
  "Identifies references to previous versions of this document."
  document_ids: [OscalObject]
  "Identifies a citation consisting of end note text and optional structured bibliographic data."
  citations: [Citation]
  "identifies one or more references to an external resource with an optional hash for verification and change detection."
  rlinks: [CyioExternalReference]
  "Identifies the base64 encoded content."
  base64: Base64Content
}
input OscalResourceAddInput {
  # Resource
  "Identifies the type of resource represented."
  resource_type: ResourceType!
  "Identifies the version number of a published document."
  version: String
  "Identifies the publication date of a published document."
  published: Timestamp
  "Identifies the name given to the party."
  name: String!
  "Identifies a brief description of the Party."
  description: String
  "Identifies references to previous versions of this document."
  document_ids: [ID]
  "Identifies a citation consisting of end note text and optional structured bibliographic data."
  citations: [CitationAddInput]
  "Identifies the base64 encoded content."
  base64: Base64ContentAddInput
}
# Ordering
enum OscalResourcesOrdering {
  "Created"
  created
  "Modified"
  modified
  "Label"
  label_name
  "Name"
  name
  "Published"
  published
  "Resource Type"
  resource_type
  "Version"
  version
  "Marking"
  marking
}
# Filtering
input OscalResourcesFiltering {
  key: OscalResourcesFilter!
  values: [String]
  operator: String
  filterMode: FilterMode
}
enum OscalResourcesFilter {
  "Created"
  created
  "Modified"
  modified
  "Label"
  label_name
  "Resource Type"
  resource_type
  "Name"
  name
  "Published"
  published
}
# Pagination
type OscalResourceConnection {
  pageInfo: PageInfo!
  edges: [OscalResourceEdge]
}
type OscalResourceEdge {
  cursor: String!
  node: OscalResource!
}
# Object-specific Enumerations
"Characterizes the type of resource."
enum ResourceType {
  "Indicates the resource is an organization's logo."
  logo
  "Indicates the resource represents an image."
  image
  "Indicates the resource represents an image of screen content."
  screen_shot
  "Indicates the resource represents an applicable law."
  law
  "Indicates the resource represents an applicable regulation."
  regulation
  "Indicates the resource represents an applicable standard."
  standard
  "Indicates the resource represents applicable guidance."
  external_guidance
  "Indicates the resource provides a list of relevant acronyms"
  acronyms
  "Indicates the resource cites relevant information"
  citation
  "Indicates the resource is a policy"
  policy
  "Indicates the resource is a procedure"
  procedure
  "Indicates the resource is guidance document related to the subject system of an SSP."
  system_guide
  "Indicates the resource is guidance document a user's guide or administrator's guide."
  users_guide
  "Indicates the resource is guidance document a administrator's guide."
  administrators_guide
  "Indicates the resource represents rules of behavior content"
  rules_of_behavior
  "Indicates the resource represents a plan"
  plan
  "Indicates the resource represents an artifact, such as may be reviewed by an assessor"
  artifact
  "Indicates the resource represents evidence, such as to support an assessment finding"
  evidence
  "Indicates the resource represents output from a tool"
  tool_output
  "Indicates the resource represents machine data, which may require a tool or analysis for interpretation or presentation"
  raw_data
  "Indicates the resource represents notes from an interview, such as may be collected during an assessment"
  interview_notes
  "Indicates the resource is a set of questions, possibly with responses"
  questionnaire
  "Indicates the resource is a report"
  report
  "Indicates the resource is a formal agreement between two or more parties"
  agreement
}
"Defines identifying information about Base64 Content"
type Base64Content {
  "Uniquely identifies this object."
  id: ID!
  "Identifies the type of the Object."
  entity_type: String!
  "Identifies the name of the file before it was encoded as Base64 to be embedded in a resource. This is the name that will be assigned to the file when the file is decoded."
  filename: String
  "Identifies the media type as defined by the Internet Assigned Numbers Authority (IANA)."
  media_type: String
  "Identifies the content that is base64 encoded."
  value: String
}
input Base64ContentAddInput {
  filename: String
  media_type: String
  value: String
}
"Defines identifying information about a citation."
type Citation {
  "Uniquely identifies this object."
  id: ID!
  "Identifies the type of the Object."
  entity_type: String!
  "Identifies a line of citation text."
  text: String!
  "Identifies a list of CyioExternalReferences, each of which refers to information external to the data model. This property is used to provide one or more URLs, descriptions, or IDs to records in other systems."
  links: [CyioExternalReference]
}
input CitationAddInput {
  "Identifies a line of citation text."
  text: String!
  "Identifies a list of CyioExternalReferences, each of which refers to information external to the data model. This property is used to provide one or more URLs, descriptions, or IDs to records in other systems."
  links: [CyioExternalReferenceAddInput]
}

##### OSCAL Responsible Party
##
"Defines identifying information about a Responsible Party in OSCAL"
type OscalResponsibleParty {
  # BasicObject
  "Uniquely identifies this object."
  id: ID!
  "Identifies the identifier defined by the standard."
  standard_id: String!
  "Identifies the type of the Object."
  entity_type: String!
  "Identifies the parent types of this object."
  parent_types: [String]!
  # OscalObject
  "Identifies a set of terms used to describe this object. The terms are user-defined or trust-group defined."
  labels: [CyioLabel]
  "Identifies a list of CyioExternalReferences, each of which refers to information external to the data model. This property is used to provide one or more URLs, descriptions, or IDs to records in other systems."
  links: [CyioExternalReference]
  "Identifies one or more references to additional commentary on the Model."
  remarks: [CyioNote]
  # ResponsibleParty
  "Identifies a reference to the role that the party is responsible for."
  role: OscalRole!
  "Identifies one or more references to the parties that are responsible for performing the associated role."
  parties: [OscalParty!]!
  # DarkLight extensions
  "Identifies a name given to the responsible party to make it friendlier."
  name: String
  "Identifies a summary of the reponsible party's purpose and associated responsibilities."
  description: String
}
input OscalResponsiblePartyAddInput {
  # ResponsibleParty
  "Identifies a reference to the role that the party is responsible for."
  role: ID!
  "Identifies one or more references to the parties that are responsible for performing the associated role."
  parties: [ID!]!
  # DarkLight extensions
  "Identifies a name given to the responsible party to make it friendlier."
  name: String
  "Identifies a summary of the reponsible party's purpose and associated responsibilities."
  description: String
}
# Ordering
enum OscalResponsiblePartyOrdering {
  "Label"
  label_name
  "Name"
  name
  "Role Identifier"
  role_identifier
  "Marking"
  marking
}
# Filtering
input OscalResponsiblePartyFiltering {
  key: OscalResponsiblePartyFilter!
  values: [String]
  operator: String
  filterMode: FilterMode
}
enum OscalResponsiblePartyFilter {
  "Label"
  label_name
  "Role Identifier"
  role_identifier
  "Name"
  name
}
# Pagination
type OscalResponsiblePartyConnection {
  pageInfo: PageInfo!
  edges: [OscalResponsiblePartyEdge]
}
type OscalResponsiblePartyEdge {
  cursor: String!
  node: OscalResponsibleParty!
}
##### OSCAL Responsible Role
##
"Defines identifying information about a role with responsibility for performing a function relative to the containing object."
type OscalResponsibleRole {
  # BasicObject
  "Uniquely identifies this object."
  id: ID!
  "Identifies the identifier defined by the standard."
  standard_id: String!
  "Identifies the type of the Object."
  entity_type: String!
  "Identifies the parent types of this object."
  parent_types: [String]!
  # OscalObject
  "Identifies a set of terms used to describe this object. The terms are user-defined or trust-group defined."
  labels: [CyioLabel]
  "Identifies a list of CyioExternalReferences, each of which refers to information external to the data model. This property is used to provide one or more URLs, descriptions, or IDs to records in other systems."
  links: [CyioExternalReference]
  "Identifies one or more references to additional commentary on the Model."
  remarks: [CyioNote]
  # ResponsibleParty
  "Identifies a reference to the role that the party is responsible for."
  role: OscalRole!
  "Identifies one or more references to the parties that are responsible for performing the associated role."
  parties: [OscalParty]
  # DarkLight extensions
  "Identifies a name given to the responsible party to make it friendlier."
  name: String
  "Identifies a summary of the reponsible party's purpose and associated responsibilities."
  description: String
}
"Defines identifying information about a Responsible Role in OSCAL"
input OscalResponsibleRoleAddInput {
  # ResponsibleRole
  "Identifies a reference to the role that the party is responsible for."
  role: ID!
  "Identifies one or more references to the parties that are responsible for performing the associated role."
  parties: [ID]
  # DarkLight extensions
  "Identifies a name given to the responsible role to make it friendlier."
  name: String
  "Identifies a summary of the reponsible role's purpose and associated responsibilities."
  description: String
}
# Ordering
enum OscalResponsibleRoleOrdering {
  "Label"
  label_name
  "Name"
  name
  "Role Identifier"
  role_identifier
  "Marking"
  marking
}
# Filtering
input OscalResponsibleRoleFiltering {
  key: OscalResponsibleRoleFilter!
  values: [String]
  operator: String
  filterMode: FilterMode
}
enum OscalResponsibleRoleFilter {
  "Label"
  label_name
  "Role Identifier"
  role_identifier
  "Name"
  name
}
# Pagination
type OscalResponsibleRoleConnection {
  pageInfo: PageInfo!
  edges: [OscalResponsibleRoleEdge]
}
type OscalResponsibleRoleEdge {
  cursor: String!
  node: OscalResponsibleRole!
}

##### OSCAL Role
##
"Defines identifying information about a function assumed or expected to be assumed by a party in a specific situation."
type OscalRole implements BasicObject & LifecycleObject & OscalObject {
  # BasicObject
  "Uniquely identifies this object."
  id: ID!
  "Identifies the identifier defined by the standard."
  standard_id: String!
  "Identifies the type of the Object."
  entity_type: String!
  "Identifies the parent types of this object."
  parent_types: [String]!
  # CoreObject
  "Indicates the date and time at which the object was originally created."
  created: Timestamp
  "Indicates the date and time that this particular version of the object was last modified."
  modified: Timestamp
  "Identifies a set of terms used to describe this object. The terms are user-defined or trust-group defined."
  labels: [CyioLabel]
  # OscalObject
  "Identifies a list of CyioExternalReferences, each of which refers to information external to the data model. This property is used to provide one or more URLs, descriptions, or IDs to records in other systems."
  links: [CyioExternalReference]
  "Identifies one or more references to additional commentary on the Model."
  remarks: [CyioNote]
  "Identifies one or more relationships to other entities."
  relationships(
    first: Int
    offset: Int
    orderedBy: OscalRelationshipsOrdering
    orderMode: OrderingMode
    filters: [OscalRelationshipsFiltering]
    filterMode: FilterMode
    search: String
  ): OscalRelationshipConnection
  # OscalRole
  "Identifies the unique identifier for a specific role instance."
  role_identifier: RoleType!
  "Identifies the name given to the role."
  name: String!
  "Identifies a short common name, abbreviation, or acronym for the role."
  short_name: String
  "Identifies a summary of the role's purpose and associated responsibilities."
  description: String
}
input OscalRoleAddInput {
  # OscalRole
  "Identifies the unique identifier for a specific role instance."
  role_identifier: RoleType!
  "Identifies the name given to the role."
  name: String!
  "Identifies a short common name, abbreviation, or acronym for the role."
  short_name: String
  "Identifies a summary of the role's purpose and associated responsibilities."
  description: String
}
# Ordering
enum OscalRolesOrdering {
  "Created"
  created
  "Modified"
  modified
  "Label"
  label_name
  "Name"
  name
  "Role"
  role_identifier
  "Marking"
  marking
}
# Filtering
input OscalRolesFiltering {
  key: OscalRolesFilter!
  values: [String]
  operator: String
  filterMode: FilterMode
}
enum OscalRolesFilter {
  "Created"
  created
  "Modified"
  modified
  "Label"
  label_name
  "Name"
  name
  "Role"
  role_identifier
}
# Pagination
type OscalRoleConnection {
  pageInfo: PageInfo!
  edges: [OscalRoleEdge]
}
type OscalRoleEdge {
  cursor: String!
  node: OscalRole!
}
# Object-specific Enumerations
"Defines the identifier for a specific role."
enum RoleType {
  "Responsible for administering a set of assets."
  asset_administrator
  "Accountable for ensuring the asset is managed in accordance with organizational policies and procedures."
  asset_owner
  "The authorizing official for this system."
  authorizing_official
  "The authorizing official's designated point of contact (POC) for this system."
  authorizing_official_poc
  "Responsible for the configuration management processes governing changes to the asset."
  configuration_management
  "Indicates the organization to contact for questions or support related to this content."
  contact
  "Indicates the organization responsible for all content represented in the 'document'."
  content_approver
  "Indicates the organization that created this content."
  creator
  "Responsible for providing information and support to users."
  help_desk
  "Responsible for responding to an event that could lead to loss of, or disruption to, an organization's operations, services or functions."
  incident_response
  "The primary role responsible for ensuring the organization operates the system securely."
  information_system_security_officer
  "Interconnection Security Agreement (ISA) authorizing official for this system."
  isa_authorizing_official_local
  "Interconnection Security Agreement (ISA) authorizing official for the remote interconnected system."
  isa_authorizing_official_remote
  "Interconnection Security Agreement (ISA) point of contact (POC) for this system."
  isa_poc_local
  "Interconnection Security Agreement (ISA) point of contact (POC) for the remote interconnected system."
  isa_poc_remote
  "Responsible for the creation and maintenance of a component."
  maintainer
  "Member of the network operations center (NOC)."
  network_operations
  "Indicates the organization that prepared this content."
  prepared_by
  "Indicates the organization for which this content was created."
  prepared_for
  "The point of contact (POC) responsible for identifying privacy information within the system, and ensuring its protection if present."
  privacy_poc
  "Organization responsible for providing the component, if this is different from the 'maintainer' (e.g., a reseller)."
  provider
  "Member of the security operations center (SOC)."
  security_operations
  "The executive ultimately accountable for the system."
  system_owner
  "The primary management-level point of contact (POC) for the system."
  system_poc_management
  "Other point of contact (POC) for the system that is not the management or technical POC."
  system_poc_other
  "The primary technical point of contact (POC) for the system."
  system_poc_technical
}

##### OSCAL User
##
"Defines identifying information about a type of user that interacts with the system based on an associated role."
type OscalUser implements BasicObject & LifecycleObject & OscalObject {
  # BasicObject
  "Uniquely identifies this object."
  id: ID!
  "Identifies the identifier defined by the standard."
  standard_id: String!
  "Identifies the type of the Object."
  entity_type: String!
  "Identifies the parent types of this object."
  parent_types: [String]!
  # CoreObject
  "Indicates the date and time at which the object was originally created."
  created: Timestamp
  "Indicates the date and time that this particular version of the object was last modified."
  modified: Timestamp
  "Identifies a set of terms used to describe this object. The terms are user-defined or trust-group defined."
  labels: [CyioLabel]
  # OscalObject
  "Identifies a list of CyioExternalReferences, each of which refers to information external to the data model. This property is used to provide one or more URLs, descriptions, or IDs to records in other systems."
  links: [CyioExternalReference]
  "Identifies one or more references to additional commentary on the Model."
  remarks: [CyioNote]
  "Identifies one or more relationships to other entities."
  relationships(
    first: Int
    offset: Int
    orderedBy: OscalRelationshipsOrdering
    orderMode: OrderingMode
    filters: [OscalRelationshipsFiltering]
    filterMode: FilterMode
    search: String
  ): OscalRelationshipConnection
  # OSCAL SystemAsset User
  "Identifies type of user, such as internal, external, or general-public."
  user_type: UserType
  "Identifies a name given to the user, which may be used by a tool for display and navigation."
  name: String!
  "Identifies a short common name, abbreviation, or acronym for the user."
  short_name: String
  "Identifies a summary of the user's purpose within the system."
  description: String
  "Identifies one or more references to the roles served by the user."
  roles: [OscalRole]
  "Identifies a specific system privilege held by the user, along with an associated description and/or rationale for the privilege."
  authorized_privileges: [AuthorizedPrivilege!]
  "Identifies the user's privilege level within the system, such as privileged, non-privileged, no-logical-access."
  privilege_level: PrivilegeLevel!
}
input OscalUserAddInput {
  # OSCAL User
  "Identifies type of user, such as internal, external, or general-public."
  user_type: UserType
  "Identifies a name given to the user, which may be used by a tool for display and navigation."
  name: String!
  "Identifies a short common name, abbreviation, or acronym for the user."
  short_name: String
  "Identifies a summary of the user's purpose within the system."
  description: String
  "Identifies a specific system privilege held by the user, along with an associated description and/or rationale for the privilege."
  authorized_privileges: [AuthorizedPrivilegeAddInput]
  "Identifies the user's privilege level within the system, such as privileged, non-privileged, no-logical-access."
  privilege_level: PrivilegeLevel!
}
# Ordering
enum OscalUsersOrdering {
  "Created"
  created
  "Modified"
  modified
  "Label"
  label_name
  "Name"
  name
  "Prvilege Level"
  privilege_level
  "User Type"
  user_type
  "Marking"
  marking
}
# Filtering
input OscalUsersFiltering {
  key: OscalUsersFilter!
  values: [String]
  operator: String
  filterMode: FilterMode
}
enum OscalUsersFilter {
  "Created"
  created
  "Modified"
  modified
  "Label"
  label_name
  "Name"
  name
  "Privilege Level"
  privilege_level
  "User Type"
  user_type
}
# Pagination
type OscalUserConnection {
  pageInfo: PageInfo!
  edges: [OscalUserEdge]
}
type OscalUserEdge {
  cursor: String!
  node: OscalUser!
}
# Object-specific Enumerations
"Defines the set of types of users"
enum UserType {
  "Identifies a user account for a person or entity that is part of the organization who owns or operates the system."
  internal
  "Identifies a user account for a person or entity that is not part of the organization who owns or operates the system."
  external
  "Identifies a user of the system considered to be outside."
  general_public
}
"Characterizes the type level of privileges"
enum PrivilegeLevel {
  "This role has elevated access to the system, such as a group or system administrator."
  privileged
  "This role has typical user-level access to the system without elevated access."
  non_privileged
  "This role has no access to the system, such as a manager who approves access as part of a process."
  no_logical_access
}
"Defines identifying information about a system privilege held by the user."
type AuthorizedPrivilege {
  "Uniquely identifies this object."
  id: ID!
  "Identifies the type of the Object."
  entity_type: String!
  "Identifies a human readable name for the privilege."
  name: String!
  "Identifies a summary of the privilege's purpose within the system."
  description: String
  "Identifies one or more functions performed for a given authorized privilege by this user class."
  functions_performed: [String!]
}
input AuthorizedPrivilegeAddInput {
  "Identifies a human readable name for the privilege."
  name: String!
  "Identifies a summary of the privilege's purpose within the system."
  description: String
  "Identifies one or more functions performed for a given authorized privilege by this user class."
  functions_performed: [String!]
}

##### OSCAL Revision
##
"Defines identifying information about a Revision"
type Revision {
  "Uniquely identifies this object."
  id: ID!
  "Identifies the name given to the document."
  name: String!
  "Identifies the date and time the document was published."
  published: Timestamp
  "Identifies the date and time the document as last modified."
  last_modified: Timestamp
  "Identifies the current version of the document."
  version: String
  "Identifies the OSCAL model version the document was authored against."
  oscal_version: String
  "Identifies a list of CyioExternalReferences, each of which refers to information external to the data model. This property is used to provide one or more URLs, descriptions, or IDs to records in other systems."
  links: [CyioExternalReference]
  "Identifies one or more references to additional commentary on the Model."
  remarks: [CyioNote]
  "Identifies one or more relationships to other entities."
  relationships(
    first: Int
    offset: Int
    orderedBy: OscalRelationshipsOrdering
    orderMode: OrderingMode
    filters: [OscalRelationshipsFiltering]
    filterMode: FilterMode
    search: String
  ): OscalRelationshipConnection
}
input RevisionAddInput {
  "Identifies the name given to the document."
  name: String!
  "Identifies the date and time the document was published."
  published: Timestamp
  "Identifies the date and time the document as last modified."
  last_modified: Timestamp
  "Identifies the current version of the document."
  version: String
  "Identifies the OSCAL model version the document was authored against."
  oscal_version: String
}

##### OSCAL ExternalIdentifier
##
"Defines an external identifier associated with a party"
type ExternalIdentifier {
  "Uniquely identifies this object."
  id: ID!
  "Identifies the type of the Object."
  entity_type: String!
  "Identifies the type or scheme of the external identifier"
  scheme: URL!
  "Identifies the external identifier"
  identifier: String!
}
input ExternalIdentifierAddInput {
  "Identifies the type or scheme of an external identifier as a URI."
  scheme: URL!
  "Identifies the external identifier within a specified scheme."
  identifier: String!
}
##### Risk Reports
##
"Defines the types of OSCAL Models"
enum OscalModelType {
  "OSCAL Assessment Plan"
  ap
  "OSCAL Assessment Results"
  ar
  "OSCAL Catalog"
  catalog
  "OSCAL Component Definition"
  component_definition
  "OSCAL Plan of Action and Milestones"
  poam
  "OSCAL Profile"
  profile
  "OSCAL System Security Plan"
  ssp
}

"Defines the media types for OSCAL export"
enum OscalMediaType {
  "application/oscal+json"
  application_oscal_json
  "application/oscal+xml"
  application_oscal_xml
  "application/oscal+yaml"
  application_oscal_yaml
  "application/oscal+csv"
  application_oscal_csv
}

"Defines an risk reporting option"
input RiskReportOption {
  "Identifies the name of the option"
  name: ReportOptionType!
  "Identifies the value(s) for the option"
  values: [String!]
}

"Defines the types of Risk Reports"
enum RiskReportType {
  "Security Assessment Report (SAR)"
  sar
  "Vulnerability Assessment Report (VAR)"
  var
  "Asset Inventory Report (AIR)"
  air
  "Cybersecurity Risk Assessment Report (CRA)"
  cra
  "Threat Assessment Report (TAR)"
  tar
}

"Defines the Options for Reports"
enum ReportOptionType {
  "Appendices"
  appendices
  "Description"
  description
  "Purpose"
  purpose
  "Max Items"
  max_items
  "Sections"
  sections
  "Title"
  title
}

"Defines the media types for Reports"
enum ReportMediaType {
  "text/markdown"
  markdown
  "application/pdf"
  pdf
  "text/html"
  html
}

##### SAR Report-Specifics
##
"Defines the sections in a Security Assessment Report"
enum SarSections {
  "Risk Tracking Details"
  tracking
  "Collected During Testing"
  collected_during_testing
  "Mitigating Factors"
  mitigating_factor
}

"Appendices of a Security Assessment Report"
enum SarAppendices {
  "Database Scan"
  db_scan
  "Web Scan"
  web_scan
  "Penetration Testing"
  pen_test
  "Manual Test"
  manual_test
}

##### OSCAL Property
##
"Defines an attribute, characteristic, or quality of the containing object expressed as a namespace qualified name/value pair. The value of a property is a simple scalar value, which may be expressed as a list of values."
type Property implements ComplexDatatype {
  # ComplexDatatype
  "Uniquely identifies this object."
  id: ID!
  "Identifies the type of the Object."
  entity_type: String!
  # OSCAL Property
  "Identifies a textual label that uniquely identifies a specific attribute, characteristic, or quality of the property's containing object."
  prop_name: String!
  "Identifies a namespace qualifying the property's name. This allows different organizations to associate distinct semantics with the same name."
  ns: URL
  "Indicates the value of the attribute, characteristic, or quality."
  value: [String!]
  "Identifies a textual label that provides a sub-type or characterization of the property's name. This can be used to further distinguish or discriminate between the semantics of multiple properties of the same object with the same name and ns."
  class: String
}
input PropertyAddInput {
  # OSCAL Property
  "Identifies a textual label that uniquely identifies a specific attribute, characteristic, or quality of the property's containing object."
  prop_name: String!
  "Identifies a namespace qualifying the property's name. This allows different organizations to associate distinct semantics with the same name."
  ns: URL
  "Indicates the value of the attribute, characteristic, or quality."
  value: [String!]
  "Identifies a textual label that provides a sub-type or characterization of the property's name. This can be used to further distinguish or discriminate between the semantics of multiple properties of the same object with the same name and ns."
  class: String
}
