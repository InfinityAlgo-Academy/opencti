enum TaxiiVersion {
    v1
    v2
    v21
}

enum TaxiiAuthType {
    none
    basic
    bearer
    certificate
}

type IngestionTaxii implements InternalObject & BasicObject {
    id: ID!
    entity_type: String!
    standard_id: String!
    parent_types: [String!]!
    created_at: DateTime
    updated_at: DateTime
    name: String!
    description: String
    uri: String!
    collection: String!
    version: TaxiiVersion!
    authentication_type: TaxiiAuthType!
    authentication_value: String
    user_id: String
    user: Creator
    added_after_start: DateTime
    current_state_cursor: String
    ingestion_running: Boolean
}
enum IngestionTaxiiOrdering {
    name
    created_at
    updated_at
    uri
    version
}
enum IngestionTaxiiFilter {
    name
    creator
}
input IngestionTaxiiFiltering {
    key: [IngestionTaxiiFilter!]!
    values: [String]
    operator: String
    filterMode: FilterMode
}
type IngestionTaxiiConnection {
    pageInfo: PageInfo!
    edges: [IngestionTaxiiEdge!]!
}
type IngestionTaxiiEdge {
    cursor: String!
    node: IngestionTaxii!
}

# Queries
type Query {
    ingestionTaxii(id: String!): IngestionTaxii @auth(for: [CONNECTORAPI])
    ingestionTaxiis(
        first: Int
        after: ID
        orderBy: IngestionTaxiiOrdering
        orderMode: OrderingMode
        filters: [IngestionTaxiiFiltering!]
        filterMode: FilterMode
        includeAuthorities: Boolean
        search: String
    ): IngestionTaxiiConnection @auth(for: [CONNECTORAPI])
}

# Mutations
input IngestionTaxiiAddInput {
    name: String! @constraint(minLength: 2)
    description: String
    version: TaxiiVersion!
    authentication_type: TaxiiAuthType!
    authentication_value: String
    uri: String! @constraint(minLength: 5)
    collection: String! @constraint(minLength: 5)
    added_after_start: DateTime
    ingestion_running: Boolean
    user_id: String
}

type Mutation {
    ingestionTaxiiAdd(input: IngestionTaxiiAddInput!): IngestionTaxii @auth(for: [CONNECTORAPI])
    ingestionTaxiiDelete(id: ID!): ID @auth(for: [CONNECTORAPI])
    ingestionTaxiiFieldPatch(id: ID!, input: [EditInput!]!): IngestionTaxii @auth(for: [CONNECTORAPI])
}
