var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
import { createEntity } from '../../database/middleware';
import { listEntitiesPaginated, listEntitiesThroughRelationsPaginated, loadEntityThroughRelationsPaginated, storeLoadById } from '../../database/middleware-loader';
import { notify } from '../../database/redis';
import { BUS_TOPICS } from '../../config/conf';
import { ABSTRACT_STIX_CYBER_OBSERVABLE, ABSTRACT_STIX_DOMAIN_OBJECT } from '../../schema/general';
import { ENTITY_TYPE_MALWARE_ANALYSIS, RELATION_ANALYSIS_SCO, RELATION_HOST_VM, RELATION_INSTALLED_SOFTWARE, RELATION_SAMPLE } from './malwareAnalysis-types';
import { ENTITY_SOFTWARE } from '../../schema/stixCyberObservable';
import { RELATION_OPERATING_SYSTEM } from '../../schema/stixRefRelationship';
export const findById = (context, user, malwareAnalysisId) => {
    return storeLoadById(context, user, malwareAnalysisId, ENTITY_TYPE_MALWARE_ANALYSIS);
};
export const findAll = (context, user, opts) => {
    return listEntitiesPaginated(context, user, [ENTITY_TYPE_MALWARE_ANALYSIS], opts);
};
export const addMalwareAnalysis = (context, user, malwareAnalysis) => __awaiter(void 0, void 0, void 0, function* () {
    const created = yield createEntity(context, user, malwareAnalysis, ENTITY_TYPE_MALWARE_ANALYSIS);
    return notify(BUS_TOPICS[ABSTRACT_STIX_DOMAIN_OBJECT].ADDED_TOPIC, created, user);
});
export const hostVmSoftware = (context, user, malwareAnalysisId) => __awaiter(void 0, void 0, void 0, function* () {
    return loadEntityThroughRelationsPaginated(context, user, malwareAnalysisId, RELATION_HOST_VM, ENTITY_SOFTWARE, false);
});
export const operatingSystemSoftware = (context, user, malwareAnalysisId) => __awaiter(void 0, void 0, void 0, function* () {
    return loadEntityThroughRelationsPaginated(context, user, malwareAnalysisId, RELATION_OPERATING_SYSTEM, ENTITY_SOFTWARE, false);
});
export const sampleObservable = (context, user, malwareAnalysisId) => __awaiter(void 0, void 0, void 0, function* () {
    return loadEntityThroughRelationsPaginated(context, user, malwareAnalysisId, RELATION_SAMPLE, ABSTRACT_STIX_CYBER_OBSERVABLE, false);
});
export const installedSoftwarePaginated = (context, user, attackPatternId, args) => __awaiter(void 0, void 0, void 0, function* () {
    return listEntitiesThroughRelationsPaginated(context, user, attackPatternId, RELATION_INSTALLED_SOFTWARE, ENTITY_SOFTWARE, false, args);
});
export const analysisScoPaginated = (context, user, attackPatternId, args) => __awaiter(void 0, void 0, void 0, function* () {
    return listEntitiesThroughRelationsPaginated(context, user, attackPatternId, RELATION_ANALYSIS_SCO, ABSTRACT_STIX_CYBER_OBSERVABLE, false, args);
});
