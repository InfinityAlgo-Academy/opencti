import type { StixMalwareAnalysis, StoreEntityMalwareAnalysis } from './malwareAnalysis-types';
import {
  ENTITY_TYPE_MALWARE_ANALYSIS,
  INPUT_ANALYSIS_SCO,
  INPUT_HOST_VM,
  INPUT_INSTALLED_SOFTWARE,
  INPUT_OPERATING_SYSTEM,
  INPUT_SAMPLE
} from './malwareAnalysis-types';
import { ABSTRACT_STIX_DOMAIN_OBJECT } from '../../schema/general';
import malwareAnalysisTypeDefs from './malwareAnalysis.graphql';
import malwareAnalysisResolvers from './malwareAnalysis-resolvers';
import {
  RELATION_ANALYSIS_OF,
  RELATION_CHARACTERIZES,
  RELATION_DYNAMIC_ANALYSIS_OF,
  RELATION_STATIC_ANALYSIS_OF
} from '../../schema/stixCoreRelationship';
import { ENTITY_TYPE_MALWARE } from '../../schema/stixDomainObject';
import { REL_BUILT_IN } from '../../database/stix';
import type { ModuleDefinition } from '../../schema/module';
import { registerDefinition } from '../../schema/module';

import convertMalwareAnalysisToStix from './malwareAnalysis-converter';
import {
  ENTITY_DOMAIN_NAME,
  ENTITY_HASHED_OBSERVABLE_ARTIFACT,
  ENTITY_HASHED_OBSERVABLE_STIX_FILE, ENTITY_HOSTNAME,
  ENTITY_NETWORK_TRAFFIC,
  ENTITY_SOFTWARE, ENTITY_URL,
  isStixCyberObservable
} from '../../schema/stixCyberObservable';
import {
  ATTRIBUTE_ANALYSIS_SCO,
  ATTRIBUTE_HOST_VM,
  ATTRIBUTE_INSTALLED_SOFTWARE,
  ATTRIBUTE_OPERATING_SYSTEM,
  ATTRIBUTE_SAMPLE,
  RELATION_ANALYSIS_SCO,
  RELATION_HOST_VM,
  RELATION_INSTALLED_SOFTWARE,
  RELATION_OPERATING_SYSTEM,
  RELATION_SAMPLE
} from './malwareAnalysis-domain';
import { objectAssignee, objectOrganization } from '../../schema/stixRefRelationship';

const MALWARE_ANALYSIS_DEFINITION: ModuleDefinition<StoreEntityMalwareAnalysis, StixMalwareAnalysis> = {
  type: {
    id: 'malwareAnalyses',
    name: ENTITY_TYPE_MALWARE_ANALYSIS,
    category: ABSTRACT_STIX_DOMAIN_OBJECT,
    aliased: false
  },
  graphql: {
    schema: malwareAnalysisTypeDefs,
    resolver: malwareAnalysisResolvers
  },
  identifier: {
    definition: {
      [ENTITY_TYPE_MALWARE_ANALYSIS]: [{ src: 'product' }, { src: 'result_name' }, { src: 'submitted' }]
    },
    resolvers: {}
  },
  attributes: [
    { name: 'product', type: 'string', mandatoryType: 'external', editDefault: true, multiple: false, upsert: true },
    { name: 'version', type: 'string', mandatoryType: 'customizable', editDefault: true, multiple: false, upsert: true },
    { name: 'configuration_version', type: 'string', mandatoryType: 'customizable', editDefault: true, multiple: false, upsert: true, label: 'Configuration version' },
    { name: 'modules', type: 'string', mandatoryType: 'customizable', editDefault: true, multiple: true, upsert: true },
    { name: 'analysis_engine_version', type: 'string', mandatoryType: 'customizable', editDefault: true, multiple: false, upsert: true, label: 'Analysis engine version' },
    { name: 'analysis_definition_version', mandatoryType: 'customizable', editDefault: true, type: 'string', multiple: false, upsert: true, label: 'Analysis definition version' },
    { name: 'submitted', type: 'date', mandatoryType: 'customizable', editDefault: true, multiple: false, upsert: true, label: 'Submission date' },
    { name: 'analysis_started', type: 'date', mandatoryType: 'customizable', editDefault: true, multiple: false, upsert: true, label: 'Analysis started' },
    { name: 'analysis_ended', type: 'date', mandatoryType: 'customizable', editDefault: true, multiple: false, upsert: true, label: 'Analysis ended' },
    { name: 'result_name', type: 'string', mandatoryType: 'external', editDefault: true, multiple: false, upsert: true, label: 'Result name' },
    { name: 'result', type: 'string', mandatoryType: 'customizable', editDefault: true, multiple: false, upsert: true },
  ],
  converter: convertMalwareAnalysisToStix,
  representative: (stix: StixMalwareAnalysis) => {
    return `${stix.product} - ${stix.result_name}`;
  },
  relations: [
    {
      name: RELATION_CHARACTERIZES,
      targets: [
        { name: ENTITY_TYPE_MALWARE, type: REL_BUILT_IN },
      ]
    },
    {
      name: RELATION_ANALYSIS_OF,
      targets: [
        { name: ENTITY_TYPE_MALWARE, type: REL_BUILT_IN },
      ]
    },
    {
      name: RELATION_STATIC_ANALYSIS_OF,
      targets: [
        { name: ENTITY_TYPE_MALWARE, type: REL_BUILT_IN },
      ]
    },
    {
      name: RELATION_DYNAMIC_ANALYSIS_OF,
      targets: [
        { name: ENTITY_TYPE_MALWARE, type: REL_BUILT_IN },
      ]
    },
  ],
  relationsRefs: [
    objectOrganization,
    objectAssignee,
    {
      stixName: ATTRIBUTE_HOST_VM,
      inputName: INPUT_HOST_VM,
      databaseName: RELATION_HOST_VM,
      mandatoryType: 'no',
      editDefault: false,
      multiple: false,
      datable: true,
      checker: (fromType, toType) => toType === ENTITY_SOFTWARE
    },
    {
      stixName: ATTRIBUTE_OPERATING_SYSTEM,
      inputName: INPUT_OPERATING_SYSTEM,
      databaseName: RELATION_OPERATING_SYSTEM,
      mandatoryType: 'no',
      editDefault: false,
      multiple: false,
      datable: true,
      label: 'Operating System',
      checker: (fromType, toType) => toType === ENTITY_SOFTWARE
    },
    {
      stixName: ATTRIBUTE_INSTALLED_SOFTWARE,
      inputName: INPUT_INSTALLED_SOFTWARE,
      databaseName: RELATION_INSTALLED_SOFTWARE,
      mandatoryType: 'no',
      editDefault: false,
      multiple: true,
      datable: true,
      label: 'Installed software',
      checker: (fromType, toType) => toType === ENTITY_SOFTWARE
    },
    {
      stixName: ATTRIBUTE_ANALYSIS_SCO,
      inputName: INPUT_ANALYSIS_SCO,
      databaseName: RELATION_ANALYSIS_SCO,
      mandatoryType: 'no',
      editDefault: false,
      multiple: true,
      datable: true,
      label: 'Analysis SCO',
      checker: (fromType, toType) => isStixCyberObservable(toType)
    },
    {
      stixName: ATTRIBUTE_SAMPLE,
      inputName: INPUT_SAMPLE,
      databaseName: RELATION_SAMPLE,
      mandatoryType: 'no',
      editDefault: false,
      multiple: false,
      datable: true,
      checker: (fromType, toType) => [
        ENTITY_HASHED_OBSERVABLE_ARTIFACT,
        ENTITY_HASHED_OBSERVABLE_STIX_FILE,
        ENTITY_NETWORK_TRAFFIC,
        ENTITY_DOMAIN_NAME,
        ENTITY_URL,
        ENTITY_HOSTNAME
      ].includes(toType)
    }
  ]

};

registerDefinition(MALWARE_ANALYSIS_DEFINITION);
