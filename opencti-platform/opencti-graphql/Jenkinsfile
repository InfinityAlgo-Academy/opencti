@Library('utils') _

node {
  checkout scm

  String app = 'graphql'
  String branch = "${env.BRANCH_NAME}"
  String commitId = utils.getCommitId()
  String commitMessage = utils.getCommitMessage()
  String version = 'undefined'

  dir('opencti-platform/opencti-graphql') {
    stage('Setup') {
      docker.image('node:16').inside {
        sh 'yarn install' 
      }
      version = readJSON(file: 'package.json')['version'] + '-RJTEST'
    }

    // stage('Test') {
    //   sh 'yarn test'
    // }

    stage('Build') {
      utils.buildDockerImage(name: app, version: version)
    }

    stage('Upload & Archive') {
      parallel upload: {
        utils.pushDockerImage(name: app, version: version)
      }, archive: {
        utils.archiveDockerImage(name: app, version: version)
      }
      teams.sendDLBuildsMessage(
        message: 'Job complete!', color: teams.COLOR_GREEN, [
          [name: "Commit Message", template: "${commitMessage}"],
          [name: "Commit", template: "[${commitId[0..7]}](https://github.com/champtc/opencti/commit/${commitId})"],
          [name: "Image", template: "docker.darklight.ai/${app}:${version}"]
        ]
      )
    }
  }
}
