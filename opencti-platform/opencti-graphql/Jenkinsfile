@Library('utils@dev') _

node {
  try {
    stage('Checkout') {
      gitInfo = checkout scm
      notify.notifyBuild('STARTED');
    }

    String app = 'graphql'

    String branch = "${env.BRANCH_NAME}"
    String commitId = utils.getCommitId()
    String commitMessage = utils.getCommitMessage()
    String version = 'undefined'
    def gitInfo

    dir('opencti-platform/opencti-graphql') {
      stage('Setup') {
        // Jenkins project setup
        utils.setCommonBuildStepsAndProperties(true, false) // conccurancy: true; cancelPreviousBuild: false
        
        // Install app dependencies
        docker.image('node:16-alpine').inside {
          sh 'yarn install'
        }

        // Set the version
        version = readJSON(file: 'package.json')['version'] + "-${commitId}"[0..7]
        echo "Version: ${version}"
      }

      // stage('Test') {
      //   docker.image('node:16-alpine').inside {
      //     sh 'yarn test'
      //   }
      // }

      stage('Build') {
        utils.buildDockerImage(name: app, version: version)
      }

      stage('Upload & Archive') {
        parallel upload: {
          utils.pushDockerImage(name: app, version: version)
        }, archive: {
          utils.archiveDockerImage(name: app, version: version)
        }
      }
    }
  } catch (Exception e) {
    currentBuild.result = "FAILED"
		throw e
  } finally {
    notify.notifyBuild(currentBuild.result);
  }
}
