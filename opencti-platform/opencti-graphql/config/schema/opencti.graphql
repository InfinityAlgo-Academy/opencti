### DIRECTIVES

directive @auth(for: [Capabilities] = [], and: Boolean = false) on OBJECT | FIELD_DEFINITION
directive @constraint(
  # String constraints
  minLength: Int
  maxLength: Int
  startsWith: String
  endsWith: String
  notContains: String
  pattern: String
  format: String

  # Number constraints
  min: Int
  max: Int
  exclusiveMin: Int
  exclusiveMax: Int
  multipleOf: Int
) on INPUT_FIELD_DEFINITION

### SCALAR

scalar DateTime
scalar ConstraintString
scalar ConstraintNumber
scalar Upload
enum Status {
  wait
  progress
  complete
}
enum Capabilities {
  CONNECTORAPI
  KNOWLEDGE
  KNOWLEDGE_KNUPDATE
  KNOWLEDGE_KNUPDATE_KNDELETE
  KNOWLEDGE_KNUPLOAD
  KNOWLEDGE_KNASKIMPORT
  KNOWLEDGE_KNGETEXPORT
  KNOWLEDGE_KNGETEXPORT_KNASKEXPORT
  KNOWLEDGE_KNENRICHMENT
  EXPLORE
  EXPLORE_EXUPDATE
  EXPLORE_EXUPDATE_EXDELETE
  MODULES
  MODULES_MODMANAGE
  SETTINGS
  SETTINGS_SETACCESSES
  SETTINGS_SETMARKINGS
  TAXIIAPI_SETCOLLECTIONS
}

### RELAY

type PageInfo {
  startCursor: String!
  endCursor: String!
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  globalCount: Int!
}
enum OrderingMode {
  asc
  desc
}
enum FilterMode {
  and
  or
}

### EDIT

enum EditOperation {
  add
  replace
  remove
}
input EditInput {
  id: ID # ID of the instance in edition
  key: String! # Field name to change
  value: [String]! # Values to apply
}
input EditContext {
  focusOn: String # Field name
}
type EditUserContext {
  name: String!
  focusOn: String # Field name
}

### INFO

"""
Dependency information containing the name and the deployed version.
"""
type DependencyVersion {
  name: String!
  version: String!
}

"""
NodeJs memory.
https://nodejs.org/api/process.html#process_process_memoryusage
https://nodejs.org/docs/latest-v11.x/api/v8.html#v8_v8_getheapstatistics
"""
type AppMemory {
  rss: Float
  heapTotal: Float
  heapUsed: Float
  external: Float
  arrayBuffers: Float
  total_heap_size: Float
  total_heap_size_executable: Float
  total_physical_size: Float
  total_available_size: Float
  used_heap_size: Float
  heap_size_limit: Float
  malloced_memory: Float
  peak_malloced_memory: Float
  does_zap_garbage: Float
}

"""
Retrieve the application information version add dependencies
"""
type AppInfo {
  """
  The OpenCTI aplication version
  """
  version: String!
  """
  The OpenCTI api current memory usage
  """
  memory: AppMemory
  """
  The list of OpenCTI software dependencies
  """
  dependencies: [DependencyVersion!]!
}

### STATS

type AckDetails {
  rate: Float
}
type MessagesStats {
  ack: Int
  ack_details: AckDetails
}
type QueueArguments {
  config: String
}
type QueueMetrics {
  name: String!
  arguments: QueueArguments
  messages: Int
  messages_ready: Int
  messages_unacknowledged: Int
  consumers: Int
  idle_since: DateTime
  message_stats: MessagesStats
}
type QueueTotals {
  messages: Int
  messages_ready: Int
  messages_unacknowledged: Int
}
type ObjectTotals {
  channels: Int
  consumers: Int
  queues: Int
}
type OverviewMetrics {
  node: String
  object_totals: ObjectTotals
  queue_totals: QueueTotals
  message_stats: MessagesStats
}
type RabbitMQMetrics {
  consumers: Int
  queues: [QueueMetrics]
  overview: OverviewMetrics
}
enum StatsOperation {
  count
  sum
}
type TimeSeries {
  date: DateTime!
  value: Int!
}
type Distribution {
  label: String!
  entity: StixObjectOrStixRelationship
  value: Int
}
type Number {
  total: Int!
  count: Int!
}

### INTERFACES & TYPES

###### INTERNAL

############## Logs
type LogsWorkerConfig {
  elasticsearch_url: String!
  elasticsearch_proxy: String
  elasticsearch_index: String!
  elasticsearch_username: String
  elasticsearch_password: String
  elasticsearch_api_key: String
  elasticsearch_ssl_reject_unauthorized: Boolean
}
enum LogsOrdering {
  event
  timestamp
}
enum LogsFilter {
  event_type
  entity_id
  connection_id
  user_id
  applicant_id
}
type LogConnection {
  pageInfo: PageInfo!
  edges: [LogEdge]
}
input LogsFiltering {
  key: LogsFilter!
  values: [String]
  operator: String
  filterMode: FilterMode
}
type LogEdge {
  cursor: String!
  node: Log!
}
type ContextData {
  id: String!
  entity_type: String!
  from_id: String
  to_id: String
  message: String!
}
type Log {
  id: ID!
  event_type: String!
  timestamp: DateTime!
  user_id: String!
  user: User
  context_data: ContextData
}

############## Attributes
enum AttributesOrdering {
  value
}
type AttributeConnection {
  pageInfo: PageInfo!
  edges: [AttributeEdge]
}
type AttributeEdge {
  cursor: String!
  node: Attribute!
}
type Attribute {
  id: ID!
  key: String!
  value: String!
}
input AttributeAddInput {
  key: String!
  value: String!
  clientMutationId: String
}
input WorkErrorInput {
  error: String
  source: String
}

############## Workspaces
enum WorkspacesOrdering {
  name
  identifier
  created_at
  ownedBy
}
enum WorkspacesFilter {
  name
  owner
  tag
  type
}
input WorkspacesFiltering {
  key: WorkspacesFilter!
  values: [String]
  operator: String
  filterMode: FilterMode
}
type WorkspaceConnection {
  pageInfo: PageInfo!
  edges: [WorkspaceEdge]
}
type WorkspaceEdge {
  cursor: String!
  node: Workspace!
}
type Workspace {
  id: ID!
  identifier: String!
  type: String
  name: String!
  description: String
  owner: User
  tags: [String]
  manifest: String
  created_at: DateTime
  updated_at: DateTime
  editContext: [EditUserContext]
  objects(
    first: Int
    after: ID
    orderBy: StixObjectOrStixRelationshipsOrdering
    orderMode: OrderingMode
    filters: [StixObjectOrStixRelationshipsFiltering]
    filterMode: FilterMode
    search: String
    types: [String]
    all: Boolean
  ): StixObjectOrStixRelationshipConnection
  graph_data: String
}
input WorkspaceAddInput {
  identifier: String!
  type: String!
  name: String!
  description: String
  tags: [String]
}

############## Taxii
type TaxiiCollection {
  id: ID!
  name: String
  description: String
  filters: String
}
type TaxiiCollectionConnection {
  pageInfo: PageInfo!
  edges: [TaxiiCollectionEdge]
}
type TaxiiCollectionEdge {
  cursor: String!
  node: TaxiiCollection!
}
input TaxiiCollectionAddInput {
  name: String!
  description: String
  filters: String
}
enum TaxiiCollectionOrdering {
  name
  description
}

############## SubTypes
enum SubTypesOrdering {
  label
}
type SubTypeConnection {
  pageInfo: PageInfo!
  edges: [SubTypeEdge]
}
type SubTypeEdge {
  cursor: String!
  node: SubType!
}
type SubType {
  id: ID!
  label: String!
}

############## Files
enum WorksOrdering {
  status
  timestamp
}
enum WorksFilter {
  status
  connector_id
  completed_number
  completed_time
}
input WorksFiltering {
  key: WorksFilter!
  values: [String]
  operator: String
  filterMode: FilterMode
}
type WorkMessage {
  timestamp: DateTime
  message: String
  sequence: Int
  source: String
}
type WorkTracking {
  import_expected_number: Int
  import_last_processed: DateTime
  import_processed_number: Int
}
type Work {
  id: ID!
  name: String
  user: User
  connector: Connector
  timestamp: DateTime!
  status: Status!
  event_source_id: String
  received_time: DateTime
  processed_time: DateTime
  completed_time: DateTime
  completed_number: Int
  messages: [WorkMessage]
  errors: [WorkMessage]
  tracking: WorkTracking
}
type WorkEdge {
  cursor: String!
  node: Work!
}
type WorkConnection {
  pageInfo: PageInfo!
  edges: [WorkEdge]
}
type FileMetadata {
  encoding: String
  mimetype: String
  messages: [WorkMessage]
  errors: [WorkMessage]
  list_filters: String
}
type File {
  id: ID!
  name: String!
  size: Int
  lastModified: DateTime
  lastModifiedSinceMin: Int
  metaData: FileMetadata
  uploadStatus: Status!
  works: [Work]
}
type FileEdge {
  cursor: String!
  node: File!
}
type FileConnection {
  pageInfo: PageInfo!
  edges: [FileEdge]
}
###### ENTITIES

interface BasicObject {
  id: ID! # internal_id
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
}

######## INTERNAL OBJECT ENTITIES
interface InternalObject {
  # BasicObject
  id: ID! # internal_id!
  entity_type: String!
}

############## Settings
type Provider {
  name: String!
  type: String
  strategy: String
  provider: String
}
type Settings implements InternalObject & BasicObject {
  id: ID! # internal_id
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  # Settings
  platform_title: String
  platform_email: String
  platform_url: String
  platform_providers: [Provider]
  platform_language: String
  platform_demo: Boolean
  platform_map_tile_server: String
  created_at: DateTime!
  updated_at: DateTime!
  # Technical
  editContext: [EditUserContext]
}

############## Groups
enum GroupsOrdering {
  name
  default_assignation
  created_at
  updated_at
}
type GroupConnection {
  pageInfo: PageInfo!
  edges: [GroupEdge]
}
type GroupEdge {
  cursor: String!
  node: Group!
}
type Group implements InternalObject & BasicObject {
  id: ID! # internal_id
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  # Group
  name: String!
  default_assignation: Boolean
  description: String
  members: UserConnection
  created_at: DateTime
  updated_at: DateTime
  allowed_marking: [MarkingDefinition]
  # Technical
  editContext: [EditUserContext]
}
input GroupAddInput {
  name: String!
  description: String
  clientMutationId: String
}

############## Users
enum UsersOrdering {
  name
  user_email
  firstname
  lastname
  language
  external
  created_at
  updated_at
}
enum UsersFilter {
  name
  entity_type
  created_at
}
input UsersFiltering {
  key: UsersFilter!
  values: [String]
  operator: String
  filterMode: FilterMode
}
type UserConnection {
  pageInfo: PageInfo!
  edges: [UserEdge]
}
type UserEdge {
  cursor: String!
  node: User!
}
type User implements BasicObject & InternalObject {
  id: ID! # internal_id
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  # User
  user_email: String!
  name: String!
  description: String
  firstname: String
  lastname: String
  language: String
  external: Boolean
  roles: [Role]!
  capabilities: [Capability]!
  groups: GroupConnection
  token: String
  created_at: DateTime!
  updated_at: DateTime!
  allowed_marking: [MarkingDefinition]
  # Technical
  editContext: [EditUserContext]
}
input UserAddInput {
  user_email: String @constraint(minLength: 5, format: "email")
  name: String! @constraint(minLength: 2)
  password: String
  firstname: String
  lastname: String
  description: String
  language: String
  roles: [ID]
}
input UserLoginInput {
  email: String!
  password: String!
}

############## Roles
enum RolesOrdering {
  name
  default_assignation
  created_at
  updated_at
}
type RoleConnection {
  pageInfo: PageInfo!
  edges: [RoleEdge]
}
type RoleEdge {
  cursor: String!
  node: Role!
}
type Role implements BasicObject & InternalObject {
  id: ID! # internal_id
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  # Role
  name: String!
  default_assignation: Boolean
  description: String
  created_at: DateTime!
  updated_at: DateTime!
  capabilities: [Capability]
  editContext: [EditUserContext]
}
input RoleAddInput {
  name: String!
  description: String
  clientMutationId: String
}

############## Capabilities
type CapabilityConnection {
  pageInfo: PageInfo!
  edges: [CapabilityEdge]
}
type CapabilityEdge {
  cursor: String!
  node: Capability!
}
type Capability implements BasicObject & InternalObject {
  id: ID! # internal_id
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  # Capability
  name: String!
  description: String
  attribute_order: Int
  created_at: DateTime!
  updated_at: DateTime!
  # Technical
  editContext: [EditUserContext]
}

############## Connectors
enum ConnectorType {
  EXTERNAL_IMPORT
  INTERNAL_IMPORT_FILE
  INTERNAL_ENRICHMENT
  INTERNAL_EXPORT_FILE
  STREAM
}
input RegisterConnectorInput {
  id: ID!
  name: String!
  type: ConnectorType!
  scope: [String!]
  auto: Boolean
}
type RabbitMQConnection {
  host: String!
  port: Int!
  user: String!
  pass: String!
}
type ConnectorConfig {
  connection: RabbitMQConnection!
  listen: String!
  listen_exchange: String!
  push: String!
  push_exchange: String!
}
type Connector implements BasicObject & InternalObject {
  id: ID! # internal_id
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  # Connector
  name: String!
  active: Boolean
  auto: Boolean
  connector_type: String
  connector_scope: [String!]
  connector_state: String
  connector_state_reset: Boolean
  connector_user: User
  updated_at: DateTime
  created_at: DateTime
  config: ConnectorConfig
  works(status: String): [Work]
}

######## STIX OBJECT ENTITIES

interface StixObject {
  id: ID! # internal_id
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  # StixObject
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
}

######## STIX META OBJECT ENTITIES

interface StixMetaObject {
  id: ID! # internal_id
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  # StixObject
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  # StixMetaObject
  created: DateTime
  modified: DateTime
}

############## MarkingDefinitions
enum MarkingDefinitionsOrdering {
  definition_type
  definition
  x_opencti_order
  x_opencti_color
  created
  modified
  created_at
  updated_at
}
enum MarkingDefinitionsFilter {
  definition
  definition_type
  markedBy
}
input MarkingDefinitionsFiltering {
  key: MarkingDefinitionsFilter!
  values: [String]
  operator: String
  filterMode: FilterMode
}
type MarkingDefinitionConnection {
  pageInfo: PageInfo!
  edges: [MarkingDefinitionEdge]
}
type MarkingDefinitionEdge {
  cursor: String!
  node: MarkingDefinition!
}
type MarkingDefinition implements BasicObject & StixObject & StixMetaObject {
  id: ID! # internal_id
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  # StixObject
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  # StixMetaObject
  created: DateTime
  modified: DateTime
  # MarkingDefinition
  definition_type: String
  definition: String
  x_opencti_order: Int!
  x_opencti_color: String
  # Technical
  toStix: String
  editContext: [EditUserContext]
}
input MarkingDefinitionAddInput {
  stix_id: String
  definition_type: String!
  definition: String!
  x_opencti_order: Int!
  x_opencti_color: String
  created: DateTime
  modified: DateTime
  clientMutationId: String
  update: Boolean
}

############## Labels
enum LabelsOrdering {
  value
  color
  created
  modified
  created_at
  updated_at
}
enum LabelsFilter {
  value
  markedBy
}
input LabelsFiltering {
  key: LabelsFilter!
  values: [String]
  operator: String
  filterMode: FilterMode
}
type LabelConnection {
  pageInfo: PageInfo!
  edges: [LabelEdge]
}
type LabelEdge {
  cursor: String!
  node: Label!
}
type Label implements BasicObject & StixObject & StixMetaObject {
  id: ID! # internal_id
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  # StixObject
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  # StixMetaObject
  created: DateTime
  modified: DateTime
  # MarkingDefinition
  value: String
  color: String
  # Technical
  toStix: String
  editContext: [EditUserContext]
}
input LabelAddInput {
  stix_id: String
  value: String!
  color: String
  created: DateTime
  modified: DateTime
  clientMutationId: String
}

############## ExternalReferences
enum ExternalReferencesOrdering {
  source_name
  url
  hash
  external_id
  created
  modified
  created_at
  updated_at
}
enum ExternalReferencesFilter {
  url
  usedBy
  source_name
  external_id
}
input ExternalReferencesFiltering {
  key: ExternalReferencesFilter!
  values: [String]
  operator: String
  filterMode: FilterMode
}
type ExternalReferenceConnection {
  pageInfo: PageInfo!
  edges: [ExternalReferenceEdge]
}
type ExternalReferenceEdge {
  cursor: String!
  node: ExternalReference!
}
type ExternalReference implements BasicObject & StixObject & StixMetaObject {
  id: ID! # internal_id
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  # StixObject
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  # StixMetaObject
  created: DateTime
  modified: DateTime
  # ExternalReference
  source_name: String!
  description: String
  url: String
  hash: String
  external_id: String
  # Technical
  editContext: [EditUserContext]
}
input ExternalReferenceAddInput {
  stix_id: String
  source_name: String!
  description: String
  url: String
  hash: String
  external_id: String
  created: DateTime
  modified: DateTime
  clientMutationId: String
  update: Boolean
}

############## KillChainPhases
enum KillChainPhasesOrdering {
  x_opencti_order
  kill_chain_name
  phase_name
  created
  modified
  created_at
  updated_at
}
enum KillChainPhasesFilter {
  kill_chain_name
  phase_name
}
input KillChainPhasesFiltering {
  key: KillChainPhasesFilter!
  values: [String]
  operator: String
  filterMode: FilterMode
}
type KillChainPhaseConnection {
  pageInfo: PageInfo!
  edges: [KillChainPhaseEdge]
}
type KillChainPhaseEdge {
  cursor: String!
  node: KillChainPhase!
}
type KillChainPhase implements BasicObject & StixObject & StixMetaObject {
  id: ID! # internal_id
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  # StixObject
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  # StixMetaObject
  created: DateTime
  modified: DateTime
  # KillChainPhase
  kill_chain_name: String!
  phase_name: String!
  x_opencti_order: Int
  # Technical
  editContext: [EditUserContext]
}
input KillChainPhaseAddInput {
  stix_id: String
  kill_chain_name: String!
  phase_name: String!
  x_opencti_order: Int!
  created: DateTime
  modified: DateTime
  clientMutationId: String
  update: Boolean
}

######## STIX CORE OBJECT ENTITIES

enum StixCoreObjectsOrdering {
  name
  entity_type
  created
  modified
  created_at
  updated_at
  published
  object_status
  valid_from
  valid_to
  indicator_pattern
}
enum StixCoreObjectsFilter {
  name
  created
  modified
  created_at
  createdBy
  markedBy
  labelledBy
  hasExternalReference
  objectContains
  indicates
  confidence
}
input StixCoreObjectsFiltering {
  key: StixCoreObjectsFilter!
  values: [String]
  operator: String
  filterMode: FilterMode
}
type StixCoreObjectConnection {
  pageInfo: PageInfo!
  edges: [StixCoreObjectEdge]
}
type StixCoreObjectEdge {
  cursor: String!
  node: StixCoreObject!
}
union OrganizationOrIndividual = Organization | Individual
interface StixCoreObject {
  id: ID! # internal_id
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  # StixObject
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  # StixCoreObject
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  # Technical
  creator: User
  toStix: String
  editContext: [EditUserContext]
}

########## STIX DOMAIN OBJECT ENTITIES

enum StixDomainObjectsOrdering {
  name
  entity_type
  created
  modified
  created_at
  updated_at
  published
  object_status
  valid_from
  valid_until
  indicator_pattern
}
enum StixDomainObjectsFilter {
  name
  entity_type
  aliases
  x_opencti_aliases
  created
  modified
  created_at
  createdBy
  markedBy
  labelledBy
  hasExternalReference
  objectContains
  indicates
  confidence
  valid_from
  valid_until
  pattern_type
  x_opencti_main_observable_type
  report_types
  x_opencti_report_status
  published
}
input StixDomainObjectsFiltering {
  key: StixDomainObjectsFilter!
  values: [String]
  operator: String
  filterMode: FilterMode
}
type StixDomainObjectConnection {
  pageInfo: PageInfo!
  edges: [StixDomainObjectEdge]
}
type StixDomainObjectEdge {
  cursor: String!
  node: StixDomainObject!
}
interface StixDomainObject {
  id: ID! # internal_id
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  # StixObject
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  # StixCoreObject
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  # StixDomainObject
  revoked: Boolean!
  confidence: Int
  lang: String
  created: DateTime
  modified: DateTime
  # Technical
  creator: User
  toStix: String
  importFiles(first: Int): FileConnection
  exportFiles(first: Int): FileConnection
  editContext: [EditUserContext]
}
input StixDomainObjectAddInput {
  stix_id: String
  name: String
  description: String
  confidence: Int
  pattern_type: String
  pattern: String
  aliases: [String]
  x_opencti_aliases: [String]
  type: String!
  createdBy: String
  objectMarking: [String]
  objectLabel: [String]
  killChainPhases: [String]
  externalReferences: [String]
  object: [String]
  clientMutationId: String
  created: DateTime
  modified: DateTime
  update: Boolean
}

############## AttackPatterns
enum AttackPatternsOrdering {
  x_mitre_id
  name
  created
  modified
  created_at
  updated_at
}
enum AttackPatternsFilter {
  name
  aliases
  created
  modified
  created_at
  updated_at
  x_mitre_id
  createdBy
  markedBy
  labelledBy
  mitigatedBy
}
input AttackPatternsFiltering {
  key: AttackPatternsFilter!
  values: [String]
  operator: String
  filterMode: FilterMode
}
type AttackPatternConnection {
  pageInfo: PageInfo!
  edges: [AttackPatternEdge]
}
type AttackPatternEdge {
  cursor: String!
  node: AttackPattern!
}
type AttackPattern implements BasicObject & StixObject & StixCoreObject & StixDomainObject {
  id: ID! # internal_id
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  # StixObject
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  # StixCoreObject
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  # StixDomainObject
  revoked: Boolean!
  confidence: Int
  lang: String
  created: DateTime
  modified: DateTime
  # AttackPattern
  name: String!
  description: String
  aliases: [String]
  x_mitre_platforms: [String]
  x_mitre_permissions_required: [String]
  x_mitre_detection: String
  x_mitre_id: String
  killChainPhases: KillChainPhaseConnection
  coursesOfAction: CourseOfActionConnection
  parentAttackPatterns: AttackPatternConnection
  subAttackPatterns: AttackPatternConnection
  isSubAttackPattern: Boolean
  # Technical
  creator: User
  importFiles(first: Int): FileConnection
  exportFiles(first: Int): FileConnection
  toStix: String
  editContext: [EditUserContext]
}
input AttackPatternAddInput {
  stix_id: String
  name: String! @constraint(minLength: 2)
  description: String!
  aliases: [String]
  revoked: Boolean
  lang: String
  confidence: Int
  x_mitre_platforms: [String]
  x_mitre_permissions_required: [String]
  x_mitre_detection: String
  x_mitre_id: String! @constraint(minLength: 1)
  createdBy: String
  objectMarking: [String]
  objectLabel: [String]
  killChainPhases: [String]
  externalReferences: [String]
  created: DateTime
  modified: DateTime
  clientMutationId: String
  update: Boolean
}

############## Campaigns
enum CampaignsOrdering {
  name
  first_seen
  last_seen
  role_played
  created
  modified
  created_at
  updated_at
}
enum CampaignsFilter {
  name
  aliases
  created
  modified
  created_at
  updated_at
  createdBy
  markedBy
  labelledBy
}
input CampaignsFiltering {
  key: CampaignsFilter!
  values: [String]
  operator: String
  filterMode: FilterMode
}
type CampaignConnection {
  pageInfo: PageInfo!
  edges: [CampaignEdge]
}
type CampaignEdge {
  cursor: String!
  node: Campaign!
}
type Campaign implements BasicObject & StixObject & StixCoreObject & StixDomainObject {
  id: ID! # internal_id
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  # StixObject
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  # StixCoreObject
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  # StixDomainObject
  revoked: Boolean!
  confidence: Int
  lang: String
  created: DateTime
  modified: DateTime
  # Campaign
  name: String!
  description: String
  aliases: [String]
  first_seen: DateTime
  last_seen: DateTime
  objective: String
  # Technical
  creator: User
  importFiles(first: Int): FileConnection
  exportFiles(first: Int): FileConnection
  toStix: String
  editContext: [EditUserContext]
}
input CampaignAddInput {
  stix_id: String
  name: String! @constraint(minLength: 2)
  description: String!
  aliases: [String]
  revoked: Boolean
  lang: String
  confidence: Int
  first_seen: DateTime
  last_seen: DateTime
  objective: String
  createdBy: String
  objectMarking: [String]
  objectLabel: [String]
  externalReferences: [String]
  created: DateTime
  modified: DateTime
  clientMutationId: String
  update: Boolean
}

############## Containers
enum ContainersOrdering {
  created
  modified
  created_at
  updated_at
  createdBy
}
enum ContainersFilter {
  attribute_abstract
  content
  authors
  created
  modified
  created_at
  updated_at
  createdBy
  markedBy
  labelledBy
  objectContains
}
input ContainersFiltering {
  key: ContainersFilter!
  values: [String]!
  operator: String
  filterMode: FilterMode
}
type ContainerConnection {
  pageInfo: PageInfo!
  edges: [ContainerEdge]
}
type ContainerEdge {
  cursor: String!
  node: Container!
}
interface Container {
  id: ID! # internal_id
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  # StixObject
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  # StixCoreObject
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  # StixDomainObject
  revoked: Boolean!
  confidence: Int
  lang: String
  created: DateTime
  modified: DateTime
  # Container
  objects(
    first: Int
    after: ID
    orderBy: StixObjectOrStixRelationshipsOrdering
    orderMode: OrderingMode
    filters: [StixObjectOrStixRelationshipsFiltering]
    filterMode: FilterMode
    search: String
    types: [String]
    all: Boolean
  ): StixObjectOrStixRelationshipConnection
}

################ Notes
enum NotesOrdering {
  attribute_abstract
  created
  modified
  created_at
  updated_at
  createdBy
}
enum NotesFilter {
  attribute_abstract
  content
  authors
  created
  modified
  created_at
  updated_at
  createdBy
  markedBy
  labelledBy
  objectContains
}
input NotesFiltering {
  key: NotesFilter!
  values: [String]!
  operator: String
  filterMode: FilterMode
}
type NoteConnection {
  pageInfo: PageInfo!
  edges: [NoteEdge]
}
type NoteEdge {
  cursor: String!
  node: Note!
}
type Note implements BasicObject & StixObject & StixCoreObject & StixDomainObject & Container {
  id: ID! # internal_id
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  # StixObject
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  # StixCoreObject
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  # StixDomainObject
  revoked: Boolean!
  confidence: Int
  lang: String
  created: DateTime
  modified: DateTime
  # Container
  objects(
    first: Int
    after: ID
    orderBy: StixObjectOrStixRelationshipsOrdering
    orderMode: OrderingMode
    filters: [StixObjectOrStixRelationshipsFiltering]
    filterMode: FilterMode
    search: String
    types: [String]
    all: Boolean
  ): StixObjectOrStixRelationshipConnection
  # Note
  attribute_abstract: String
  content: String!
  authors: [String]
  # Technical
  creator: User
  importFiles(first: Int): FileConnection
  exportFiles(first: Int): FileConnection
  toStix: String
  editContext: [EditUserContext]
}
input NoteAddInput {
  stix_id: String
  attribute_abstract: String!
  content: String! @constraint(minLength: 2)
  authors: [String]
  revoked: Boolean
  lang: String
  confidence: Int
  createdBy: String
  objectMarking: [String]
  objectLabel: [String]
  externalReferences: [String]
  objects: [String]
  created: DateTime
  modified: DateTime
  clientMutationId: String
  update: Boolean
}

################ ObservedDatas
enum ObservedDatasOrdering {
  first_observed
  last_observed
  number_observed
  created
  modified
  created_at
  updated_at
  createdBy
}
enum ObservedDatasFilter {
  first_observed
  last_observed
  number_observed
  created
  modified
  created_at
  updated_at
  createdBy
  markedBy
  labelledBy
  objectContains
}
input ObservedDatasFiltering {
  key: ObservedDatasFilter!
  values: [String]!
  operator: String
  filterMode: FilterMode
}
type ObservedDataConnection {
  pageInfo: PageInfo!
  edges: [ObservedDataEdge]
}
type ObservedDataEdge {
  cursor: String!
  node: ObservedData!
}
type ObservedData implements BasicObject & StixObject & StixCoreObject & StixDomainObject & Container {
  id: ID! # internal_id
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  # StixObject
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  # StixCoreObject
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  # StixDomainObject
  revoked: Boolean!
  confidence: Int
  lang: String
  created: DateTime
  modified: DateTime
  # Container
  objects(
    first: Int
    after: ID
    orderBy: StixObjectOrStixRelationshipsOrdering
    orderMode: OrderingMode
    filters: [StixObjectOrStixRelationshipsFiltering]
    filterMode: FilterMode
    search: String
    types: [String]
    all: Boolean
  ): StixObjectOrStixRelationshipConnection
  # ObservedData
  first_observed: DateTime!
  last_observed: DateTime!
  number_observed: Int!
  # Technical
  creator: User
  importFiles(first: Int): FileConnection
  exportFiles(first: Int): FileConnection
  toStix: String
  editContext: [EditUserContext]
}
input ObservedDataAddInput {
  stix_id: String
  first_observed: DateTime
  last_observed: DateTime
  number_observed: Int
  revoked: Boolean
  lang: String
  confidence: Int
  createdBy: String
  objectMarking: [String]
  objectLabel: [String]
  externalReferences: [String]
  objects: [String]
  created: DateTime
  modified: DateTime
  clientMutationId: String
  update: Boolean
}

################ Opînions
enum OpinionsOrdering {
  opinion
  created
  modified
  created_at
  updated_at
  createdBy
}
enum OpinionsFilter {
  explanation
  authors
  opinion
  created
  modified
  created_at
  updated_at
  createdBy
  markedBy
  labelledBy
  objectContains
}
input OpinionsFiltering {
  key: OpinionsFilter!
  values: [String]!
  operator: String
  filterMode: FilterMode
}
type OpinionConnection {
  pageInfo: PageInfo!
  edges: [OpinionEdge]
}
type OpinionEdge {
  cursor: String!
  node: Opinion!
}
type Opinion implements BasicObject & StixObject & StixCoreObject & StixDomainObject & Container {
  id: ID! # internal_id
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  # StixObject
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  # StixCoreObject
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  # StixDomainObject
  revoked: Boolean!
  confidence: Int
  lang: String
  created: DateTime
  modified: DateTime
  # Container
  objects(
    first: Int
    after: ID
    orderBy: StixObjectOrStixRelationshipsOrdering
    orderMode: OrderingMode
    filters: [StixObjectOrStixRelationshipsFiltering]
    filterMode: FilterMode
    search: String
    types: [String]
    all: Boolean
  ): StixObjectOrStixRelationshipConnection
  # Opinion
  explanation: String
  authors: [String]
  opinion: String!
  # Technical
  creator: User
  importFiles(first: Int): FileConnection
  exportFiles(first: Int): FileConnection
  toStix: String
  editContext: [EditUserContext]
}
input OpinionAddInput {
  stix_id: String
  opinion: String!
  explanation: String
  authors: [String]
  revoked: Boolean
  lang: String
  confidence: Int
  createdBy: String
  objectMarking: [String]
  objectLabel: [String]
  externalReferences: [String]
  objects: [String]
  created: DateTime
  modified: DateTime
  clientMutationId: String
  update: Boolean
}

################ Reports
enum ReportsOrdering {
  name
  created
  modified
  published
  x_opencti_report_status
  created_at
  updated_at
  createdBy
}
enum ReportsFilter {
  name
  published
  published_day
  created
  created_at
  report_types
  x_opencti_report_status
  confidence
  objectLabel
  createdBy
  markedBy
  labelledBy
  objectContains
}
input ReportsFiltering {
  key: ReportsFilter!
  values: [String]!
  operator: String
  filterMode: FilterMode
}
type ReportConnection {
  pageInfo: PageInfo!
  edges: [ReportEdge]
}
type ReportEdge {
  cursor: String!
  node: Report!
}
type Report implements BasicObject & StixObject & StixCoreObject & StixDomainObject & Container {
  id: ID! # internal_id
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  # StixObject
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  # StixCoreObject
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  # StixDomainObject
  revoked: Boolean!
  confidence: Int
  lang: String
  created: DateTime
  modified: DateTime
  # Container
  objects(
    first: Int
    after: ID
    orderBy: StixObjectOrStixRelationshipsOrdering
    orderMode: OrderingMode
    filters: [StixObjectOrStixRelationshipsFiltering]
    filterMode: FilterMode
    search: String
    types: [String]
    all: Boolean
  ): StixObjectOrStixRelationshipConnection
  # Report
  name: String!
  description: String
  report_types: [String]
  published: DateTime
  x_opencti_graph_data: String
  x_opencti_report_status: Int
  # Technical
  creator: User
  toStix: String
  importFiles(first: Int): FileConnection
  exportFiles(first: Int): FileConnection
  editContext: [EditUserContext]
}
input ReportAddInput {
  stix_id: String
  name: String! @constraint(minLength: 2)
  description: String
  published: DateTime!
  report_types: [String]
  x_opencti_graph_data: String
  x_opencti_report_status: Int
  revoked: Boolean
  lang: String
  confidence: Int
  createdBy: String
  objectMarking: [String]
  objectLabel: [String]
  externalReferences: [String]
  objects: [String]
  created: DateTime
  modified: DateTime
  clientMutationId: String
  update: Boolean
}

############## CoursesOfAction
enum CoursesOfActionOrdering {
  name
  created
  modified
  created_at
  updated_at
}
enum CoursesOfActionFilter {
  name
  aliases
  created
  modified
  created_at
  createdBy
  markedBy
  labelledBy
  mitigatedBy
}
input CoursesOfActionFiltering {
  key: CoursesOfActionFilter!
  values: [String]
  operator: String
  filterMode: FilterMode
}
type CourseOfActionConnection {
  pageInfo: PageInfo!
  edges: [CourseOfActionEdge]
}
type CourseOfActionEdge {
  cursor: String!
  node: CourseOfAction!
}
type CourseOfAction implements BasicObject & StixObject & StixCoreObject & StixDomainObject {
  id: ID! # internal_id
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  # StixObject
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  # StixCoreObject
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  # StixDomainObject
  revoked: Boolean!
  confidence: Int
  lang: String
  created: DateTime
  modified: DateTime
  # CourseOfAction
  name: String!
  description: String
  x_opencti_aliases: [String]
  x_mitre_id: String
  attackPatterns: AttackPatternConnection
  # Technical
  creator: User
  importFiles(first: Int): FileConnection
  exportFiles(first: Int): FileConnection
  toStix: String
  editContext: [EditUserContext]
}
input CourseOfActionAddInput {
  stix_id: String
  name: String! @constraint(minLength: 2)
  description: String!
  x_opencti_aliases: [String]
  x_mitre_id: String
  confidence: Int
  revoked: Boolean
  lang: String
  createdBy: String
  objectMarking: [String]
  objectLabel: [String]
  externalReferences: [String]
  created: DateTime
  modified: DateTime
  clientMutationId: String
  update: Boolean
}

############## Identities
enum IdentitiesOrdering {
  name
  created
  modified
  created_at
  updated_at
}
enum IdentitiesFilter {
  entity_type
  identity_class
  name
  x_opencti_aliases
  confidence
  created
  modified
  created_at
  updated_at
  createdBy
  markedBy
  labelledBy
}
input IdentitiesFiltering {
  key: IdentitiesFilter!
  values: [String]
  operator: String
  filterMode: FilterMode
}
type IdentityConnection {
  pageInfo: PageInfo!
  edges: [IdentityEdge]
}
type IdentityEdge {
  cursor: String!
  node: Identity!
}
enum IdentityType {
  Sector
  Organization
  Individual
}
interface Identity {
  id: ID! # internal_id
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  # StixObject
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  # StixCoreObject
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  # StixDomainObject
  revoked: Boolean!
  confidence: Int
  lang: String
  created: DateTime
  modified: DateTime
  # Identity
  identity_class: String!
  name: String!
  description: String
  roles: [String]
  contact_information: String
  x_opencti_aliases: [String]
  # Technical
  creator: User
  importFiles(first: Int): FileConnection
  exportFiles(first: Int): FileConnection
  toStix: String
  editContext: [EditUserContext]
}
input IdentityAddInput {
  type: IdentityType!
  stix_id: String
  name: String!
  description: String
  contact_information: String
  roles: [String]
  x_opencti_aliases: [String]
  confidence: Int
  revoked: Boolean
  lang: String
  createdBy: String
  objectMarking: [String]
  objectLabel: [String]
  externalReferences: [String]
  clientMutationId: String
  created: DateTime
  modified: DateTime
  update: Boolean
}

################ Individuals
enum IndividualsOrdering {
  name
  confidence
  firstname
  lastname
  created
  modified
}
enum IndividualsFilter {
  name
  aliases
  created
  modified
  created_at
  updated_at
  createdBy
  markedBy
  labelledBy
}
input IndividualsFiltering {
  key: IndividualsFilter!
  values: [String]
  operator: String
  filterMode: FilterMode
}
type IndividualConnection {
  pageInfo: PageInfo!
  edges: [IndividualEdge]
}
type IndividualEdge {
  cursor: String!
  node: Individual!
}
type Individual implements BasicObject & StixObject & StixCoreObject & StixDomainObject & Identity {
  id: ID! # internal_id
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  # StixObject
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  # StixCoreObject
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  # StixDomainObject
  revoked: Boolean!
  confidence: Int
  lang: String
  created: DateTime
  modified: DateTime
  # Identity
  identity_class: String!
  name: String!
  description: String
  contact_information: String
  roles: [String]
  x_opencti_aliases: [String]
  # Individual
  x_opencti_firstname: String
  x_opencti_lastname: String
  organizations: OrganizationConnection
  # Technical
  creator: User
  importFiles(first: Int): FileConnection
  exportFiles(first: Int): FileConnection
  toStix: String
  editContext: [EditUserContext]
}
input IndividualAddInput {
  stix_id: String
  name: String! @constraint(minLength: 2)
  description: String!
  contact_information: String
  roles: [String]
  x_opencti_aliases: [String]
  x_opencti_firstname: String
  x_opencti_lastname: String
  confidence: Int
  revoked: Boolean
  lang: String
  createdBy: String
  objectMarking: [String]
  objectLabel: [String]
  externalReferences: [String]
  created: DateTime
  modified: DateTime
  clientMutationId: String
  update: Boolean
}

################ Organizations
enum OrganizationsOrdering {
  name
  confidence
  created
  modified
  x_opencti_organization_type
}
enum OrganizationsFilter {
  name
  aliases
  x_opencti_organization_type
  x_opencti_reliability
  created
  modified
  created_at
  updated_at
  createdBy
  markedBy
  labelledBy
}
input OrganizationsFiltering {
  key: OrganizationsFilter!
  values: [String]
  operator: String
  filterMode: FilterMode
}
type OrganizationConnection {
  pageInfo: PageInfo!
  edges: [OrganizationEdge]
}
type OrganizationEdge {
  cursor: String!
  node: Organization!
}
enum OrganizationReliability {
  A
  B
  C
  D
  E
  F
}
type Organization implements BasicObject & StixObject & StixCoreObject & StixDomainObject & Identity {
  id: ID! # internal_id
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  # StixObject
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  # StixCoreObject
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  # StixDomainObject
  revoked: Boolean!
  confidence: Int
  lang: String
  created: DateTime
  modified: DateTime
  # Identity
  identity_class: String!
  name: String!
  description: String
  contact_information: String
  roles: [String]
  x_opencti_aliases: [String]
  # Organization
  x_opencti_organization_type: String
  x_opencti_reliability: OrganizationReliability
  sectors: SectorConnection
  # Technical
  creator: User
  importFiles(first: Int): FileConnection
  exportFiles(first: Int): FileConnection
  toStix: String
  editContext: [EditUserContext]
}
input OrganizationAddInput {
  stix_id: String
  name: String! @constraint(minLength: 2)
  description: String!
  contact_information: String
  roles: [String]
  x_opencti_aliases: [String]
  confidence: Int
  revoked: Boolean
  lang: String
  x_opencti_organization_type: String
  x_opencti_reliability: OrganizationReliability
  createdBy: String
  objectMarking: [String]
  objectLabel: [String]
  externalReferences: [String]
  created: DateTime
  modified: DateTime
  clientMutationId: String
  update: Boolean
}

################ Sectors
enum SectorsOrdering {
  name
  description
  confidence
  created
  modified
  created_at
  updated_at
}
enum SectorsFilter {
  name
  confidence
  created
  modified
  created_at
  updated_at
  createdBy
  markedBy
  labelledBy
  partOf
}
input SectorsFiltering {
  key: SectorsFilter!
  values: [String]
  operator: String
  filterMode: FilterMode
}
type SectorConnection {
  pageInfo: PageInfo!
  edges: [SectorEdge]
}
type SectorEdge {
  cursor: String!
  node: Sector!
}
type Sector implements BasicObject & StixObject & StixCoreObject & StixDomainObject & Identity {
  id: ID! # internal_id
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  # StixObject
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  # StixCoreObject
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  # StixDomainObject
  revoked: Boolean!
  confidence: Int
  lang: String
  created: DateTime
  modified: DateTime
  # Identity
  identity_class: String!
  name: String!
  description: String
  contact_information: String
  roles: [String]
  x_opencti_aliases: [String]
  # Sector
  parentSectors: SectorConnection
  subSectors: SectorConnection
  isSubSector: Boolean
  targetedOrganizations: StixCoreRelationshipConnection
  # Technical
  creator: User
  importFiles(first: Int): FileConnection
  exportFiles(first: Int): FileConnection
  toStix: String
  editContext: [EditUserContext]
}
input SectorAddInput {
  stix_id: String
  name: String! @constraint(minLength: 2)
  description: String!
  contact_information: String
  roles: [String]
  x_opencti_aliases: [String]
  confidence: Int
  revoked: Boolean
  lang: String
  createdBy: String
  objectMarking: [String]
  objectLabel: [String]
  externalReferences: [String]
  created: DateTime
  modified: DateTime
  clientMutationId: String
  update: Boolean
}

############## Indicators
enum IndicatorsOrdering {
  pattern_type
  pattern_version
  pattern
  name
  indicator_types
  valid_from
  valid_until
  x_opencti_score
  x_opencti_detection
  confidence
  created
  modified
  created_at
  updated_at
}
enum IndicatorsFilter {
  name
  pattern_type
  pattern_version
  pattern
  x_opencti_main_observable_type
  x_opencti_score
  x_opencti_detection
  valid_from
  valid_until
  created
  modified
  created_at
  updated_at
  createdBy
  markedBy
  labelledBy
  basedOn
  indicates
}
input IndicatorsFiltering {
  key: IndicatorsFilter!
  values: [String]
  operator: String
  filterMode: FilterMode
}
type IndicatorConnection {
  pageInfo: PageInfo!
  edges: [IndicatorEdge]
}
type IndicatorEdge {
  cursor: String!
  node: Indicator!
}
type Indicator implements BasicObject & StixObject & StixCoreObject & StixDomainObject {
  id: ID! # internal_id
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  # StixObject
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  # StixCoreObject
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  # StixDomainObject
  revoked: Boolean!
  confidence: Int
  lang: String
  created: DateTime
  modified: DateTime
  # Indicator
  pattern_type: String
  pattern_version: String
  pattern: String
  name: String!
  description: String
  indicator_types: [String]
  valid_from: DateTime
  valid_until: DateTime
  x_opencti_score: Int
  x_opencti_detection: Boolean
  x_opencti_main_observable_type: String
  x_mitre_platforms: [String]
  killChainPhases: KillChainPhaseConnection
  observables: StixCyberObservableConnection
  # Technical
  creator: User
  importFiles(first: Int): FileConnection
  exportFiles(first: Int): FileConnection
  toStix: String
  editContext: [EditUserContext]
}
input IndicatorAddInput {
  stix_id: String
  pattern_type: String!
  pattern_version: String
  pattern: String!
  name: String! @constraint(minLength: 2)
  description: String
  indicator_types: [String]
  valid_from: DateTime
  valid_until: DateTime
  confidence: Int
  revoked: Boolean
  lang: String
  x_opencti_score: Int
  x_opencti_detection: Boolean
  x_opencti_main_observable_type: String
  x_mitre_platforms: [String]
  killChainPhases: [String]
  createdBy: String
  objectMarking: [String]
  objectLabel: [String]
  externalReferences: [String]
  created: DateTime
  modified: DateTime
  clientMutationId: String
  update: Boolean
}

############## Infrastructures
enum InfrastructuresOrdering {
  name
  infrastructure_types
  first_seen
  last_seen
  created
  modified
  created_at
  updated_at
}
enum InfrastructuresFilter {
  name
  aliases
  infrastructure_types
  first_seen
  last_seen
  created
  modified
  created_at
  updated_at
  createdBy
  markedBy
  labelledBy
}
input InfrastructuresFiltering {
  key: InfrastructuresFilter!
  values: [String]
  operator: String
  filterMode: FilterMode
}
type InfrastructureConnection {
  pageInfo: PageInfo!
  edges: [InfrastructureEdge]
}
type InfrastructureEdge {
  cursor: String!
  node: Infrastructure!
}
type Infrastructure implements BasicObject & StixObject & StixCoreObject & StixDomainObject {
  id: ID! # internal_id
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  # StixObject
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  # StixCoreObject
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  # StixDomainObject
  revoked: Boolean!
  confidence: Int
  lang: String
  created: DateTime
  modified: DateTime
  # Infrastructure
  name: String!
  aliases: [String]
  description: String
  infrastructure_types: [String]
  first_seen: DateTime
  last_seen: DateTime
  killChainPhases: KillChainPhaseConnection
  # Technical
  creator: User
  importFiles(first: Int): FileConnection
  exportFiles(first: Int): FileConnection
  toStix: String
  editContext: [EditUserContext]
}
input InfrastructureAddInput {
  stix_id: String
  name: String! @constraint(minLength: 2)
  description: String
  aliases: [String]
  infrastructure_types: [String]
  first_seen: DateTime
  last_seen: DateTime
  confidence: Int
  revoked: Boolean
  lang: String
  createdBy: String
  objectMarking: [String]
  objectLabel: [String]
  externalReferences: [String]
  killChainPhases: [String]
  created: DateTime
  modified: DateTime
  clientMutationId: String
  update: Boolean
}

############## IntrusionSets
enum IntrusionSetsOrdering {
  name
  created
  modified
  created_at
  updated_at
}
enum IntrusionSetsFilter {
  name
  aliases
  created
  modified
  created_at
  updated_at
  createdBy
  markedBy
  labelledBy
}
input IntrusionSetsFiltering {
  key: IntrusionSetsFilter!
  values: [String]
  operator: String
  filterMode: FilterMode
}
type IntrusionSetConnection {
  pageInfo: PageInfo!
  edges: [IntrusionSetEdge]
}
type IntrusionSetEdge {
  cursor: String!
  node: IntrusionSet!
}
type IntrusionSet implements BasicObject & StixObject & StixCoreObject & StixDomainObject {
  id: ID! # internal_id
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  # StixObject
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  # StixCoreObject
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  # StixDomainObject
  revoked: Boolean!
  confidence: Int
  lang: String
  created: DateTime
  modified: DateTime
  # IntrusionSet
  name: String!
  description: String
  aliases: [String]
  first_seen: DateTime
  last_seen: DateTime
  goals: [String]
  resource_level: String
  primary_motivation: String
  secondary_motivations: [String]
  locations: LocationConnection
  # Technical
  creator: User
  importFiles(first: Int): FileConnection
  exportFiles(first: Int): FileConnection
  toStix: String
  editContext: [EditUserContext]
}
input IntrusionSetAddInput {
  stix_id: String
  name: String! @constraint(minLength: 2)
  description: String!
  aliases: [String]
  first_seen: DateTime
  last_seen: DateTime
  goals: [String]
  resource_level: String
  primary_motivation: String
  secondary_motivations: [String]
  confidence: Int
  revoked: Boolean
  lang: String
  createdBy: String
  objectMarking: [String]
  objectLabel: [String]
  externalReferences: [String]
  created: DateTime
  modified: DateTime
  clientMutationId: String
  update: Boolean
}

############## Locations
enum LocationsOrdering {
  name
  latitude
  longitude
  created
  modified
  created_at
  updated_at
}
enum LocationsFilter {
  entity_type
  name
  x_opencti_aliases
  confidence
  created
  modified
  created_at
  updated_at
  createdBy
  markedBy
  labelledBy
}
input LocationsFiltering {
  key: LocationsFilter!
  values: [String]
  operator: String
  filterMode: FilterMode
}
type LocationConnection {
  pageInfo: PageInfo!
  edges: [LocationEdge]
}
type LocationEdge {
  cursor: String!
  node: Location!
}
enum LocationType {
  City
  Country
  Region
  Position
}
interface Location {
  id: ID! # internal_id
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  # StixObject
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  # StixCoreObject
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  # StixDomainObject
  revoked: Boolean!
  confidence: Int
  lang: String
  created: DateTime
  modified: DateTime
  # Location
  name: String!
  description: String
  latitude: Float
  longitude: Float
  precision: Float
  x_opencti_aliases: [String]
}
input LocationAddInput {
  type: LocationType!
  stix_id: String
  name: String!
  description: String
  latitude: Float
  longitude: Float
  precision: Float
  x_opencti_aliases: [String]
  confidence: Int
  revoked: Boolean
  lang: String
  createdBy: String
  objectMarking: [String]
  objectLabel: [String]
  externalReferences: [String]
  clientMutationId: String
  created: DateTime
  modified: DateTime
  update: Boolean
}

################ Positions
enum PositionsOrdering {
  name
  postal_address
  postal_code
  created
  modified
  created_at
  updated_at
}
enum PositionsFilter {
  created
  modified
  created_at
  updated_at
  createdBy
  markedBy
  labelledBy
}
input PositionsFiltering {
  key: PositionsFilter!
  values: [String]
  operator: String
  filterMode: FilterMode
}
type PositionConnection {
  pageInfo: PageInfo!
  edges: [PositionEdge]
}
type PositionEdge {
  cursor: String!
  node: Position!
}
type Position implements BasicObject & StixObject & StixCoreObject & StixDomainObject & Location {
  id: ID! # internal_id
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  # StixObject
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  # StixCoreObject
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  # StixDomainObject
  revoked: Boolean!
  confidence: Int
  lang: String
  created: DateTime
  modified: DateTime
  # Location
  name: String!
  description: String
  latitude: Float
  longitude: Float
  precision: Float
  x_opencti_aliases: [String]
  # Position
  street_address: String
  postal_code: String
  city: City
  # Technical
  creator: User
  importFiles(first: Int): FileConnection
  exportFiles(first: Int): FileConnection
  toStix: String
  editContext: [EditUserContext]
}
input PositionAddInput {
  stix_id: String
  name: String! @constraint(minLength: 2)
  description: String
  latitude: Float
  longitude: Float
  precision: Float
  street_address: String
  postal_code: String
  confidence: Int
  revoked: Boolean
  lang: String
  x_opencti_aliases: [String]
  createdBy: String
  objectMarking: [String]
  objectLabel: [String]
  externalReferences: [String]
  created: DateTime
  modified: DateTime
  clientMutationId: String
  update: Boolean
}

################ Cities
enum CitiesOrdering {
  name
  description
  aliases
  created
  modified
  created_at
  updated_at
  objectMarking
  objectLabel
}
enum CitiesFilter {
  name
  created
  modified
  created_at
  updated_at
  createdBy
  markedBy
  labelledBy
}
input CitiesFiltering {
  key: CitiesFilter!
  values: [String]
  operator: String
  filterMode: FilterMode
}
type CityConnection {
  pageInfo: PageInfo!
  edges: [CityEdge]
}
type CityEdge {
  cursor: String!
  node: City!
}
type City implements BasicObject & StixObject & StixCoreObject & StixDomainObject & Location {
  id: ID! # internal_id
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  # StixObject
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  # StixCoreObject
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  # StixDomainObject
  revoked: Boolean!
  confidence: Int
  lang: String
  created: DateTime
  modified: DateTime
  # Location
  name: String!
  description: String
  latitude: Float
  longitude: Float
  precision: Float
  x_opencti_aliases: [String]
  # City
  country: Country
  # Technical
  creator: User
  importFiles(first: Int): FileConnection
  exportFiles(first: Int): FileConnection
  toStix: String
  editContext: [EditUserContext]
}
input CityAddInput {
  stix_id: String
  name: String! @constraint(minLength: 2)
  description: String
  latitude: Float
  longitude: Float
  precision: Float
  confidence: Int
  revoked: Boolean
  lang: String
  x_opencti_aliases: [String]
  createdBy: String
  objectMarking: [String]
  objectLabel: [String]
  externalReferences: [String]
  created: DateTime
  modified: DateTime
  clientMutationId: String
  update: Boolean
}

################ Countries
enum CountriesOrdering {
  name
  description
  created
  modified
  created_at
  updated_at
}
enum CountriesFilter {
  created
  modified
  created_at
  createdBy
  markedBy
  labelledBy
}
input CountriesFiltering {
  key: CountriesFilter!
  values: [String]
  operator: String
  filterMode: FilterMode
}
type CountryConnection {
  pageInfo: PageInfo!
  edges: [CountryEdge]
}
type CountryEdge {
  cursor: String!
  node: Country!
}
type Country implements BasicObject & StixObject & StixCoreObject & StixDomainObject & Location {
  id: ID! # internal_id
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  # StixObject
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  # StixCoreObject
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  # StixDomainObject
  revoked: Boolean!
  confidence: Int
  lang: String
  created: DateTime
  modified: DateTime
  # Location
  name: String!
  description: String
  latitude: Float
  longitude: Float
  precision: Float
  x_opencti_aliases: [String]
  # Country
  region: Region
  # Technical
  creator: User
  importFiles(first: Int): FileConnection
  exportFiles(first: Int): FileConnection
  toStix: String
  editContext: [EditUserContext]
}
input CountryAddInput {
  stix_id: String
  name: String! @constraint(minLength: 2)
  description: String
  latitude: Float
  longitude: Float
  precision: Float
  confidence: Int
  revoked: Boolean
  lang: String
  x_opencti_aliases: [String]
  createdBy: String
  objectMarking: [String]
  objectLabel: [String]
  externalReferences: [String]
  created: DateTime
  modified: DateTime
  clientMutationId: String
  update: Boolean
}

################ Regions
enum RegionsOrdering {
  name
  description
  created
  modified
  created_at
  updated_at
}
enum RegionsFilter {
  created
  modified
  created_at
  createdBy
  markedBy
  labelledBy
}
input RegionsFiltering {
  key: RegionsFilter!
  values: [String]
  operator: String
  filterMode: FilterMode
}
type RegionConnection {
  pageInfo: PageInfo!
  edges: [RegionEdge]
}
type RegionEdge {
  cursor: String!
  node: Region!
}
type Region implements BasicObject & StixObject & StixCoreObject & StixDomainObject & Location {
  id: ID! # internal_id
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  # StixObject
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  # StixCoreObject
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  # StixDomainObject
  revoked: Boolean!
  confidence: Int
  lang: String
  created: DateTime
  modified: DateTime
  # Location
  name: String!
  description: String
  latitude: Float
  longitude: Float
  precision: Float
  x_opencti_aliases: [String]
  # Region
  parentRegions: RegionConnection
  subRegions: RegionConnection
  isSubRegion: Boolean
  countries: CountryConnection
  # Technical
  creator: User
  importFiles(first: Int): FileConnection
  exportFiles(first: Int): FileConnection
  toStix: String
  editContext: [EditUserContext]
}
input RegionAddInput {
  stix_id: String
  name: String! @constraint(minLength: 2)
  description: String
  latitude: Float
  longitude: Float
  precision: Float
  confidence: Int
  revoked: Boolean
  lang: String
  x_opencti_aliases: [String]
  createdBy: String
  objectMarking: [String]
  objectLabel: [String]
  externalReferences: [String]
  created: DateTime
  modified: DateTime
  clientMutationId: String
  update: Boolean
}

############## Malware
enum MalwaresOrdering {
  name
  malware_types
  first_seen
  last_seen
  created
  modified
  created_at
  updated_at
  objectMarking
  objectLabel
}
enum MalwaresFilter {
  name
  aliases
  malware_types
  first_seen
  last_seen
  is_family
  created
  modified
  created_at
  updated_at
  createdBy
  markedBy
  labelledBy
}
input MalwaresFiltering {
  key: MalwaresFilter!
  values: [String]
  operator: String
  filterMode: FilterMode
}
type MalwareConnection {
  pageInfo: PageInfo!
  edges: [MalwareEdge]
}
type MalwareEdge {
  cursor: String!
  node: Malware!
}
type Malware implements BasicObject & StixObject & StixCoreObject & StixDomainObject {
  id: ID! # internal_id
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  # StixObject
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  # StixCoreObject
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  # StixDomainObject
  revoked: Boolean!
  confidence: Int
  lang: String
  created: DateTime
  modified: DateTime
  # Malware
  name: String!
  description: String
  aliases: [String]
  malware_types: [String]
  is_family: Boolean
  first_seen: DateTime
  last_seen: DateTime
  architecture_execution_envs: [String]
  implementation_languages: [String]
  capabilities: [String]
  killChainPhases: KillChainPhaseConnection
  # Technical
  creator: User
  importFiles(first: Int): FileConnection
  exportFiles(first: Int): FileConnection
  toStix: String
  editContext: [EditUserContext]
}
input MalwareAddInput {
  stix_id: String
  name: String! @constraint(minLength: 2)
  description: String!
  malware_types: [String]
  aliases: [String]
  is_family: Boolean
  first_seen: DateTime
  last_seen: DateTime
  architecture_execution_envs: [String]
  implementation_languages: [String]
  capabilities: [String]
  confidence: Int
  revoked: Boolean
  lang: String
  createdBy: String
  objectMarking: [String]
  objectLabel: [String]
  externalReferences: [String]
  killChainPhases: [String]
  created: DateTime
  modified: DateTime
  clientMutationId: String
  update: Boolean
}

############## ThreatActors
enum ThreatActorsOrdering {
  name
  created
  modified
  created_at
  updated_at
}
enum ThreatActorsFilter {
  name
  aliases
  created
  modified
  created_at
  updated_at
  createdBy
  markedBy
  labelledBy
}
input ThreatActorsFiltering {
  key: ThreatActorsFilter!
  values: [String]
  operator: String
  filterMode: FilterMode
}
type ThreatActorConnection {
  pageInfo: PageInfo!
  edges: [ThreatActorEdge]
}
type ThreatActorEdge {
  cursor: String!
  node: ThreatActor!
}
type ThreatActor implements BasicObject & StixObject & StixCoreObject & StixDomainObject {
  id: ID! # internal_id
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  # StixObject
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  # StixCoreObject
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  # StixDomainObject
  revoked: Boolean!
  confidence: Int
  lang: String
  created: DateTime
  modified: DateTime
  # ThreatActor
  name: String!
  description: String
  aliases: [String]
  threat_actor_types: [String]
  first_seen: DateTime
  last_seen: DateTime
  roles: [String]
  goals: [String]
  sophistication: String
  resource_level: String
  primary_motivation: String
  secondary_motivations: [String]
  personal_motivations: [String]
  locations: LocationConnection
  # Technical
  creator: User
  importFiles(first: Int): FileConnection
  exportFiles(first: Int): FileConnection
  toStix: String
  editContext: [EditUserContext]
}
input ThreatActorAddInput {
  stix_id: String
  name: String! @constraint(minLength: 2)
  description: String!
  aliases: [String]
  threat_actor_types: [String]
  first_seen: DateTime
  last_seen: DateTime
  goals: [String]
  sophistication: String
  resource_level: String
  primary_motivation: String
  secondary_motivations: [String]
  personal_motivations: [String]
  confidence: Int
  revoked: Boolean
  lang: String
  createdBy: String
  objectMarking: [String]
  objectLabel: [String]
  externalReferences: [String]
  created: DateTime
  modified: DateTime
  clientMutationId: String
  update: Boolean
}

############## Tools
enum ToolsOrdering {
  name
  created
  modified
  created_at
  updated_at
}
enum ToolsFilter {
  name
  aliases
  created
  modified
  created_at
  createdBy
  markedBy
  labelledBy
}
input ToolsFiltering {
  key: ToolsFilter!
  values: [String]
  operator: String
  filterMode: FilterMode
}
type ToolConnection {
  pageInfo: PageInfo!
  edges: [ToolEdge]
}
type ToolEdge {
  cursor: String!
  node: Tool!
}
type Tool implements StixDomainObject & StixCoreObject & StixObject & BasicObject {
  id: ID! # internal_id
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  # StixObject
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  # StixCoreObject
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  # StixDomainObject
  revoked: Boolean!
  confidence: Int
  lang: String
  created: DateTime
  modified: DateTime
  # Tool
  name: String!
  description: String
  aliases: [String]
  tool_types: [String]
  tool_version: String
  killChainPhases: KillChainPhaseConnection
  # Technical
  creator: User
  importFiles(first: Int): FileConnection
  exportFiles(first: Int): FileConnection
  toStix: String
  editContext: [EditUserContext]
}
input ToolAddInput {
  stix_id: String
  name: String! @constraint(minLength: 2)
  description: String!
  aliases: [String]
  tool_types: [String]
  tool_version: String
  confidence: Int
  revoked: Boolean
  lang: String
  createdBy: String
  objectMarking: [String]
  objectLabel: [String]
  externalReferences: [String]
  killChainPhases: [String]
  created: DateTime
  modified: DateTime
  clientMutationId: String
  update: Boolean
}

############## Vulnerabilities
enum VulnerabilitiesOrdering {
  name
  x_opencti_base_score
  x_opencti_base_severity
  x_opencti_attack_vector
  created
  modified
  created_at
  updated_at
}
enum VulnerabilitiesFilter {
  name
  x_opencti_base_score
  x_opencti_base_severity
  x_opencti_attack_vector
  created
  modified
  created_at
  createdBy
  markedBy
  labelledBy
}
input VulnerabilitiesFiltering {
  key: VulnerabilitiesFilter!
  values: [String]
  operator: String
  filterMode: FilterMode
}
type VulnerabilityConnection {
  pageInfo: PageInfo!
  edges: [VulnerabilityEdge]
}
type VulnerabilityEdge {
  cursor: String!
  node: Vulnerability!
}
type Vulnerability implements StixDomainObject & StixCoreObject & StixObject & BasicObject {
  id: ID! # internal_id
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  # StixObject
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  # StixCoreObject
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  # StixDomainObject
  revoked: Boolean!
  confidence: Int
  lang: String
  created: DateTime
  modified: DateTime
  # Vulnerability
  name: String!
  description: String
  x_opencti_base_score: Float
  x_opencti_base_severity: String
  x_opencti_attack_vector: String
  x_opencti_integrity_impact: String
  x_opencti_availability_impact: String
  # Technical
  creator: User
  importFiles(first: Int): FileConnection
  exportFiles(first: Int): FileConnection
  toStix: String
  editContext: [EditUserContext]
}
input VulnerabilityAddInput {
  stix_id: String
  name: String! @constraint(minLength: 2)
  description: String!
  x_opencti_base_score: Float
  x_opencti_base_severity: String
  x_opencti_attack_vector: String
  x_opencti_integrity_impact: String
  x_opencti_availability_impact: String
  confidence: Int
  revoked: Boolean
  lang: String
  createdBy: String
  objectMarking: [String]
  objectLabel: [String]
  externalReferences: [String]
  created: DateTime
  modified: DateTime
  clientMutationId: String
  update: Boolean
}

############## XOpenCTIIncident
enum XOpenCTIIncidentsOrdering {
  name
  first_seen
  last_seen
  created
  modified
  created_at
  updated_at
}
enum XOpenCTIIncidentsFilter {
  name
  aliases
  created
  modified
  created_at
  createdBy
  markedBy
  labelledBy
}
input XOpenCTIIncidentsFiltering {
  key: XOpenCTIIncidentsFilter!
  values: [String]
  operator: String
  filterMode: FilterMode
}
type XOpenCTIIncidentConnection {
  pageInfo: PageInfo!
  edges: [XOpenCTIIncidentEdge]
}
type XOpenCTIIncidentEdge {
  cursor: String!
  node: XOpenCTIIncident!
}
type XOpenCTIIncident implements BasicObject & StixObject & StixCoreObject & StixDomainObject {
  id: ID! # internal_id
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  # StixObject
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  # StixCoreObject
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  # StixDomainObject
  revoked: Boolean!
  confidence: Int
  lang: String
  created: DateTime
  modified: DateTime
  # XOpenCTIIncident
  name: String!
  description: String
  aliases: [String]
  first_seen: DateTime
  last_seen: DateTime
  objective: String
  # Technical
  creator: User
  importFiles(first: Int): FileConnection
  exportFiles(first: Int): FileConnection
  toStix: String
  editContext: [EditUserContext]
}
input XOpenCTIIncidentAddInput {
  stix_id: String
  name: String! @constraint(minLength: 2)
  description: String!
  confidence: Int
  revoked: Boolean
  lang: String
  objective: String
  first_seen: DateTime
  last_seen: DateTime
  aliases: [String]
  createdBy: String
  objectMarking: [String]
  objectLabel: [String]
  externalReferences: [String]
  created: DateTime
  modified: DateTime
  clientMutationId: String
  update: Boolean
}

######## STIX CYBER OBSERVABLES ENTITIES

enum StixCyberObservablesOrdering {
  entity_type
  created_at
  updated_at
}
enum StixCyberObservablesFilter {
  entity_type
  x_opencti_score
  created
  modified
  created_at
  updated_at
  createdBy
  markedBy
  labelledBy
  relatedTo
  objectContained
  hasExternalReference
  value
  name
  confidence
  hashes_MD5
  hashes_SHA1
  hashes_SHA256
}
input StixCyberObservablesFiltering {
  key: StixCyberObservablesFilter!
  values: [String]
  operator: String
  filterMode: FilterMode
}
type StixCyberObservableConnection {
  pageInfo: PageInfo!
  edges: [StixCyberObservableEdge]
}
type StixCyberObservableEdge {
  cursor: String!
  node: StixCyberObservable!
}
interface StixCyberObservable {
  id: ID! # internal_id
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  # StixObject
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  # StixCoreObject
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  # StixCyberObservable
  x_opencti_score: Int
  x_opencti_description: String
  observable_value: String!
  indicators: IndicatorConnection
  stixCyberObservableRelationships(
    first: Int
    after: ID
    orderBy: StixCyberObservableRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCyberObservableRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCyberObservableRelationshipConnection
  # Technical
  creator: User
  toStix: String
  editContext: [EditUserContext]
  connectors(onlyAlive: Boolean): [Connector]
  jobs(first: Int): [Work]
}
type AutonomousSystem implements BasicObject & StixObject & StixCoreObject & StixCyberObservable {
  id: ID! # internal_id
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  # StixObject
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  # StixCoreObject
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  # StixCyberObservable
  x_opencti_score: Int
  x_opencti_description: String
  observable_value: String!
  indicators: IndicatorConnection
  stixCyberObservableRelationships(
    first: Int
    after: ID
    orderBy: StixCyberObservableRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCyberObservableRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCyberObservableRelationshipConnection
  # AutonomousSystem
  number: Int!
  name: String
  rir: String
  # Technical
  creator: User
  toStix: String
  editContext: [EditUserContext]
  connectors(onlyAlive: Boolean): [Connector]
  jobs(first: Int): [Work]
}
input AutonomousSystemAddInput {
  number: Int!
  name: String
  rir: String
}
type Directory implements BasicObject & StixObject & StixCoreObject & StixCyberObservable {
  id: ID! # internal_id
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  # StixObject
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  # StixCoreObject
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  # StixCyberObservable
  x_opencti_score: Int
  x_opencti_description: String
  observable_value: String!
  indicators: IndicatorConnection
  stixCyberObservableRelationships(
    first: Int
    after: ID
    orderBy: StixCyberObservableRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCyberObservableRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCyberObservableRelationshipConnection
  # Directory
  path: String!
  path_enc: String
  ctime: DateTime
  mtime: DateTime
  atime: DateTime
  # Technical
  creator: User
  toStix: String
  editContext: [EditUserContext]
  connectors(onlyAlive: Boolean): [Connector]
  jobs(first: Int): [Work]
}
input DirectoryAddInput {
  path: String!
  path_enc: String
  ctime: DateTime
  mtime: DateTime
  atime: DateTime
}
type DomainName implements BasicObject & StixObject & StixCoreObject & StixCyberObservable {
  id: ID! # internal_id
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  # StixObject
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  # StixCoreObject
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  # StixCyberObservable
  observable_value: String!
  x_opencti_score: Int
  x_opencti_description: String
  indicators: IndicatorConnection
  stixCyberObservableRelationships(
    first: Int
    after: ID
    orderBy: StixCyberObservableRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCyberObservableRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCyberObservableRelationshipConnection
  # DomainName
  value: String
  # Technical
  creator: User
  toStix: String
  editContext: [EditUserContext]
  connectors(onlyAlive: Boolean): [Connector]
  jobs(first: Int): [Work]
}
input DomainNameAddInput {
  value: String!
}
type EmailAddr implements BasicObject & StixObject & StixCoreObject & StixCyberObservable {
  id: ID! # internal_id
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  # StixObject
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  # StixCoreObject
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  # StixCyberObservable
  x_opencti_score: Int
  x_opencti_description: String
  observable_value: String!
  indicators: IndicatorConnection
  stixCyberObservableRelationships(
    first: Int
    after: ID
    orderBy: StixCyberObservableRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCyberObservableRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCyberObservableRelationshipConnection
  # EmailAddr
  value: String
  display_name: String
  # Technical
  creator: User
  toStix: String
  editContext: [EditUserContext]
  connectors(onlyAlive: Boolean): [Connector]
  jobs(first: Int): [Work]
}
input EmailAddrAddInput {
  value: String
  display_name: String
}
type EmailMessage implements BasicObject & StixObject & StixCoreObject & StixCyberObservable {
  id: ID! # internal_id
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  # StixObject
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  # StixCoreObject
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  # StixCyberObservable
  x_opencti_score: Int
  x_opencti_description: String
  observable_value: String!
  indicators: IndicatorConnection
  stixCyberObservableRelationships(
    first: Int
    after: ID
    orderBy: StixCyberObservableRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCyberObservableRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCyberObservableRelationshipConnection
  # EmailMessage
  is_multipart: Boolean
  attribute_date: DateTime
  content_type: String
  message_id: String
  subject: String
  received_lines: [String]
  body: String
  # Technical
  creator: User
  toStix: String
  editContext: [EditUserContext]
  connectors(onlyAlive: Boolean): [Connector]
  jobs(first: Int): [Work]
}
input EmailMessageAddInput {
  is_multipart: Boolean
  attribute_date: DateTime
  content_type: String
  message_id: String
  subject: String
  received_lines: [String]
  body: String
}
type EmailMimePartType implements BasicObject & StixObject & StixCoreObject & StixCyberObservable {
  id: ID! # internal_id
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  # StixObject
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  # StixCoreObject
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  # StixCyberObservable
  x_opencti_score: Int
  x_opencti_description: String
  observable_value: String!
  indicators: IndicatorConnection
  stixCyberObservableRelationships(
    first: Int
    after: ID
    orderBy: StixCyberObservableRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCyberObservableRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCyberObservableRelationshipConnection
  # EmailMimePartType
  body: String
  content_type: String
  content_disposition: String
  # Technical
  creator: User
  toStix: String
  editContext: [EditUserContext]
  connectors(onlyAlive: Boolean): [Connector]
  jobs(first: Int): [Work]
}
input EmailMimePartTypeAddInput {
  body: String
  content_type: String
  content_disposition: String
}
############## HashedObservable
input HashInput {
  algorithm: String! @constraint(minLength: 3)
  hash: String! @constraint(minLength: 5)
}
type Hash {
  algorithm: String!
  hash: String
}
interface HashedObservable {
  id: ID! # internal_id
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  # StixObject
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  # StixCoreObject
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  # StixCyberObservable
  x_opencti_score: Int
  x_opencti_description: String
  observable_value: String!
  indicators: IndicatorConnection
  stixCyberObservableRelationships(
    first: Int
    after: ID
    orderBy: StixCyberObservableRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCyberObservableRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCyberObservableRelationshipConnection
  # HashedObservable
  hashes: [Hash]
  # Technical
  creator: User
  toStix: String
  editContext: [EditUserContext]
  connectors(onlyAlive: Boolean): [Connector]
  jobs(first: Int): [Work]
}
type Artifact implements BasicObject & StixObject & StixCoreObject & StixCyberObservable & HashedObservable {
  id: ID! # internal_id
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  # StixObject
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  # StixCoreObject
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  # StixCyberObservable
  x_opencti_score: Int
  x_opencti_description: String
  observable_value: String!
  indicators: IndicatorConnection
  stixCyberObservableRelationships(
    first: Int
    after: ID
    orderBy: StixCyberObservableRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCyberObservableRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCyberObservableRelationshipConnection
  # HashedObservable
  hashes: [Hash]
  # Artifact
  mime_type: String
  payload_bin: String
  url: String
  encryption_algorithm: String
  decryption_key: String
  # Technical
  creator: User
  toStix: String
  editContext: [EditUserContext]
  connectors(onlyAlive: Boolean): [Connector]
  jobs(first: Int): [Work]
}
input ArtifactAddInput {
  hashes: [HashInput]
  mime_type: String
  payload_bin: String
  url: String
  encryption_algorithm: String
  decryption_key: String
}
type StixFile implements BasicObject & StixObject & StixCoreObject & StixCyberObservable & HashedObservable {
  id: ID! # internal_id
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  # StixObject
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  # StixCoreObject
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  # StixCyberObservable
  x_opencti_score: Int
  x_opencti_description: String
  observable_value: String!
  indicators: IndicatorConnection
  stixCyberObservableRelationships(
    first: Int
    after: ID
    orderBy: StixCyberObservableRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCyberObservableRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCyberObservableRelationshipConnection
  # HashedObservable
  hashes: [Hash]
  # File
  extensions: String
  size: Int
  name: String
  name_enc: String
  magic_number_hex: String
  mime_type: String
  ctime: DateTime
  mtime: DateTime
  atime: DateTime
  x_opencti_additional_names: [String]
  # Technical
  creator: User
  toStix: String
  editContext: [EditUserContext]
  connectors(onlyAlive: Boolean): [Connector]
  jobs(first: Int): [Work]
}
input StixFileAddInput {
  hashes: [HashInput]
  extensions: String
  size: Int
  name: String
  name_enc: String
  magic_number_hex: String
  mime_type: String
  ctime: DateTime
  mtime: DateTime
  atime: DateTime
  x_opencti_additional_names: [String]
}
type X509Certificate implements BasicObject & StixObject & StixCoreObject & StixCyberObservable & HashedObservable {
  id: ID! # internal_id
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  # StixObject
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  # StixCoreObject
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  # StixCyberObservable
  x_opencti_score: Int
  x_opencti_description: String
  observable_value: String!
  indicators: IndicatorConnection
  stixCyberObservableRelationships(
    first: Int
    after: ID
    orderBy: StixCyberObservableRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCyberObservableRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCyberObservableRelationshipConnection
  # HashedObservable
  hashes: [Hash]
  # X509Certificate
  is_self_signed: Boolean
  version: String
  serial_number: String
  signature_algorithm: String
  issuer: String
  subject: String
  subject_public_key_algorithm: String
  subject_public_key_modulus: String
  subject_public_key_exponent: Int
  validity_not_before: DateTime
  validity_not_after: DateTime
  # Technical
  creator: User
  toStix: String
  editContext: [EditUserContext]
  connectors(onlyAlive: Boolean): [Connector]
  jobs(first: Int): [Work]
}
input X509CertificateAddInput {
  hashes: [HashInput]
  is_self_signed: Boolean
  version: String
  serial_number: String
  signature_algorithm: String
  issuer: String
  subject: String
  subject_public_key_algorithm: String
  subject_public_key_modulus: String
  subject_public_key_exponent: Int
  validity_not_before: DateTime
  validity_not_after: DateTime
}
type IPv4Addr implements BasicObject & StixObject & StixCoreObject & StixCyberObservable {
  id: ID! # internal_id
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  # StixObject
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  # StixCoreObject
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  # StixCyberObservable
  x_opencti_score: Int
  x_opencti_description: String
  observable_value: String!
  indicators: IndicatorConnection
  stixCyberObservableRelationships(
    first: Int
    after: ID
    orderBy: StixCyberObservableRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCyberObservableRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCyberObservableRelationshipConnection
  # IPv4Addr
  value: String
  # Technical
  creator: User
  toStix: String
  editContext: [EditUserContext]
  connectors(onlyAlive: Boolean): [Connector]
  jobs(first: Int): [Work]
}
input IPv4AddrAddInput {
  value: String
}
type IPv6Addr implements BasicObject & StixObject & StixCoreObject & StixCyberObservable {
  id: ID! # internal_id
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  # StixObject
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  # StixCoreObject
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  # StixCyberObservable
  x_opencti_score: Int
  x_opencti_description: String
  observable_value: String!
  indicators: IndicatorConnection
  stixCyberObservableRelationships(
    first: Int
    after: ID
    orderBy: StixCyberObservableRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCyberObservableRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCyberObservableRelationshipConnection
  # IPv4Addr
  value: String
  # Technical
  creator: User
  toStix: String
  editContext: [EditUserContext]
  connectors(onlyAlive: Boolean): [Connector]
  jobs(first: Int): [Work]
}
input IPv6AddrAddInput {
  value: String
}
type MacAddr implements BasicObject & StixObject & StixCoreObject & StixCyberObservable {
  id: ID! # internal_id
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  # StixObject
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  # StixCoreObject
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  # StixCyberObservable
  x_opencti_score: Int
  x_opencti_description: String
  observable_value: String!
  indicators: IndicatorConnection
  stixCyberObservableRelationships(
    first: Int
    after: ID
    orderBy: StixCyberObservableRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCyberObservableRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCyberObservableRelationshipConnection
  # MacAddr
  value: String
  # Technical
  creator: User
  toStix: String
  editContext: [EditUserContext]
  connectors(onlyAlive: Boolean): [Connector]
  jobs(first: Int): [Work]
}
input MacAddrAddInput {
  value: String
}
type Mutex implements BasicObject & StixObject & StixCoreObject & StixCyberObservable {
  id: ID! # internal_id
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  # StixObject
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  # StixCoreObject
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  # StixCyberObservable
  x_opencti_score: Int
  x_opencti_description: String
  observable_value: String!
  indicators: IndicatorConnection
  stixCyberObservableRelationships(
    first: Int
    after: ID
    orderBy: StixCyberObservableRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCyberObservableRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCyberObservableRelationshipConnection
  # Mutex
  name: String
  # Technical
  creator: User
  toStix: String
  editContext: [EditUserContext]
  connectors(onlyAlive: Boolean): [Connector]
  jobs(first: Int): [Work]
}
input MutexAddInput {
  name: String
}
type NetworkTraffic implements BasicObject & StixObject & StixCoreObject & StixCyberObservable {
  id: ID! # internal_id
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  # StixObject
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  # StixCoreObject
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  # StixCyberObservable
  x_opencti_score: Int
  x_opencti_description: String
  observable_value: String!
  indicators: IndicatorConnection
  stixCyberObservableRelationships(
    first: Int
    after: ID
    orderBy: StixCyberObservableRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCyberObservableRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCyberObservableRelationshipConnection
  # NetworkTraffic
  extensions: String
  start: DateTime
  end: DateTime
  is_active: Boolean
  src_port: Int
  dst_port: Int
  protocols: [String]
  src_byte_count: Int
  dst_byte_count: Int
  src_packets: Int
  dst_packets: Int
  # Technical
  creator: User
  toStix: String
  editContext: [EditUserContext]
  connectors(onlyAlive: Boolean): [Connector]
  jobs(first: Int): [Work]
}
input NetworkTrafficAddInput {
  extensions: String
  start: DateTime
  end: DateTime
  is_active: Boolean
  src_port: Int
  dst_port: Int
  protocols: [String]
  src_byte_count: Int
  dst_byte_count: Int
  src_packets: Int
  dst_packets: Int
}
type Process implements BasicObject & StixObject & StixCoreObject & StixCyberObservable {
  id: ID! # internal_id
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  # StixObject
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  # StixCoreObject
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  # StixCyberObservable
  x_opencti_score: Int
  x_opencti_description: String
  observable_value: String!
  indicators: IndicatorConnection
  stixCyberObservableRelationships(
    first: Int
    after: ID
    orderBy: StixCyberObservableRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCyberObservableRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCyberObservableRelationshipConnection
  # Process
  extensions: String
  is_hidden: Boolean
  pid: Int
  created_time: DateTime
  cwd: String
  command_line: String
  environment_variables: [String]
  # Technical
  creator: User
  toStix: String
  editContext: [EditUserContext]
  connectors(onlyAlive: Boolean): [Connector]
  jobs(first: Int): [Work]
}
input ProcessAddInput {
  extensions: String
  is_hidden: Boolean
  pid: Int!
  created_time: DateTime
  cwd: String
  command_line: String
  environment_variables: [String]
}
type Software implements BasicObject & StixObject & StixCoreObject & StixCyberObservable {
  id: ID! # internal_id
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  # StixObject
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  # StixCoreObject
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  # StixCyberObservable
  x_opencti_score: Int
  x_opencti_description: String
  observable_value: String!
  indicators: IndicatorConnection
  stixCyberObservableRelationships(
    first: Int
    after: ID
    orderBy: StixCyberObservableRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCyberObservableRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCyberObservableRelationshipConnection
  # Software
  name: String
  cpe: String
  swid: String
  languages: [String]
  vendor: String
  version: String
  # Technical
  creator: User
  toStix: String
  editContext: [EditUserContext]
  connectors(onlyAlive: Boolean): [Connector]
  jobs(first: Int): [Work]
}
input SoftwareAddInput {
  name: String
  cpe: String
  swid: String
  languages: [String]
  vendor: String
  version: String
}
type Url implements BasicObject & StixObject & StixCoreObject & StixCyberObservable {
  id: ID! # internal_id
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  # StixObject
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  # StixCoreObject
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  # StixCyberObservable
  x_opencti_score: Int
  x_opencti_description: String
  observable_value: String!
  indicators: IndicatorConnection
  stixCyberObservableRelationships(
    first: Int
    after: ID
    orderBy: StixCyberObservableRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCyberObservableRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCyberObservableRelationshipConnection
  # Url
  value: String
  # Technical
  creator: User
  toStix: String
  editContext: [EditUserContext]
  connectors(onlyAlive: Boolean): [Connector]
  jobs(first: Int): [Work]
}
input UrlAddInput {
  value: String
}
type UserAccount implements BasicObject & StixObject & StixCoreObject & StixCyberObservable {
  id: ID! # internal_id
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  # StixObject
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  # StixCoreObject
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  # StixCyberObservable
  x_opencti_score: Int
  x_opencti_description: String
  observable_value: String!
  indicators: IndicatorConnection
  stixCyberObservableRelationships(
    first: Int
    after: ID
    orderBy: StixCyberObservableRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCyberObservableRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCyberObservableRelationshipConnection
  # UserAccount
  extensions: String
  user_id: String
  credential: String
  account_login: String
  account_type: String
  display_name: String
  is_service_account: Boolean
  is_privileged: Boolean
  can_escalate_privs: Boolean
  is_disabled: Boolean
  account_created: DateTime
  account_expires: DateTime
  credential_last_changed: DateTime
  account_first_login: DateTime
  account_last_login: DateTime
  # Technical
  creator: User
  toStix: String
  editContext: [EditUserContext]
  connectors(onlyAlive: Boolean): [Connector]
  jobs(first: Int): [Work]
}
input UserAccountAddInput {
  extensions: String
  user_id: String
  credential: String
  account_login: String
  account_type: String
  display_name: String
  is_service_account: Boolean
  is_privileged: Boolean
  can_escalate_privs: Boolean
  is_disabled: Boolean
  account_created: DateTime
  account_expires: DateTime
  credential_last_changed: DateTime
  account_first_login: DateTime
  account_last_login: DateTime
}
type WindowsRegistryKey implements BasicObject & StixObject & StixCoreObject & StixCyberObservable {
  id: ID! # internal_id
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  # StixObject
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  # StixCoreObject
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  # StixCyberObservable
  x_opencti_score: Int
  x_opencti_description: String
  observable_value: String!
  indicators: IndicatorConnection
  stixCyberObservableRelationships(
    first: Int
    after: ID
    orderBy: StixCyberObservableRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCyberObservableRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCyberObservableRelationshipConnection
  # WindowsRegistryKey
  attribute_key: String
  modified_time: DateTime
  number_of_subkeys: Int
  # Technical
  creator: User
  toStix: String
  editContext: [EditUserContext]
  connectors(onlyAlive: Boolean): [Connector]
  jobs(first: Int): [Work]
}
input WindowsRegistryKeyAddInput {
  attribute_key: String
  modified_time: DateTime
  number_of_subkeys: Int
}
type WindowsRegistryValueType implements BasicObject & StixObject & StixCoreObject & StixCyberObservable {
  id: ID! # internal_id
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  # StixObject
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  # StixCoreObject
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  # StixCyberObservable
  x_opencti_score: Int
  x_opencti_description: String
  observable_value: String!
  indicators: IndicatorConnection
  stixCyberObservableRelationships(
    first: Int
    after: ID
    orderBy: StixCyberObservableRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCyberObservableRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCyberObservableRelationshipConnection
  # WindowsRegistryKey
  name: String
  data: String
  data_type: String
  # Technical
  creator: User
  toStix: String
  editContext: [EditUserContext]
  connectors(onlyAlive: Boolean): [Connector]
  jobs(first: Int): [Work]
}
input WindowsRegistryValueTypeAddInput {
  name: String
  data: String
  data_type: String
}
type X509V3ExtensionsType implements BasicObject & StixObject & StixCoreObject & StixCyberObservable {
  id: ID! # internal_id
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  # StixObject
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  # StixCoreObject
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  # StixCyberObservable
  x_opencti_score: Int
  x_opencti_description: String
  observable_value: String!
  indicators: IndicatorConnection
  stixCyberObservableRelationships(
    first: Int
    after: ID
    orderBy: StixCyberObservableRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCyberObservableRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCyberObservableRelationshipConnection
  # X509V3ExtensionsType
  basic_constraints: String
  name_constraints: String
  policy_constraints: String
  key_usage: String
  extended_key_usage: String
  subject_key_identifier: String
  authority_key_identifier: String
  subject_alternative_name: String
  issuer_alternative_name: String
  subject_directory_attributes: String
  crl_distribution_points: String
  inhibit_any_policy: String
  private_key_usage_period_not_before: DateTime
  private_key_usage_period_not_after: DateTime
  certificate_policies: String
  policy_mappings: String
  # Technical
  creator: User
  toStix: String
  editContext: [EditUserContext]
  connectors(onlyAlive: Boolean): [Connector]
  jobs(first: Int): [Work]
}
input X509V3ExtensionsTypeAddInput {
  basic_constraints: String
  name_constraints: String
  policy_constraints: String
  key_usage: String
  extended_key_usage: String
  subject_key_identifier: String
  authority_key_identifier: String
  subject_alternative_name: String
  issuer_alternative_name: String
  subject_directory_attributes: String
  crl_distribution_points: String
  inhibit_any_policy: String
  private_key_usage_period_not_before: DateTime
  private_key_usage_period_not_after: DateTime
  certificate_policies: String
  policy_mappings: String
}
type XOpenCTICryptographicKey implements BasicObject & StixObject & StixCoreObject & StixCyberObservable {
  id: ID! # internal_id
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  # StixObject
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  # StixCoreObject
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  # StixCyberObservable
  x_opencti_score: Int
  x_opencti_description: String
  observable_value: String!
  indicators: IndicatorConnection
  stixCyberObservableRelationships(
    first: Int
    after: ID
    orderBy: StixCyberObservableRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCyberObservableRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCyberObservableRelationshipConnection
  # XOpenCTICryptographicKey
  value: String
  # Technical
  creator: User
  toStix: String
  editContext: [EditUserContext]
  connectors(onlyAlive: Boolean): [Connector]
  jobs(first: Int): [Work]
}
input XOpenCTICryptographicKeyAddInput {
  value: String
}
type XOpenCTICryptocurrencyWallet implements BasicObject & StixObject & StixCoreObject & StixCyberObservable {
  id: ID! # internal_id
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  # StixObject
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  # StixCoreObject
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  # StixCyberObservable
  x_opencti_score: Int
  x_opencti_description: String
  observable_value: String!
  indicators: IndicatorConnection
  stixCyberObservableRelationships(
    first: Int
    after: ID
    orderBy: StixCyberObservableRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCyberObservableRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCyberObservableRelationshipConnection
  # XOpenCTICryptocurrencyWallet
  value: String
  # Technical
  creator: User
  toStix: String
  editContext: [EditUserContext]
  connectors(onlyAlive: Boolean): [Connector]
  jobs(first: Int): [Work]
}
input XOpenCTICryptocurrencyWalletAddInput {
  value: String
}
type XOpenCTIHostname implements BasicObject & StixObject & StixCoreObject & StixCyberObservable {
  id: ID! # internal_id
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  # StixObject
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  # StixCoreObject
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  # StixCyberObservable
  x_opencti_score: Int
  x_opencti_description: String
  observable_value: String!
  indicators: IndicatorConnection
  stixCyberObservableRelationships(
    first: Int
    after: ID
    orderBy: StixCyberObservableRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCyberObservableRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCyberObservableRelationshipConnection
  # XOpenCTIHostname
  value: String
  # Technical
  creator: User
  toStix: String
  editContext: [EditUserContext]
  connectors(onlyAlive: Boolean): [Connector]
  jobs(first: Int): [Work]
}
input XOpenCTIHostnameAddInput {
  value: String
}
type XOpenCTIText implements BasicObject & StixObject & StixCoreObject & StixCyberObservable {
  id: ID! # internal_id
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  # StixObject
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  # StixCoreObject
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  # StixCyberObservable
  x_opencti_score: Int
  x_opencti_description: String
  observable_value: String!
  indicators: IndicatorConnection
  stixCyberObservableRelationships(
    first: Int
    after: ID
    orderBy: StixCyberObservableRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCyberObservableRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCyberObservableRelationshipConnection
  # XOpenCTIText
  value: String
  # Technical
  creator: User
  toStix: String
  editContext: [EditUserContext]
  connectors(onlyAlive: Boolean): [Connector]
  jobs(first: Int): [Work]
}
input XOpenCTITextAddInput {
  value: String
}
type XOpenCTIUserAgent implements BasicObject & StixObject & StixCoreObject & StixCyberObservable {
  id: ID! # internal_id
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  # StixObject
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  # StixCoreObject
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  # StixCyberObservable
  x_opencti_score: Int
  x_opencti_description: String
  observable_value: String!
  indicators: IndicatorConnection
  stixCyberObservableRelationships(
    first: Int
    after: ID
    orderBy: StixCyberObservableRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCyberObservableRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCyberObservableRelationshipConnection
  # XOpenCTIUserAgent
  value: String
  # Technical
  creator: User
  toStix: String
  editContext: [EditUserContext]
  connectors(onlyAlive: Boolean): [Connector]
  jobs(first: Int): [Work]
}
input XOpenCTIUserAgentAddInput {
  value: String
}

###### RELATIONSHIPS

interface BasicRelationship {
  id: ID! # internal_id
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  fromRole: String
  toRole: String
  created_at: DateTime!
  updated_at: DateTime!
}

######## INTERNAL RELATIONSHIPS

type InternalRelationship implements BasicRelationship {
  # BasicRelationship
  id: ID! # internal_id
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  fromRole: String
  toRole: String
  created_at: DateTime!
  updated_at: DateTime!
  # InternalRelationship
  from: InternalObject
  to: InternalObject
}
input InternalRelationshipAddInput {
  relationship_type: String! # Will be check by code
  fromId: ID
  toId: ID
}

######## STIX RELATIONSHIPS
enum StixObjectOrStixRelationshipsOrdering {
  name
  entity_type
  created_at
  updated_at
  createdBy
  objectMarking
  objectLabel
}
enum StixObjectOrStixRelationshipsFilter {
  created_at
  updated_at
  createdBy
  markedBy
  labelledBy
}
input StixObjectOrStixRelationshipsFiltering {
  key: StixObjectOrStixRelationshipsFilter!
  values: [String]!
  operator: String
  filterMode: FilterMode
}
type StixObjectOrStixRelationshipConnection {
  pageInfo: PageInfo!
  edges: [StixObjectOrStixRelationshipEdge]
}
type StixObjectOrStixRelationshipEdge {
  cursor: String!
  node: StixObjectOrStixRelationship!
}
union StixObjectOrStixRelationship =
    #### Stix Core Objects
  ## Stix Meta Objects
  MarkingDefinition
  | Label
  | KillChainPhase
  | ExternalReference ## Stix Domain Objects
  | AttackPattern
  | Campaign # Containers
  | Note
  | ObservedData
  | Opinion
  | Report
  | CourseOfAction # Identity
  | Individual
  | Organization
  | Sector
  | Indicator
  | Infrastructure
  | IntrusionSet # Location
  | City
  | Country
  | Region
  | Position
  | Malware
  | ThreatActor
  | Tool
  | Vulnerability
  | XOpenCTIIncident ## Six Cyber Observables
  | AutonomousSystem
  | Directory
  | DomainName
  | EmailAddr
  | EmailMessage
  | EmailMimePartType
  | Artifact
  | StixFile
  | X509Certificate
  | IPv4Addr
  | IPv6Addr
  | MacAddr
  | Mutex
  | NetworkTraffic
  | Process
  | Software
  | Url
  | UserAccount
  | WindowsRegistryKey
  | WindowsRegistryValueType
  | X509V3ExtensionsType
  | XOpenCTICryptographicKey
  | XOpenCTICryptocurrencyWallet
  | XOpenCTIHostname
  | XOpenCTIText
  | XOpenCTIUserAgent ### Stix Relationships
  | StixCoreRelationship
  | StixMetaRelationship
  | StixSightingRelationship
  | StixCyberObservableRelationship
union StixCoreObjectOrStixCoreRelationship =
    #### Stix Core Objects
  ## Stix Domain Objects
  AttackPattern
  | Campaign # Containers
  | Note
  | ObservedData
  | Opinion
  | Report
  | CourseOfAction # Identity
  | Individual
  | Organization
  | Sector
  | Indicator
  | Infrastructure
  | IntrusionSet # Location
  | City
  | Country
  | Region
  | Position
  | Malware
  | ThreatActor
  | Tool
  | Vulnerability
  | XOpenCTIIncident ## Six Cyber Observables
  | AutonomousSystem
  | Directory
  | DomainName
  | EmailAddr
  | EmailMessage
  | EmailMimePartType
  | Artifact
  | StixFile
  | X509Certificate
  | IPv4Addr
  | IPv6Addr
  | MacAddr
  | Mutex
  | NetworkTraffic
  | Process
  | Software
  | Url
  | UserAccount
  | WindowsRegistryKey
  | WindowsRegistryValueType
  | X509V3ExtensionsType
  | XOpenCTICryptographicKey
  | XOpenCTICryptocurrencyWallet
  | XOpenCTIHostname
  | XOpenCTIText
  | XOpenCTIUserAgent ### Stix Relationships
  | StixCoreRelationship

enum StixRelationshipsOrdering {
  entity_type
  relationship_type
  confidence
  start_time
  stop_time
  created
  modified
  created_at
  updated_at
  objectMarking
  objectLabel
  killChainPhase
  toName
  toValidFrom
  toValidUntil
  toPatternType
}
enum StixRelationshipsFilter {
  created
  modified
  created_at
  confidence
  createdBy
  markedBy
  labelledBy
  toName
  toCreatedAt
  toPatternType
  toMainObservableType
}
input StixRelationshipsFiltering {
  key: StixRelationshipsFilter!
  values: [String]
  operator: String
  filterMode: FilterMode
}
type StixRelationshipConnection {
  pageInfo: PageInfo!
  edges: [StixRelationshipEdge]
}
type StixRelationshipEdge {
  cursor: String!
  node: StixRelationship!
}
interface StixRelationship {
  # BasicRelationship
  id: ID! # internal_id
  entity_type: String!
  parent_types: [String]!
  fromRole: String
  toRole: String
  # StixRelationship
  standard_id: String!
  x_opencti_stix_ids: [String]
  from: StixObjectOrStixRelationship
  to: StixObjectOrStixRelationship
}

############## StixCoreRelationships
enum StixCoreRelationshipsOrdering {
  entity_type
  relationship_type
  confidence
  start_time
  stop_time
  created
  modified
  created_at
  updated_at
  objectMarking
  objectLabel
  killChainPhase
  toName
  toValidFrom
  toValidUntil
  toPatternType
}
enum StixCoreRelationshipsFilter {
  created
  modified
  created_at
  confidence
  createdBy
  markedBy
  labelledBy
  toName
  toCreatedAt
  toPatternType
  toMainObservableType
}
input StixCoreRelationshipsFiltering {
  key: StixCoreRelationshipsFilter!
  values: [String]
  operator: String
  filterMode: FilterMode
}
type StixCoreRelationshipConnection {
  pageInfo: PageInfo!
  edges: [StixCoreRelationshipEdge]
}
type StixCoreRelationshipEdge {
  cursor: String!
  node: StixCoreRelationship!
}
type StixCoreRelationship implements BasicRelationship & StixRelationship {
  # BasicRelationship
  id: ID! # internal_id
  entity_type: String!
  parent_types: [String]!
  fromRole: String
  toRole: String
  created_at: DateTime!
  updated_at: DateTime!
  # StixRelationship
  standard_id: String!
  x_opencti_stix_ids: [String]
  from: StixObjectOrStixRelationship
  to: StixObjectOrStixRelationship
  spec_version: String!
  # StixCoreRelationship
  relationship_type: String!
  description: String
  start_time: DateTime
  stop_time: DateTime
  revoked: Boolean!
  confidence: Int
  lang: String
  created: DateTime
  modified: DateTime
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  killChainPhases: KillChainPhaseConnection
  # Technical
  creator: User
  toStix: String
  editContext: [EditUserContext]
}
input StixCoreRelationshipAddInput {
  stix_id: String
  fromId: String!
  toId: String!
  relationship_type: String!
  description: String
  start_time: DateTime
  stop_time: DateTime
  confidence: Int
  revoked: Boolean
  lang: String
  createdBy: String
  objectMarking: [String]
  objectLabel: [String]
  externalReferences: [String]
  killChainPhases: [String]
  created: DateTime
  modified: DateTime
  clientMutationId: String
  update: Boolean
}

############## StixSightingRelationships
enum StixSightingRelationshipsOrdering {
  confidence
  x_opencti_negative
  first_seen
  last_seen
  created
  modified
  created_at
  updated_at
  objectMarking
  objectLabel
  toName
  toValidFrom
  toValidUntil
  toPatternType
  toCreatedAt
  attribute_count
}
enum StixSightingRelationshipsFilter {
  x_opencti_negative
  attribute_count
  created
  modified
  created_at
  confidence
  createdBy
  markedBy
  labelledBy
  toPatternType
  toMainObservableType
}
input StixSightingRelationshipsFiltering {
  key: StixSightingRelationshipsFilter!
  values: [String]
  operator: String
  filterMode: FilterMode
}
type StixSightingRelationshipConnection {
  pageInfo: PageInfo!
  edges: [StixSightingRelationshipsEdge]
}
type StixSightingRelationshipsEdge {
  cursor: String!
  node: StixSightingRelationship!
}
type StixSightingRelationship implements BasicRelationship & StixRelationship {
  # BasicRelationship
  id: ID! # internal_id
  entity_type: String!
  parent_types: [String]!
  fromRole: String
  toRole: String
  created_at: DateTime!
  updated_at: DateTime!
  # StixRelationship
  standard_id: String!
  x_opencti_stix_ids: [String]
  spec_version: String!
  from: StixObjectOrStixRelationship
  to: StixObjectOrStixRelationship
  # StixSightingRelationship
  description: String
  first_seen: DateTime
  last_seen: DateTime
  attribute_count: Int!
  x_opencti_negative: Boolean!
  created: DateTime
  modified: DateTime
  confidence: Int
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  # Technical
  creator: User
  toStix: String
  editContext: [EditUserContext]
}
input StixSightingRelationshipAddInput {
  stix_id: String
  fromId: String!
  toId: String
  description: String
  first_seen: DateTime
  last_seen: DateTime
  attribute_count: Int!
  x_opencti_negative: Boolean
  confidence: Int
  createdBy: String
  objectMarking: [String]
  objectLabel: [String]
  externalReferences: [String]
  created: DateTime
  modified: DateTime
  clientMutationId: String
  update: Boolean
}

############## StixCyberObservableRelationships
enum StixCyberObservableRelationshipsOrdering {
  entity_type
  confidence
  start_time
  stop_time
  created
  modified
  created_at
  updated_at
  toName
  toValidFrom
  toValidUntil
  toPatternType
  toCreatedAt
}
enum StixCyberObservableRelationshipsFilter {
  created_at
}
input StixCyberObservableRelationshipsFiltering {
  key: StixCyberObservableRelationshipsFilter!
  values: [String]
  operator: String
  filterMode: FilterMode
}
type StixCyberObservableRelationshipConnection {
  pageInfo: PageInfo!
  edges: [StixCyberObservableRelationshipEdge]
}
type StixCyberObservableRelationshipEdge {
  cursor: String!
  node: StixCyberObservableRelationship!
}
type StixCyberObservableRelationship implements BasicRelationship & StixRelationship {
  # BasicRelationship
  id: ID! # internal_id
  entity_type: String!
  parent_types: [String]!
  fromRole: String
  toRole: String
  created_at: DateTime!
  updated_at: DateTime!
  # StixRelationship
  standard_id: String!
  x_opencti_stix_ids: [String]
  spec_version: String!
  from: StixObjectOrStixRelationship
  to: StixObjectOrStixRelationship
  # StixCyberObservableRelationship
  relationship_type: String!
  start_time: DateTime
  stop_time: DateTime
  # Technical
  editContext: [EditUserContext]
}
input StixCyberObservableRelationshipAddInput {
  stix_id: String
  fromId: String!
  toId: String!
  relationship_type: String!
  confidence: Int
  createdBy: String
  start_time: DateTime
  stop_time: DateTime
  objectMarking: [String]
  objectLabel: [String]
  created: DateTime
  modified: DateTime
  clientMutationId: String
  update: Boolean
}

############## StixMetaRelationships
type StixMetaRelationship implements BasicRelationship & StixRelationship {
  # BasicRelationship
  id: ID! # internal_id
  entity_type: String!
  parent_types: [String]!
  fromRole: String
  toRole: String
  created_at: DateTime!
  updated_at: DateTime!
  # StixRelationship
  standard_id: String!
  x_opencti_stix_ids: [String]
  spec_version: String!
  from: StixObjectOrStixRelationship
  to: StixObjectOrStixRelationship
}
input StixMetaRelationshipAddInput {
  relationship_type: String!
  fromId: ID
  toId: ID
}

input StixMetaRelationshipsAddInput {
  relationship_type: String! # Will be check by code
  fromIds: [ID]
  toIds: [ID]
}

### QUERIES

type Query {
  ###### INTERNAL

  platform_demo: Boolean
  about: AppInfo @auth(for: [SETTINGS])
  logsWorkerConfig: LogsWorkerConfig @auth(for: [MODULES])
  rabbitMQMetrics(prefix: String): RabbitMQMetrics @auth(for: [MODULES])
  logs(
    first: Int
    after: ID
    orderBy: LogsOrdering
    orderMode: OrderingMode
    filters: [LogsFiltering]
    filterMode: FilterMode
    search: String
  ): LogConnection @auth(for: [KNOWLEDGE])
  logsTimeSeries(
    userId: String
    field: String!
    operation: StatsOperation!
    startDate: DateTime!
    endDate: DateTime!
    interval: String!
  ): [TimeSeries] @auth(for: [KNOWLEDGE])
  subTypes(
    first: Int
    after: ID
    orderBy: SubTypesOrdering
    orderMode: OrderingMode
    type: String!
    includeParents: Boolean
    search: String
  ): SubTypeConnection @auth(for: [KNOWLEDGE])
  importFiles(first: Int): FileConnection @auth(for: [KNOWLEDGE_KNASKIMPORT])

  ###### ENTITIES

  ######## INTERNAL OBJECT ENTITIES

  settings: Settings
  group(id: String!): Group @auth(for: [SETTINGS_SETACCESSES])
  groups(first: Int, after: ID, orderBy: GroupsOrdering, orderMode: OrderingMode, search: String): GroupConnection
    @auth(for: [SETTINGS_SETACCESSES])
  roles(first: Int, after: ID, orderBy: RolesOrdering, orderMode: OrderingMode, search: String): RoleConnection
    @auth(for: [SETTINGS_SETACCESSES])
  me: User @auth
  user(id: String!): User @auth(for: [SETTINGS_SETACCESSES])
  users(
    first: Int
    after: ID
    orderBy: UsersOrdering
    orderMode: OrderingMode
    filters: [UsersFiltering]
    filterMode: FilterMode
    search: String
    toStix: Boolean
  ): UserConnection @auth(for: [SETTINGS_SETACCESSES])
  role(id: String!): Role @auth(for: [SETTINGS_SETACCESSES])
  capabilities(first: Int): CapabilityConnection @auth(for: [SETTINGS_SETACCESSES])
  connector(id: String!): Connector @auth(for: [MODULES])
  connectors: [Connector] @auth(for: [MODULES])
  connectorsForExport: [Connector] @auth(for: [KNOWLEDGE])
  connectorsForImport: [Connector] @auth(for: [KNOWLEDGE])
  works(
    first: Int
    after: ID
    orderBy: WorksOrdering
    orderMode: OrderingMode
    search: String
    filters: [WorksFiltering]
    filterMode: FilterMode
  ): WorkConnection @auth(for: [MODULES])
  attribute(id: String): Attribute @auth(for: [KNOWLEDGE])
  attributes(
    first: Int
    after: ID
    orderBy: AttributesOrdering
    orderMode: OrderingMode
    key: String
    elementType: String
    fieldKey: String
    search: String
  ): AttributeConnection @auth(for: [KNOWLEDGE])
  workspace(id: String): Workspace @auth(for: [EXPLORE])
  workspaces(
    first: Int
    after: ID
    orderBy: WorkspacesOrdering
    orderMode: OrderingMode
    filters: [WorkspacesFiltering]
    filterMode: FilterMode
    search: String
  ): WorkspaceConnection @auth(for: [EXPLORE])
  taxiiCollection(id: String!): TaxiiCollection @auth(for: [TAXIIAPI_SETCOLLECTIONS])
  taxiiCollections(
    first: Int
    after: ID
    orderBy: TaxiiCollectionOrdering
    orderMode: OrderingMode
    search: String
  ): TaxiiCollectionConnection @auth(for: [TAXIIAPI_SETCOLLECTIONS])

  ######## STIX OBJECT ENTITIES

  ######## STIX META OBJECT ENTITIES

  markingDefinition(id: String!): MarkingDefinition @auth(for: [KNOWLEDGE])
  markingDefinitions(
    first: Int
    after: ID
    orderBy: MarkingDefinitionsOrdering
    orderMode: OrderingMode
    filters: [MarkingDefinitionsFiltering]
    filterMode: FilterMode
    search: String
    toStix: Boolean
  ): MarkingDefinitionConnection @auth(for: [KNOWLEDGE])
  label(id: String!): Label @auth(for: [KNOWLEDGE])
  labels(
    first: Int
    after: ID
    orderBy: LabelsOrdering
    orderMode: OrderingMode
    filters: [LabelsFiltering]
    filterMode: FilterMode
    search: String
  ): LabelConnection @auth(for: [KNOWLEDGE])
  externalReference(id: String!): ExternalReference @auth(for: [KNOWLEDGE])
  externalReferences(
    first: Int
    after: ID
    orderBy: ExternalReferencesOrdering
    orderMode: OrderingMode
    filters: [ExternalReferencesFiltering]
    filterMode: FilterMode
    search: String
  ): ExternalReferenceConnection @auth(for: [KNOWLEDGE])
  killChainPhase(id: String!): KillChainPhase @auth(for: [KNOWLEDGE])
  killChainPhases(
    first: Int
    after: ID
    orderBy: KillChainPhasesOrdering
    orderMode: OrderingMode
    filters: [KillChainPhasesFiltering]
    filterMode: FilterMode
    search: String
  ): KillChainPhaseConnection @auth(for: [KNOWLEDGE])

  ######## STIX CORE OBJECT ENTITIES

  stixCoreObjectRaw(id: String!): String @auth(for: [KNOWLEDGE])
  stixCoreObject(id: String!): StixCoreObject @auth(for: [KNOWLEDGE])
  stixCoreObjects(
    first: Int
    after: ID
    types: [String]
    orderBy: StixCoreObjectsOrdering
    orderMode: OrderingMode
    filters: [StixCoreObjectsFiltering]
    filterMode: FilterMode
    search: String
  ): StixCoreObjectConnection @auth(for: [KNOWLEDGE])

  ######## STIX DOMAIN OBJECT ENTITIES

  stixDomainObject(id: String!): StixDomainObject @auth(for: [KNOWLEDGE])
  stixDomainObjects(
    first: Int
    after: ID
    types: [String]
    orderBy: StixDomainObjectsOrdering
    orderMode: OrderingMode
    filters: [StixDomainObjectsFiltering]
    filterMode: FilterMode
    search: String
  ): StixDomainObjectConnection @auth(for: [KNOWLEDGE])
  stixDomainObjectsExportFiles(first: Int, type: String!): FileConnection @auth(for: [KNOWLEDGE_KNGETEXPORT])
  stixDomainObjectsTimeSeries(
    type: String
    field: String!
    operation: StatsOperation!
    startDate: DateTime!
    endDate: DateTime!
    interval: String!
  ): [TimeSeries] @auth(for: [KNOWLEDGE, EXPLORE])
  stixDomainObjectsNumber(types: [String], endDate: DateTime): Number @auth(for: [KNOWLEDGE, EXPLORE])
  stixDomainObjectsDistribution(
    objectId: String
    relationship_type: String!
    toTypes: [String]
    field: String!
    operation: StatsOperation!
    limit: Int
    order: String
  ): [Distribution] @auth(for: [KNOWLEDGE, EXPLORE])
  attackPattern(id: String): AttackPattern @auth(for: [KNOWLEDGE])
  attackPatterns(
    first: Int
    after: ID
    orderBy: AttackPatternsOrdering
    orderMode: OrderingMode
    filters: [AttackPatternsFiltering]
    filterMode: FilterMode
    search: String
    toStix: Boolean
  ): AttackPatternConnection @auth(for: [KNOWLEDGE])
  campaign(id: String): Campaign @auth(for: [KNOWLEDGE])
  campaigns(
    first: Int
    after: ID
    orderBy: CampaignsOrdering
    orderMode: OrderingMode
    filters: [CampaignsFiltering]
    filterMode: FilterMode
    search: String
    toStix: Boolean
  ): CampaignConnection @auth(for: [KNOWLEDGE])
  campaignsTimeSeries(
    objectId: String
    field: String!
    operation: StatsOperation!
    startDate: DateTime!
    endDate: DateTime!
    interval: String!
    relationship_type: String
  ): [TimeSeries] @auth(for: [KNOWLEDGE, EXPLORE])
  # Containers
  container(id: String): Container @auth(for: [KNOWLEDGE])
  containers(
    first: Int
    after: ID
    orderBy: ContainersOrdering
    orderMode: OrderingMode
    filters: [ContainersFiltering]
    filterMode: FilterMode
    search: String
    toStix: Boolean
  ): ContainerConnection @auth(for: [KNOWLEDGE])
  note(id: String): Note @auth(for: [KNOWLEDGE])
  notes(
    first: Int
    after: ID
    orderBy: NotesOrdering
    orderMode: OrderingMode
    filters: [NotesFiltering]
    filterMode: FilterMode
    search: String
    toStix: Boolean
  ): NoteConnection @auth(for: [KNOWLEDGE])
  notesTimeSeries(
    objectId: String
    authorId: String
    field: String!
    operation: StatsOperation!
    startDate: DateTime!
    endDate: DateTime!
    interval: String!
  ): [TimeSeries] @auth(for: [KNOWLEDGE, EXPLORE])
  notesNumber(objectId: String, endDate: DateTime): Number @auth(for: [KNOWLEDGE, EXPLORE])
  notesDistribution(
    objectId: String
    field: String!
    operation: StatsOperation!
    limit: Int
    order: String
  ): [Distribution] @auth(for: [KNOWLEDGE])
  noteContainsStixObjectOrStixRelationship(id: String!, stixObjectOrStixRelationshipId: String!): Boolean
    @auth(for: [KNOWLEDGE])
  observedData(id: String): ObservedData @auth(for: [KNOWLEDGE])
  observedDatas(
    first: Int
    after: ID
    orderBy: ObservedDatasOrdering
    orderMode: OrderingMode
    filters: [ObservedDatasFiltering]
    filterMode: FilterMode
    search: String
    toStix: Boolean
  ): ObservedDataConnection @auth(for: [KNOWLEDGE])
  observedDatasTimeSeries(
    objectId: String
    authorId: String
    field: String!
    operation: StatsOperation!
    startDate: DateTime!
    endDate: DateTime!
    interval: String!
  ): [TimeSeries] @auth(for: [KNOWLEDGE, EXPLORE])
  observedDatasNumber(objectId: String, endDate: DateTime): Number @auth(for: [KNOWLEDGE, EXPLORE])
  observedDatasDistribution(
    objectId: String
    field: String!
    operation: StatsOperation!
    limit: Int
    order: String
  ): [Distribution] @auth(for: [KNOWLEDGE, EXPLORE])
  observedDataContainsStixObjectOrStixRelationship(id: String!, stixObjectOrStixRelationshipId: String!): Boolean
    @auth(for: [KNOWLEDGE])
  opinion(id: String): Opinion @auth(for: [KNOWLEDGE])
  opinions(
    first: Int
    after: ID
    orderBy: OpinionsOrdering
    orderMode: OrderingMode
    filters: [OpinionsFiltering]
    filterMode: FilterMode
    search: String
    toStix: Boolean
  ): OpinionConnection @auth(for: [KNOWLEDGE])
  opinionsTimeSeries(
    objectId: String
    authorId: String
    field: String!
    operation: StatsOperation!
    startDate: DateTime!
    endDate: DateTime!
    interval: String!
  ): [TimeSeries] @auth(for: [KNOWLEDGE, EXPLORE])
  opinionsNumber(objectId: String, endDate: DateTime): Number @auth(for: [KNOWLEDGE, EXPLORE])
  opinionsDistribution(
    objectId: String
    field: String!
    operation: StatsOperation!
    limit: Int
    order: String
  ): [Distribution] @auth(for: [KNOWLEDGE, EXPLORE])
  opinionContainsStixObjectOrStixRelationship(id: String!, stixObjectOrStixRelationshipId: String!): Boolean
    @auth(for: [KNOWLEDGE])
  report(id: String): Report @auth(for: [KNOWLEDGE])
  reports(
    first: Int
    after: ID
    orderBy: ReportsOrdering
    orderMode: OrderingMode
    filters: [ReportsFiltering]
    filterMode: FilterMode
    search: String
    toStix: Boolean
  ): ReportConnection @auth(for: [KNOWLEDGE])
  reportsTimeSeries(
    objectId: String
    authorId: String
    reportType: String
    field: String!
    operation: StatsOperation!
    startDate: DateTime!
    endDate: DateTime!
    interval: String!
  ): [TimeSeries] @auth(for: [KNOWLEDGE, EXPLORE])
  reportsNumber(reportType: String, objectId: String, endDate: DateTime): Number @auth(for: [KNOWLEDGE, EXPLORE])
  reportsDistribution(
    objectId: String
    field: String!
    operation: StatsOperation!
    limit: Int
    order: String
    startDate: DateTime
    endDate: DateTime
  ): [Distribution] @auth(for: [KNOWLEDGE, EXPLORE])
  reportContainsStixObjectOrStixRelationship(id: String!, stixObjectOrStixRelationshipId: String!): Boolean
    @auth(for: [KNOWLEDGE])
  courseOfAction(id: String): CourseOfAction @auth(for: [KNOWLEDGE])
  coursesOfAction(
    first: Int
    after: ID
    orderBy: CoursesOfActionOrdering
    orderMode: OrderingMode
    filters: [CoursesOfActionFiltering]
    filterMode: FilterMode
    search: String
    toStix: Boolean
  ): CourseOfActionConnection @auth(for: [KNOWLEDGE])
  # Identities
  identity(id: String!): Identity @auth(for: [KNOWLEDGE])
  identities(
    first: Int
    after: ID
    types: [String]
    orderBy: IdentitiesOrdering
    orderMode: OrderingMode
    search: String
    filters: [IdentitiesFiltering]
    filterMode: FilterMode
    toStix: Boolean
  ): IdentityConnection @auth(for: [KNOWLEDGE])
  individual(id: String!): Individual @auth(for: [KNOWLEDGE])
  individuals(
    first: Int
    after: ID
    orderBy: IndividualsOrdering
    orderMode: OrderingMode
    filters: [IndividualsFiltering]
    filterMode: FilterMode
    search: String
    toStix: Boolean
  ): IndividualConnection @auth(for: [KNOWLEDGE])
  organization(id: String): Organization @auth(for: [KNOWLEDGE])
  organizations(
    first: Int
    after: ID
    orderBy: OrganizationsOrdering
    orderMode: OrderingMode
    filters: [OrganizationsFiltering]
    filterMode: FilterMode
    search: String
    toStix: Boolean
  ): OrganizationConnection @auth(for: [KNOWLEDGE])
  sector(id: String): Sector @auth(for: [KNOWLEDGE])
  sectors(
    first: Int
    after: ID
    orderBy: SectorsOrdering
    orderMode: OrderingMode
    filters: [SectorsFiltering]
    filterMode: FilterMode
    search: String
    toStix: Boolean
  ): SectorConnection @auth(for: [KNOWLEDGE])
  indicator(id: String!): Indicator @auth(for: [KNOWLEDGE])
  indicators(
    first: Int
    after: ID
    orderBy: IndicatorsOrdering
    orderMode: OrderingMode
    filters: [IndicatorsFiltering]
    filterMode: FilterMode
    search: String
  ): IndicatorConnection @auth(for: [KNOWLEDGE])
  indicatorsTimeSeries(
    objectId: String
    pattern_type: String
    field: String!
    operation: StatsOperation!
    startDate: DateTime!
    endDate: DateTime!
    interval: String!
  ): [TimeSeries] @auth(for: [KNOWLEDGE])
  indicatorsNumber(pattern_type: String, objectId: String, endDate: DateTime): Number @auth(for: [KNOWLEDGE])
  indicatorsDistribution(
    objectId: String
    field: String!
    operation: StatsOperation!
    limit: Int
    order: String
    startDate: DateTime
    endDate: DateTime
  ): [Distribution] @auth(for: [KNOWLEDGE])
  infrastructure(id: String!): Infrastructure @auth(for: [KNOWLEDGE])
  infrastructures(
    first: Int
    after: ID
    orderBy: InfrastructuresOrdering
    orderMode: OrderingMode
    filters: [InfrastructuresFiltering]
    filterMode: FilterMode
    search: String
  ): InfrastructureConnection @auth(for: [KNOWLEDGE])
  intrusionSet(id: String): IntrusionSet @auth(for: [KNOWLEDGE])
  intrusionSets(
    first: Int
    after: ID
    orderBy: IntrusionSetsOrdering
    orderMode: OrderingMode
    filters: [IntrusionSetsFiltering]
    filterMode: FilterMode
    search: String
    toStix: Boolean
  ): IntrusionSetConnection @auth(for: [KNOWLEDGE])
  # Locations
  location(id: String!): Location @auth(for: [KNOWLEDGE])
  locations(
    first: Int
    after: ID
    types: [String]
    orderBy: LocationsOrdering
    orderMode: OrderingMode
    search: String
    filters: [LocationsFiltering]
    filterMode: FilterMode
    toStix: Boolean
  ): LocationConnection @auth(for: [KNOWLEDGE])
  city(id: String): City @auth(for: [KNOWLEDGE])
  cities(
    first: Int
    after: ID
    orderBy: CitiesOrdering
    orderMode: OrderingMode
    filters: [CitiesFiltering]
    filterMode: FilterMode
    search: String
    toStix: Boolean
  ): CityConnection @auth(for: [KNOWLEDGE])
  country(id: String): Country @auth(for: [KNOWLEDGE])
  countries(
    first: Int
    after: ID
    orderBy: CountriesOrdering
    orderMode: OrderingMode
    filters: [CountriesFiltering]
    filterMode: FilterMode
    search: String
    toStix: Boolean
  ): CountryConnection @auth(for: [KNOWLEDGE])
  region(id: String!): Region @auth(for: [KNOWLEDGE])
  regions(
    first: Int
    after: ID
    orderBy: RegionsOrdering
    orderMode: OrderingMode
    filters: [RegionsFiltering]
    filterMode: FilterMode
    search: String
    toStix: Boolean
  ): RegionConnection @auth(for: [KNOWLEDGE])
  position(id: String!): Position @auth(for: [KNOWLEDGE])
  positions(
    first: Int
    after: ID
    orderBy: PositionsOrdering
    orderMode: OrderingMode
    filters: [PositionsFiltering]
    filterMode: FilterMode
    search: String
    toStix: Boolean
  ): PositionConnection @auth(for: [KNOWLEDGE])
  malware(id: String): Malware @auth(for: [KNOWLEDGE])
  malwares(
    first: Int
    after: ID
    orderBy: MalwaresOrdering
    orderMode: OrderingMode
    filters: [MalwaresFiltering]
    filterMode: FilterMode
    search: String
    toStix: Boolean
  ): MalwareConnection @auth(for: [KNOWLEDGE])
  threatActor(id: String): ThreatActor @auth(for: [KNOWLEDGE])
  threatActors(
    first: Int
    after: ID
    orderBy: ThreatActorsOrdering
    orderMode: OrderingMode
    filters: [ThreatActorsFiltering]
    filterMode: FilterMode
    search: String
    toStix: Boolean
  ): ThreatActorConnection @auth(for: [KNOWLEDGE])
  tool(id: String): Tool @auth(for: [KNOWLEDGE])
  tools(
    first: Int
    after: ID
    orderBy: ToolsOrdering
    orderMode: OrderingMode
    filters: [ToolsFiltering]
    filterMode: FilterMode
    search: String
    toStix: Boolean
  ): ToolConnection @auth(for: [KNOWLEDGE])
  vulnerability(id: String): Vulnerability @auth(for: [KNOWLEDGE])
  vulnerabilities(
    first: Int
    after: ID
    orderBy: VulnerabilitiesOrdering
    orderMode: OrderingMode
    filters: [VulnerabilitiesFiltering]
    filterMode: FilterMode
    search: String
    toStix: Boolean
  ): VulnerabilityConnection @auth(for: [KNOWLEDGE])
  xOpenCTIIncident(id: String): XOpenCTIIncident @auth(for: [KNOWLEDGE])
  xOpenCTIIncidents(
    first: Int
    after: ID
    orderBy: XOpenCTIIncidentsOrdering
    orderMode: OrderingMode
    filters: [XOpenCTIIncidentsFiltering]
    filterMode: FilterMode
    search: String
    toStix: Boolean
  ): XOpenCTIIncidentConnection @auth(for: [KNOWLEDGE])
  xOpenCTIIncidentsTimeSeries(
    objectId: String
    field: String!
    operation: StatsOperation!
    startDate: DateTime!
    endDate: DateTime!
    interval: String!
    relationship_type: String
  ): [TimeSeries] @auth(for: [KNOWLEDGE])

  ######## STIX CYBER OBSERVABLE ENTITIES

  stixCyberObservable(id: String!): StixCyberObservable @auth(for: [KNOWLEDGE])
  stixCyberObservables(
    first: Int
    after: ID
    types: [String]
    orderBy: StixCyberObservablesOrdering
    orderMode: OrderingMode
    filters: [StixCyberObservablesFiltering]
    filterMode: FilterMode
    search: String
    toStix: Boolean
  ): StixCyberObservableConnection @auth(for: [KNOWLEDGE])
  stixCyberObservablesExportFiles(first: Int, context: String): FileConnection
  stixCyberObservablesNumber(types: [String], endDate: DateTime): Number @auth(for: [KNOWLEDGE, EXPLORE])
  stixCyberObservablesTimeSeries(type: String): [TimeSeries] @auth(for: [KNOWLEDGE, EXPLORE])
  stixCyberObservablesDistribution(objectId: String, field: String!, operation: String!): [Distribution]
    @auth(for: [KNOWLEDGE, EXPLORE])

  ######## STIX META RELATIONSHIPS
  stixMetaRelationshipsDistribution(
    field: String!
    operation: StatsOperation!
    relationship_type: String
    toTypes: [String]
    startDate: DateTime
    endDate: DateTime
    limit: Int
    order: String
  ): [Distribution] @auth(for: [KNOWLEDGE, EXPLORE])
  stixMetaRelationshipsNumber(type: String, fromId: String, endDate: DateTime): Number @auth(for: [KNOWLEDGE])

  ######## STIX RELATIONSHIPS
  stixRelationship(id: String): StixRelationship @auth(for: [KNOWLEDGE])
  stixRelationships(
    first: Int
    after: ID
    orderBy: StixRelationshipsOrdering
    orderMode: OrderingMode
    elementId: String
    elementWithTargetTypes: [String]
    fromId: String
    fromRole: String
    fromTypes: [String]
    toId: String
    toRole: String
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    startDate: DateTime
    endDate: DateTime
    confidences: [Int]
    search: String
    filters: [StixRelationshipsFiltering]
    filterMode: FilterMode
    stix: Boolean
  ): StixRelationshipConnection @auth(for: [KNOWLEDGE])

  ######## STIX CORE RELATIONSHIPS

  stixCoreRelationship(id: String): StixCoreRelationship @auth(for: [KNOWLEDGE])
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    elementId: String
    fromId: String
    fromRole: String
    fromTypes: [String]
    toId: String
    toRole: String
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    startDate: DateTime
    endDate: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
    stix: Boolean
  ): StixCoreRelationshipConnection @auth(for: [KNOWLEDGE])
  stixCoreRelationshipsTimeSeries(
    fromId: String
    relationship_type: String
    toTypes: [String]
    field: String!
    operation: StatsOperation!
    startDate: DateTime!
    endDate: DateTime!
    interval: String!
  ): [TimeSeries] @auth(for: [KNOWLEDGE, EXPLORE])
  stixCoreRelationshipsDistribution(
    fromId: String
    field: String!
    operation: StatsOperation!
    relationship_type: String
    toTypes: [String]
    isTo: Boolean
    noDirection: Boolean
    startDate: DateTime
    endDate: DateTime
    dateAttribute: String
    limit: Int
    order: String
  ): [Distribution] @auth(for: [KNOWLEDGE, EXPLORE])
  stixCoreRelationshipsNumber(
    type: String
    fromId: String
    toTypes: [String]
    noDirection: Boolean
    endDate: DateTime
  ): Number @auth(for: [KNOWLEDGE, EXPLORE])

  ######## STIX SIGHTING RELATIONSHIPS

  stixSightingRelationship(id: String): StixSightingRelationship @auth(for: [KNOWLEDGE])
  stixSightingRelationships(
    first: Int
    after: ID
    orderBy: StixSightingRelationshipsOrdering
    orderMode: OrderingMode
    elementId: String
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    search: String
    filters: [StixSightingRelationshipsFiltering]
    filterMode: FilterMode
    toStix: Boolean
  ): StixSightingRelationshipConnection @auth(for: [KNOWLEDGE])
  stixSightingRelationshipsTimeSeries(
    fromId: String
    field: String!
    operation: StatsOperation!
    startDate: DateTime!
    endDate: DateTime!
    interval: String!
  ): [TimeSeries] @auth(for: [KNOWLEDGE, EXPLORE])
  stixSightingRelationshipsDistribution(
    fromId: String!
    field: String!
    operation: StatsOperation!
    toTypes: [String]
    startDate: DateTime
    endDate: DateTime
    limit: Int
    order: String
  ): [Distribution] @auth(for: [KNOWLEDGE, EXPLORE])
  stixSightingRelationshipsNumber(fromId: String, endDate: DateTime): Number @auth(for: [KNOWLEDGE, EXPLORE])

  ######## STIX CYBER OBSERVABLE RELATIONSHIPS

  stixCyberObservableRelationship(id: String): StixCyberObservableRelationship @auth(for: [KNOWLEDGE])
  stixCyberObservableRelationships(
    first: Int
    after: ID
    orderBy: StixCyberObservableRelationshipsOrdering
    orderMode: OrderingMode
    elementId: String
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    search: String
    filters: [StixCyberObservableRelationshipsFiltering]
    filterMode: FilterMode
    toStix: Boolean
  ): StixCyberObservableRelationshipConnection @auth(for: [KNOWLEDGE])
  stixCyberObservableRelationshipsTimeSeries(
    fromId: String
    field: String!
    operation: StatsOperation!
    startDate: DateTime!
    endDate: DateTime!
    interval: String!
  ): [TimeSeries] @auth(for: [KNOWLEDGE, EXPLORE])
  stixCyberObservableRelationshipsDistribution(
    fromId: String!
    field: String!
    operation: StatsOperation!
    toTypes: [String]
    startDate: DateTime
    endDate: DateTime
    limit: Int
    order: String
  ): [Distribution] @auth(for: [KNOWLEDGE, EXPLORE])
  stixCyberObservableRelationshipsNumber(fromId: String, endDate: DateTime): Number @auth(for: [KNOWLEDGE, EXPLORE])

  ####### ALL
  stixObjectOrStixRelationship(id: String!): StixObjectOrStixRelationship
  stixCoreObjectOrStixCoreRelationship(id: String!): StixCoreObjectOrStixCoreRelationship
}

### SUBSCRIPTIONS

type Subscription {
  settings(id: ID!): Settings @auth(for: [SETTINGS])
  group(id: ID!): Group @auth(for: [SETTINGS_SETACCESSES])
  user(id: ID!): User @auth(for: [SETTINGS_SETACCESSES])
  workspace(id: ID!): Workspace @auth(for: [EXPLORE])
  label(id: ID!): Label @auth(for: [SETTINGS])
  markingDefinition(id: ID!): MarkingDefinition @auth(for: [SETTINGS])
  killChainPhase(id: ID!): KillChainPhase @auth(for: [SETTINGS])
  stixDomainObject(id: ID!): StixDomainObject @auth(for: [KNOWLEDGE])
  stixCyberObservable(id: ID!): StixCyberObservable @auth(for: [KNOWLEDGE])
  stixCoreRelationship(id: ID!): StixCoreRelationship @auth(for: [KNOWLEDGE])
  stixSightingRelationship(id: ID!): StixSightingRelationship @auth(for: [KNOWLEDGE])
  stixCyberObservableRelationship(id: ID!): StixCyberObservableRelationship @auth(for: [KNOWLEDGE])
  externalReference(id: ID!): ExternalReference @auth(for: [KNOWLEDGE])
}

### MUTATIONS

###### INTERNAL

type WorkEditMutations {
  delete: ID!
  reportExpectation(error: WorkErrorInput): ID!
  addExpectations(expectations: Int): ID!
  toReceived(message: String): ID!
  toProcessed(message: String, inError: Boolean): ID!
}

######## INTERNAL OBJECT ENTITIES

type SettingsEditMutations {
  fieldPatch(input: EditInput): Settings
  contextPatch(input: EditContext): Settings
  contextClean: Settings
}
type GroupEditMutations {
  delete: ID
  fieldPatch(input: EditInput, operation: EditOperation): Group
  contextPatch(input: EditContext): Group
  contextClean: Group
  relationAdd(input: InternalRelationshipAddInput): InternalRelationship
  relationDelete(fromId: String, toId: String, relationship_type: String!): Group
}
type UserEditMutations {
  delete: ID
  fieldPatch(input: EditInput, operation: EditOperation): User
  contextPatch(input: EditContext): User
  contextClean: User
  tokenRenew: User
  relationAdd(input: InternalRelationshipAddInput): InternalRelationship
  relationDelete(toId: String!, relationship_type: String!): User
}
type RoleEditMutations {
  delete: ID
  fieldPatch(input: EditInput, operation: EditOperation): Role
  contextPatch(input: EditContext): Role
  contextClean: Role
  relationAdd(input: InternalRelationshipAddInput): InternalRelationship
  relationDelete(toId: String!, relationship_type: String!): Role
}
type AttributeEditMutations {
  delete: ID
  fieldPatch(input: EditInput, operation: EditOperation): Attribute
}
type WorkspaceEditMutations {
  delete: ID @auth(for: [EXPLORE_EXUPDATE_EXDELETE])
  fieldPatch(input: EditInput, operation: EditOperation): Workspace
  relationAdd(input: StixMetaRelationshipAddInput): StixMetaRelationship @auth(for: [EXPLORE_EXUPDATE])
  relationsAdd(input: StixMetaRelationshipsAddInput): Workspace @auth(for: [EXPLORE_EXUPDATE])
  relationDelete(toId: String!, relationship_type: String!): Workspace @auth(for: [EXPLORE_EXUPDATE])
  contextPatch(input: EditContext): Workspace
  contextClean: Workspace
}

type TaxiiCollectionEditMutations {
  delete: ID
  fieldPatch(input: EditInput, operation: EditOperation): TaxiiCollection
}

######## STIX OBJECT ENTITIES

######## STIX META OBJECT ENTITIES

type MarkingDefinitionEditMutations {
  delete: ID
  fieldPatch(input: EditInput, operation: EditOperation): MarkingDefinition
  contextPatch(input: EditContext): MarkingDefinition
  contextClean: MarkingDefinition
}
type LabelEditMutations {
  delete: ID
  fieldPatch(input: EditInput, operation: EditOperation): Label
  contextPatch(input: EditContext): Label
  contextClean: Label
}
type ExternalReferenceEditMutations {
  delete: ID @auth(for: [KNOWLEDGE_KNUPDATE_KNDELETE])
  fieldPatch(input: EditInput, operation: EditOperation): ExternalReference @auth(for: [KNOWLEDGE_KNUPDATE])
  contextPatch(input: EditContext): ExternalReference @auth(for: [KNOWLEDGE_KNUPDATE])
  contextClean: ExternalReference @auth(for: [KNOWLEDGE_KNUPDATE])
  relationAdd(input: StixMetaRelationshipAddInput): StixMetaRelationship @auth(for: [KNOWLEDGE_KNUPDATE])
  relationDelete(fromId: String!, relationship_type: String!): ExternalReference @auth(for: [KNOWLEDGE_KNUPDATE])
}
type KillChainPhaseEditMutations {
  delete: ID
  fieldPatch(input: EditInput, operation: EditOperation): KillChainPhase
  contextPatch(input: EditContext): KillChainPhase
  contextClean: KillChainPhase
  relationAdd(input: StixMetaRelationshipAddInput): StixMetaRelationship
  relationDelete(toId: String!, relationship_type: String!): KillChainPhase
}

######## STIX CORE OBJECT ENTITIES

type StixCoreObjectEditMutations {
  relationAdd(input: StixMetaRelationshipAddInput): StixMetaRelationship
  relationsAdd(input: StixMetaRelationshipsAddInput): StixCoreObject
  relationDelete(toId: String!, relationship_type: String!): StixCoreObject
  merge(stixCoreObjectsIds: [String]!): StixCoreObject
}

######## STIX DOMAIN OBJECT ENTITIES

type StixDomainObjectEditMutations {
  delete: ID @auth(for: [KNOWLEDGE_KNUPDATE_KNDELETE])
  changeType(newType: String!): StixDomainObject @auth(for: [KNOWLEDGE_KNUPDATE])
  fieldPatch(input: EditInput, operation: EditOperation): StixDomainObject @auth(for: [KNOWLEDGE_KNUPDATE])
  contextPatch(input: EditContext): StixDomainObject @auth(for: [KNOWLEDGE_KNUPDATE])
  contextClean: StixDomainObject @auth(for: [KNOWLEDGE_KNUPDATE])
  relationAdd(input: StixMetaRelationshipAddInput): StixMetaRelationship @auth(for: [KNOWLEDGE_KNUPDATE])
  relationsAdd(input: StixMetaRelationshipsAddInput): StixDomainObject @auth(for: [KNOWLEDGE_KNUPDATE])
  relationDelete(toId: String!, relationship_type: String): StixDomainObject @auth(for: [KNOWLEDGE_KNUPDATE])
  importPush(file: Upload!): File @auth(for: [KNOWLEDGE_KNUPLOAD])
  exportAsk(format: String!, exportType: String!, maxMarkingDefinition: String): [File]
    @auth(for: [KNOWLEDGE_KNGETEXPORT_KNASKEXPORT])
  exportPush(file: Upload!): Boolean @auth(for: [CONNECTORAPI])
}
type AttackPatternEditMutations {
  delete: ID @auth(for: [KNOWLEDGE_KNUPDATE_KNDELETE])
  fieldPatch(input: EditInput, operation: EditOperation): AttackPattern @auth(for: [KNOWLEDGE_KNUPDATE])
  contextPatch(input: EditContext): AttackPattern @auth(for: [KNOWLEDGE_KNUPDATE])
  contextClean: AttackPattern @auth(for: [KNOWLEDGE_KNUPDATE])
  relationAdd(input: StixMetaRelationshipAddInput): StixMetaRelationship @auth(for: [KNOWLEDGE_KNUPDATE])
  relationDelete(toId: String!, relationship_type: String!): AttackPattern @auth(for: [KNOWLEDGE_KNUPDATE])
}
type CampaignEditMutations {
  delete: ID @auth(for: [KNOWLEDGE_KNUPDATE_KNDELETE])
  fieldPatch(input: EditInput, operation: EditOperation): Campaign @auth(for: [KNOWLEDGE_KNUPDATE])
  contextPatch(input: EditContext): Campaign @auth(for: [KNOWLEDGE_KNUPDATE])
  contextClean: Campaign @auth(for: [KNOWLEDGE_KNUPDATE])
  relationAdd(input: StixMetaRelationshipAddInput): StixMetaRelationship @auth(for: [KNOWLEDGE_KNUPDATE])
  relationDelete(toId: String!, relationship_type: String!): Campaign @auth(for: [KNOWLEDGE_KNUPDATE])
}
############### Containers
type ContainerEditMutations {
  delete: ID @auth(for: [KNOWLEDGE_KNUPDATE_KNDELETE])
  fieldPatch(input: EditInput, operation: EditOperation): Container @auth(for: [KNOWLEDGE_KNUPDATE])
  contextPatch(input: EditContext): Container @auth(for: [KNOWLEDGE_KNUPDATE])
  contextClean: Container @auth(for: [KNOWLEDGE_KNUPDATE])
  relationAdd(input: StixMetaRelationshipAddInput): StixMetaRelationship @auth(for: [KNOWLEDGE_KNUPDATE])
  relationDelete(toId: String!, relationship_type: String!): Container @auth(for: [KNOWLEDGE_KNUPDATE])
}
type NoteEditMutations {
  delete: ID @auth(for: [KNOWLEDGE_KNUPDATE_KNDELETE])
  fieldPatch(input: EditInput, operation: EditOperation): Note @auth(for: [KNOWLEDGE_KNUPDATE])
  contextPatch(input: EditContext): Note @auth(for: [KNOWLEDGE_KNUPDATE])
  contextClean: Note @auth(for: [KNOWLEDGE_KNUPDATE])
  relationAdd(input: StixMetaRelationshipAddInput): StixMetaRelationship @auth(for: [KNOWLEDGE_KNUPDATE])
  relationDelete(toId: String!, relationship_type: String!): Note @auth(for: [KNOWLEDGE_KNUPDATE])
}
type ObservedDataEditMutations {
  delete: ID @auth(for: [KNOWLEDGE_KNUPDATE_KNDELETE])
  fieldPatch(input: EditInput, operation: EditOperation): ObservedData @auth(for: [KNOWLEDGE_KNUPDATE])
  contextPatch(input: EditContext): ObservedData @auth(for: [KNOWLEDGE_KNUPDATE])
  contextClean: ObservedData @auth(for: [KNOWLEDGE_KNUPDATE])
  relationAdd(input: StixMetaRelationshipAddInput): StixMetaRelationship @auth(for: [KNOWLEDGE_KNUPDATE])
  relationDelete(toId: String!, relationship_type: String!): ObservedData @auth(for: [KNOWLEDGE_KNUPDATE])
}
type OpinionEditMutations {
  delete: ID @auth(for: [KNOWLEDGE_KNUPDATE_KNDELETE])
  fieldPatch(input: EditInput, operation: EditOperation): Opinion @auth(for: [KNOWLEDGE_KNUPDATE])
  contextPatch(input: EditContext): Opinion @auth(for: [KNOWLEDGE_KNUPDATE])
  contextClean: Opinion @auth(for: [KNOWLEDGE_KNUPDATE])
  relationAdd(input: StixMetaRelationshipAddInput): StixMetaRelationship @auth(for: [KNOWLEDGE_KNUPDATE])
  relationDelete(toId: String!, relationship_type: String!): Opinion @auth(for: [KNOWLEDGE_KNUPDATE])
}
type ReportEditMutations {
  delete: ID @auth(for: [KNOWLEDGE_KNUPDATE_KNDELETE])
  fieldPatch(input: EditInput, operation: EditOperation): Report @auth(for: [KNOWLEDGE_KNUPDATE])
  contextPatch(input: EditContext): Report @auth(for: [KNOWLEDGE_KNUPDATE])
  contextClean: Report @auth(for: [KNOWLEDGE_KNUPDATE])
  relationAdd(input: StixMetaRelationshipAddInput): StixMetaRelationship @auth(for: [KNOWLEDGE_KNUPDATE])
  relationDelete(toId: String!, relationship_type: String!): Report @auth(for: [KNOWLEDGE_KNUPDATE])
}
type CourseOfActionEditMutations {
  delete: ID @auth(for: [KNOWLEDGE_KNUPDATE_KNDELETE])
  fieldPatch(input: EditInput, operation: EditOperation): CourseOfAction @auth(for: [KNOWLEDGE_KNUPDATE])
  contextPatch(input: EditContext): CourseOfAction @auth(for: [KNOWLEDGE_KNUPDATE])
  contextClean: CourseOfAction @auth(for: [KNOWLEDGE_KNUPDATE])
  relationAdd(input: StixMetaRelationshipAddInput): StixMetaRelationship @auth(for: [KNOWLEDGE_KNUPDATE])
  relationDelete(toId: String!, relationship_type: String!): CourseOfAction @auth(for: [KNOWLEDGE_KNUPDATE])
}
############### Identities
type IdentityEditMutations {
  delete: ID @auth(for: [KNOWLEDGE_KNUPDATE_KNDELETE])
  fieldPatch(input: EditInput, operation: EditOperation): Identity @auth(for: [KNOWLEDGE_KNUPDATE])
  contextPatch(input: EditContext): Identity @auth(for: [KNOWLEDGE_KNUPDATE])
  contextClean: Identity @auth(for: [KNOWLEDGE_KNUPDATE])
  relationAdd(input: StixMetaRelationshipAddInput): StixMetaRelationship @auth(for: [KNOWLEDGE_KNUPDATE])
  relationDelete(toId: String!, relationship_type: String!): Identity @auth(for: [KNOWLEDGE_KNUPDATE])
}
type IndividualEditMutations {
  delete: ID
  fieldPatch(input: EditInput, operation: EditOperation): Individual
  contextPatch(input: EditContext): Individual
  contextClean: Individual
  relationAdd(input: StixMetaRelationshipAddInput): StixMetaRelationship
  relationDelete(toId: String!, relationship_type: String!): Individual
}
type OrganizationEditMutations {
  delete: ID @auth(for: [KNOWLEDGE_KNUPDATE_KNDELETE])
  fieldPatch(input: EditInput, operation: EditOperation): Organization @auth(for: [KNOWLEDGE_KNUPDATE])
  contextPatch(input: EditContext): Organization @auth(for: [KNOWLEDGE_KNUPDATE])
  contextClean: Organization @auth(for: [KNOWLEDGE_KNUPDATE])
  relationAdd(input: StixMetaRelationshipAddInput): StixMetaRelationship @auth(for: [KNOWLEDGE_KNUPDATE])
  relationDelete(toId: String!, relationship_type: String!): Organization @auth(for: [KNOWLEDGE_KNUPDATE])
}
type SectorEditMutations {
  delete: ID @auth(for: [KNOWLEDGE_KNUPDATE_KNDELETE])
  fieldPatch(input: EditInput, operation: EditOperation): Sector @auth(for: [KNOWLEDGE_KNUPDATE])
  contextPatch(input: EditContext): Sector @auth(for: [KNOWLEDGE_KNUPDATE])
  contextClean: Sector @auth(for: [KNOWLEDGE_KNUPDATE])
  relationAdd(input: StixMetaRelationshipAddInput): StixMetaRelationship @auth(for: [KNOWLEDGE_KNUPDATE])
  relationDelete(toId: String!, relationship_type: String!): Sector @auth(for: [KNOWLEDGE_KNUPDATE])
}
type IndicatorEditMutations {
  delete: ID @auth(for: [KNOWLEDGE_KNUPDATE_KNDELETE])
  fieldPatch(input: EditInput, operation: EditOperation): Indicator @auth(for: [KNOWLEDGE_KNUPDATE])
  contextPatch(input: EditContext): Indicator @auth(for: [KNOWLEDGE_KNUPDATE])
  contextClean: Indicator @auth(for: [KNOWLEDGE_KNUPDATE])
  relationAdd(input: StixMetaRelationshipAddInput): StixMetaRelationship @auth(for: [KNOWLEDGE_KNUPDATE])
  relationDelete(toId: String!, relationship_type: String!): Indicator @auth(for: [KNOWLEDGE_KNUPDATE])
}
type InfrastructureEditMutations {
  delete: ID @auth(for: [KNOWLEDGE_KNUPDATE_KNDELETE])
  fieldPatch(input: EditInput, operation: EditOperation): Infrastructure @auth(for: [KNOWLEDGE_KNUPDATE])
  contextPatch(input: EditContext): Infrastructure @auth(for: [KNOWLEDGE_KNUPDATE])
  contextClean: Infrastructure @auth(for: [KNOWLEDGE_KNUPDATE])
  relationAdd(input: StixMetaRelationshipAddInput): StixMetaRelationship @auth(for: [KNOWLEDGE_KNUPDATE])
  relationDelete(toId: String!, relationship_type: String!): Infrastructure @auth(for: [KNOWLEDGE_KNUPDATE])
}
type IntrusionSetEditMutations {
  delete: ID @auth(for: [KNOWLEDGE_KNUPDATE_KNDELETE])
  fieldPatch(input: EditInput, operation: EditOperation): IntrusionSet @auth(for: [KNOWLEDGE_KNUPDATE])
  contextPatch(input: EditContext): IntrusionSet @auth(for: [KNOWLEDGE_KNUPDATE])
  contextClean: IntrusionSet @auth(for: [KNOWLEDGE_KNUPDATE])
  relationAdd(input: StixMetaRelationshipAddInput): StixMetaRelationship @auth(for: [KNOWLEDGE_KNUPDATE])
  relationDelete(toId: String!, relationship_type: String!): IntrusionSet @auth(for: [KNOWLEDGE_KNUPDATE])
}
############### Locations
type LocationEditMutations {
  delete: ID @auth(for: [KNOWLEDGE_KNUPDATE_KNDELETE])
  fieldPatch(input: EditInput, operation: EditOperation): Location @auth(for: [KNOWLEDGE_KNUPDATE])
  contextPatch(input: EditContext): Location @auth(for: [KNOWLEDGE_KNUPDATE])
  contextClean: Location @auth(for: [KNOWLEDGE_KNUPDATE])
  relationAdd(input: StixMetaRelationshipAddInput): StixMetaRelationship @auth(for: [KNOWLEDGE_KNUPDATE])
  relationDelete(toId: String!, relationship_type: String!): Location @auth(for: [KNOWLEDGE_KNUPDATE])
}
type CityEditMutations {
  delete: ID @auth(for: [KNOWLEDGE_KNUPDATE_KNDELETE])
  fieldPatch(input: EditInput, operation: EditOperation): City @auth(for: [KNOWLEDGE_KNUPDATE])
  contextPatch(input: EditContext): City @auth(for: [KNOWLEDGE_KNUPDATE])
  contextClean: City @auth(for: [KNOWLEDGE_KNUPDATE])
  relationAdd(input: StixMetaRelationshipAddInput): StixMetaRelationship @auth(for: [KNOWLEDGE_KNUPDATE])
  relationDelete(toId: String!, relationship_type: String!): City @auth(for: [KNOWLEDGE_KNUPDATE])
}
type CountryEditMutations {
  delete: ID @auth(for: [KNOWLEDGE_KNUPDATE_KNDELETE])
  fieldPatch(input: EditInput, operation: EditOperation): Country @auth(for: [KNOWLEDGE_KNUPDATE])
  contextPatch(input: EditContext): Country @auth(for: [KNOWLEDGE_KNUPDATE])
  contextClean: Country @auth(for: [KNOWLEDGE_KNUPDATE])
  relationAdd(input: StixMetaRelationshipAddInput): StixMetaRelationship @auth(for: [KNOWLEDGE_KNUPDATE])
  relationDelete(toId: String!, relationship_type: String!): Country @auth(for: [KNOWLEDGE_KNUPDATE])
}
type RegionEditMutations {
  delete: ID @auth(for: [KNOWLEDGE_KNUPDATE_KNDELETE])
  fieldPatch(input: EditInput, operation: EditOperation): Region @auth(for: [KNOWLEDGE_KNUPDATE])
  contextPatch(input: EditContext): Region @auth(for: [KNOWLEDGE_KNUPDATE])
  contextClean: Region @auth(for: [KNOWLEDGE_KNUPDATE])
  relationAdd(input: StixMetaRelationshipAddInput): StixMetaRelationship @auth(for: [KNOWLEDGE_KNUPDATE])
  relationDelete(toId: String!, relationship_type: String!): Region @auth(for: [KNOWLEDGE_KNUPDATE])
}
type PositionEditMutations {
  delete: ID @auth(for: [KNOWLEDGE_KNUPDATE_KNDELETE])
  fieldPatch(input: EditInput, operation: EditOperation): Position @auth(for: [KNOWLEDGE_KNUPDATE])
  contextPatch(input: EditContext): Position @auth(for: [KNOWLEDGE_KNUPDATE])
  contextClean: Position @auth(for: [KNOWLEDGE_KNUPDATE])
  relationAdd(input: StixMetaRelationshipAddInput): StixMetaRelationship @auth(for: [KNOWLEDGE_KNUPDATE])
  relationDelete(toId: String!, relationship_type: String!): Position @auth(for: [KNOWLEDGE_KNUPDATE])
}
type MalwareEditMutations {
  delete: ID @auth(for: [KNOWLEDGE_KNUPDATE_KNDELETE])
  fieldPatch(input: EditInput, operation: EditOperation): Malware @auth(for: [KNOWLEDGE_KNUPDATE])
  contextPatch(input: EditContext): Malware @auth(for: [KNOWLEDGE_KNUPDATE])
  contextClean: Malware @auth(for: [KNOWLEDGE_KNUPDATE])
  relationAdd(input: StixMetaRelationshipAddInput): StixMetaRelationship @auth(for: [KNOWLEDGE_KNUPDATE])
  relationDelete(toId: String!, relationship_type: String!): Malware @auth(for: [KNOWLEDGE_KNUPDATE])
}
type ThreatActorEditMutations {
  delete: ID @auth(for: [KNOWLEDGE_KNUPDATE_KNDELETE])
  fieldPatch(input: EditInput, operation: EditOperation): ThreatActor @auth(for: [KNOWLEDGE_KNUPDATE])
  contextPatch(input: EditContext): ThreatActor @auth(for: [KNOWLEDGE_KNUPDATE])
  contextClean: ThreatActor @auth(for: [KNOWLEDGE_KNUPDATE])
  relationAdd(input: StixMetaRelationshipAddInput): StixMetaRelationship @auth(for: [KNOWLEDGE_KNUPDATE])
  relationDelete(toId: String!, relationship_type: String!): ThreatActor @auth(for: [KNOWLEDGE_KNUPDATE])
}
type ToolEditMutations {
  delete: ID @auth(for: [KNOWLEDGE_KNUPDATE_KNDELETE])
  fieldPatch(input: EditInput, operation: EditOperation): Tool @auth(for: [KNOWLEDGE_KNUPDATE])
  contextPatch(input: EditContext): Tool @auth(for: [KNOWLEDGE_KNUPDATE])
  contextClean: Tool @auth(for: [KNOWLEDGE_KNUPDATE])
  relationAdd(input: StixMetaRelationshipAddInput): StixMetaRelationship @auth(for: [KNOWLEDGE_KNUPDATE])
  relationDelete(toId: String!, relationship_type: String!): Tool @auth(for: [KNOWLEDGE_KNUPDATE])
}
type VulnerabilityEditMutations {
  delete: ID @auth(for: [KNOWLEDGE_KNUPDATE_KNDELETE])
  fieldPatch(input: EditInput, operation: EditOperation): Vulnerability @auth(for: [KNOWLEDGE_KNUPDATE])
  contextPatch(input: EditContext): Vulnerability @auth(for: [KNOWLEDGE_KNUPDATE])
  contextClean: Vulnerability @auth(for: [KNOWLEDGE_KNUPDATE])
  relationAdd(input: StixMetaRelationshipAddInput): StixMetaRelationship @auth(for: [KNOWLEDGE_KNUPDATE])
  relationDelete(toId: String!, relationship_type: String!): Vulnerability @auth(for: [KNOWLEDGE_KNUPDATE])
}
type XOpenCTIIncidentEditMutations {
  delete: ID @auth(for: [KNOWLEDGE_KNUPDATE_KNDELETE])
  fieldPatch(input: EditInput, operation: EditOperation): XOpenCTIIncident @auth(for: [KNOWLEDGE_KNUPDATE])
  contextPatch(input: EditContext): XOpenCTIIncident @auth(for: [KNOWLEDGE_KNUPDATE])
  contextClean: XOpenCTIIncident @auth(for: [KNOWLEDGE_KNUPDATE])
  relationAdd(input: StixMetaRelationshipAddInput): StixMetaRelationship @auth(for: [KNOWLEDGE_KNUPDATE])
  relationDelete(toId: String!, relationship_type: String!): XOpenCTIIncident @auth(for: [KNOWLEDGE_KNUPDATE])
}

######## STIX CYBER OBSERVABLE ENTITIES

type StixCyberObservableEditMutations {
  delete: ID @auth(for: [KNOWLEDGE_KNUPDATE_KNDELETE])
  fieldPatch(input: EditInput, operation: EditOperation): StixCyberObservable @auth(for: [KNOWLEDGE_KNUPDATE])
  contextPatch(input: EditContext): StixCyberObservable @auth(for: [KNOWLEDGE_KNUPDATE])
  contextClean: StixCyberObservable @auth(for: [KNOWLEDGE_KNUPDATE])
  relationAdd(input: StixMetaRelationshipAddInput): StixMetaRelationship @auth(for: [KNOWLEDGE_KNUPDATE])
  relationsAdd(input: StixMetaRelationshipsAddInput): StixCyberObservable @auth(for: [KNOWLEDGE_KNUPDATE])
  relationDelete(toId: String!, relationship_type: String!): StixCyberObservable @auth(for: [KNOWLEDGE_KNUPDATE])
  askEnrichment(connectorId: ID!): Work @auth(for: [KNOWLEDGE_KNENRICHMENT])
}

######## STIX RELATIONSHIPS

######## STIX CORE RELATIONSHIPS

type StixCoreRelationshipEditMutations {
  delete: ID
  fieldPatch(input: EditInput, operation: EditOperation): StixCoreRelationship
  contextPatch(input: EditContext): StixCoreRelationship
  contextClean: StixCoreRelationship
  relationAdd(input: StixMetaRelationshipAddInput): StixMetaRelationship
  relationDelete(toId: String!, relationship_type: String!): StixCoreRelationship
}

######## STIX SIGHTING RELATIONSHIPS

type StixSightingRelationshipEditMutations {
  delete: ID
  fieldPatch(input: EditInput, operation: EditOperation): StixSightingRelationship
  contextPatch(input: EditContext): StixSightingRelationship
  contextClean: StixSightingRelationship
  relationAdd(input: StixMetaRelationshipAddInput): StixMetaRelationship
  relationDelete(toId: String!, relationship_type: String!): StixSightingRelationship
}

######## STIX CYBER OBSERVABLE RELATIONSHIPS

type StixCyberObservableRelationshipEditMutations {
  delete: ID
  fieldPatch(input: EditInput, operation: EditOperation): StixCyberObservableRelationship
  contextPatch(input: EditContext): StixCyberObservableRelationship
  contextClean: StixCyberObservableRelationship
}

### MUTATIONS DECLARATION

type Mutation {
  ###### INTERNAL
  deleteImport(fileName: String): Boolean @auth(for: [KNOWLEDGE_KNASKIMPORT])
  uploadImport(file: Upload!): File @auth(for: [KNOWLEDGE_KNASKIMPORT])
  askJobImport(fileName: ID!): File @auth(for: [KNOWLEDGE_KNASKIMPORT])

  ### WORK
  workAdd(connectorId: String!, friendlyName: String): Work!
    @auth(for: [KNOWLEDGE_KNASKIMPORT, KNOWLEDGE_KNGETEXPORT_KNASKEXPORT])
  workEdit(id: ID!): WorkEditMutations @auth(for: [KNOWLEDGE_KNASKIMPORT, KNOWLEDGE_KNGETEXPORT_KNASKEXPORT])

  ######## INTERNAL OBJECT ENTITIES
  token(input: UserLoginInput): String
  settingsEdit(id: ID!): SettingsEditMutations @auth(for: [SETTINGS])
  groupAdd(input: GroupAddInput): Group @auth(for: [SETTINGS_SETACCESSES])
  groupEdit(id: ID!): GroupEditMutations @auth(for: [SETTINGS_SETACCESSES])
  userAdd(input: UserAddInput): User @auth(for: [SETTINGS_SETACCESSES])
  userEdit(id: ID!): UserEditMutations @auth(for: [SETTINGS_SETACCESSES])
  meEdit(input: EditInput, operation: EditOperation): User @auth
  logout: ID @auth
  roleAdd(input: RoleAddInput): Role @auth(for: [SETTINGS_SETACCESSES])
  roleEdit(id: ID!): RoleEditMutations @auth(for: [SETTINGS_SETACCESSES])
  pingConnector(id: ID!, state: String): Connector @auth(for: [CONNECTORAPI])
  registerConnector(input: RegisterConnectorInput): Connector @auth(for: [CONNECTORAPI])
  resetStateConnector(id: ID!): Connector @auth(for: [MODULES_MODMANAGE])
  deleteConnector(id: ID!): ID! @auth(for: [MODULES_MODMANAGE])
  attributeAdd(input: AttributeAddInput): Attribute @auth(for: [SETTINGS])
  attributeEdit(id: ID!): AttributeEditMutations @auth(for: [SETTINGS])
  workspaceAdd(input: WorkspaceAddInput): Workspace @auth(for: [EXPLORE_EXUPDATE])
  workspaceEdit(id: ID!): WorkspaceEditMutations @auth(for: [EXPLORE_EXUPDATE])
  taxiiCollectionAdd(input: TaxiiCollectionAddInput): TaxiiCollection @auth(for: [TAXIIAPI_SETCOLLECTIONS])
  taxiiCollectionEdit(id: ID!): TaxiiCollectionEditMutations @auth(for: [TAXIIAPI_SETCOLLECTIONS])

  ######## STIX OBJECT ENTITIES

  ######## STIX META OBJECT ENTITIES
  markingDefinitionAdd(input: MarkingDefinitionAddInput): MarkingDefinition @auth(for: [SETTINGS_SETMARKINGS])
  markingDefinitionEdit(id: ID!): MarkingDefinitionEditMutations @auth(for: [SETTINGS_SETMARKINGS])
  labelAdd(input: LabelAddInput): Label @auth(for: [KNOWLEDGE_KNUPDATE])
  labelEdit(id: ID!): LabelEditMutations @auth(for: [KNOWLEDGE_KNUPDATE])
  externalReferenceAdd(input: ExternalReferenceAddInput): ExternalReference @auth(for: [KNOWLEDGE_KNUPDATE])
  externalReferenceEdit(id: ID!): ExternalReferenceEditMutations
  killChainPhaseAdd(input: KillChainPhaseAddInput): KillChainPhase @auth(for: [SETTINGS])
  killChainPhaseEdit(id: ID!): KillChainPhaseEditMutations @auth(for: [SETTINGS])

  ######## STIX CORE OBJECT ENTITIES
  stixCoreObjectEdit(id: ID!): StixCoreObjectEditMutations @auth(for: [KNOWLEDGE_KNUPDATE])

  ######## STIX DOMAIN OBJECT ENTITIES
  stixDomainObjectAdd(input: StixDomainObjectAddInput): StixDomainObject @auth(for: [KNOWLEDGE_KNUPDATE])
  stixDomainObjectEdit(id: ID!): StixDomainObjectEditMutations
  stixDomainObjectsExportAsk(
    type: String!
    format: String!
    exportType: String!
    maxMarkingDefinition: String
    context: String
    search: String
    orderBy: StixDomainObjectsOrdering
    orderMode: OrderingMode
    filters: [StixDomainObjectsFiltering]
    filterMode: FilterMode
  ): FileConnection @auth(for: [KNOWLEDGE_KNGETEXPORT_KNASKEXPORT])
  stixDomainObjectsMerge(
    keepedEntityId: ID!
    mergedEntityId: ID!
    mergeRelations: Boolean
    mergeAliases: Boolean
  ): StixDomainObject @auth(for: [KNOWLEDGE_KNUPDATE])
  stixDomainObjectsDelete(id: [ID]!): [ID]!
  stixDomainObjectsExportPush(type: String!, file: Upload!, listFilters: String): Boolean @auth(for: [CONNECTORAPI])
  attackPatternAdd(input: AttackPatternAddInput): AttackPattern @auth(for: [KNOWLEDGE_KNUPDATE])
  attackPatternEdit(id: ID!): AttackPatternEditMutations
  campaignAdd(input: CampaignAddInput): Campaign @auth(for: [KNOWLEDGE_KNUPDATE])
  campaignEdit(id: ID!): CampaignEditMutations
  ############### Containers
  containerEdit(id: ID!): ContainerEditMutations
  noteAdd(input: NoteAddInput): Note @auth(for: [KNOWLEDGE_KNUPDATE])
  noteEdit(id: ID!): NoteEditMutations
  observedDataAdd(input: ObservedDataAddInput): ObservedData @auth(for: [KNOWLEDGE_KNUPDATE])
  observedDataEdit(id: ID!): ObservedDataEditMutations
  opinionAdd(input: OpinionAddInput): Opinion @auth(for: [KNOWLEDGE_KNUPDATE])
  opinionEdit(id: ID!): OpinionEditMutations
  reportAdd(input: ReportAddInput): Report @auth(for: [KNOWLEDGE_KNUPDATE])
  reportEdit(id: ID!): ReportEditMutations
  courseOfActionAdd(input: CourseOfActionAddInput): CourseOfAction @auth(for: [KNOWLEDGE_KNUPDATE])
  courseOfActionEdit(id: ID!): CourseOfActionEditMutations
  ############### Identities
  identityAdd(input: IdentityAddInput): Identity @auth(for: [KNOWLEDGE_KNUPDATE])
  identityEdit(id: ID!): IdentityEditMutations
  individualAdd(input: IndividualAddInput): Individual @auth(for: [KNOWLEDGE_KNUPDATE])
  individualEdit(id: ID!): IndividualEditMutations @auth(for: [KNOWLEDGE_KNUPDATE])
  organizationAdd(input: OrganizationAddInput): Organization @auth(for: [KNOWLEDGE_KNUPDATE])
  organizationEdit(id: ID!): OrganizationEditMutations
  sectorAdd(input: SectorAddInput): Sector @auth(for: [KNOWLEDGE_KNUPDATE])
  sectorEdit(id: ID!): SectorEditMutations
  indicatorAdd(input: IndicatorAddInput): Indicator @auth(for: [KNOWLEDGE_KNUPDATE])
  indicatorEdit(id: ID!): IndicatorEditMutations
  infrastructureAdd(input: InfrastructureAddInput): Infrastructure @auth(for: [KNOWLEDGE_KNUPDATE])
  infrastructureEdit(id: ID!): InfrastructureEditMutations
  intrusionSetAdd(input: IntrusionSetAddInput): IntrusionSet @auth(for: [KNOWLEDGE_KNUPDATE])
  intrusionSetEdit(id: ID!): IntrusionSetEditMutations
  ############### Locations
  locationAdd(input: LocationAddInput): Location @auth(for: [KNOWLEDGE_KNUPDATE])
  locationEdit(id: ID!): LocationEditMutations
  cityAdd(input: CityAddInput): City @auth(for: [KNOWLEDGE_KNUPDATE])
  cityEdit(id: ID!): CityEditMutations
  countryAdd(input: CountryAddInput): Country @auth(for: [KNOWLEDGE_KNUPDATE])
  countryEdit(id: ID!): CountryEditMutations
  regionAdd(input: RegionAddInput): Region @auth(for: [KNOWLEDGE_KNUPDATE])
  regionEdit(id: ID!): RegionEditMutations
  positionAdd(input: PositionAddInput): Position @auth(for: [KNOWLEDGE_KNUPDATE])
  positionEdit(id: ID!): PositionEditMutations
  malwareAdd(input: MalwareAddInput): Malware @auth(for: [KNOWLEDGE_KNUPDATE])
  malwareEdit(id: ID!): MalwareEditMutations
  threatActorAdd(input: ThreatActorAddInput): ThreatActor @auth(for: [KNOWLEDGE_KNUPDATE])
  threatActorEdit(id: ID!): ThreatActorEditMutations
  toolAdd(input: ToolAddInput): Tool @auth(for: [KNOWLEDGE_KNUPDATE])
  toolEdit(id: ID!): ToolEditMutations
  vulnerabilityAdd(input: VulnerabilityAddInput): Vulnerability @auth(for: [KNOWLEDGE_KNUPDATE])
  vulnerabilityEdit(id: ID!): VulnerabilityEditMutations
  xOpenCTIIncidentAdd(input: XOpenCTIIncidentAddInput): XOpenCTIIncident @auth(for: [KNOWLEDGE_KNUPDATE])
  xOpenCTIIncidentEdit(id: ID!): XOpenCTIIncidentEditMutations

  ######## STIX CYBER OBSERVABLE ENTITIES
  stixCyberObservableAdd(
    type: String!
    stix_id: String
    x_opencti_score: Int
    x_opencti_description: String
    createIndicator: Boolean
    createdBy: String
    objectMarking: [String]
    objectLabel: [String]
    externalReferences: [String]
    clientMutationId: String
    update: Boolean
    AutonomousSystem: AutonomousSystemAddInput
    Directory: DirectoryAddInput
    DomainName: DomainNameAddInput
    EmailAddr: EmailAddrAddInput
    EmailMessage: EmailMessageAddInput
    EmailMimePartType: EmailMimePartTypeAddInput
    Artifact: ArtifactAddInput
    StixFile: StixFileAddInput
    X509Certificate: X509CertificateAddInput
    IPv4Addr: IPv4AddrAddInput
    IPv6Addr: IPv6AddrAddInput
    MacAddr: MacAddrAddInput
    Mutex: MutexAddInput
    NetworkTraffic: NetworkTrafficAddInput
    Process: ProcessAddInput
    Software: SoftwareAddInput
    Url: UrlAddInput
    UserAccount: UserAccountAddInput
    WindowsRegistryKey: WindowsRegistryKeyAddInput
    WindowsRegistryValueType: WindowsRegistryValueTypeAddInput
    X509V3ExtensionsType: X509V3ExtensionsTypeAddInput
    XOpenCTICryptographicKey: XOpenCTICryptographicKeyAddInput
    XOpenCTICryptocurrencyWallet: XOpenCTICryptocurrencyWalletAddInput
    XOpenCTIHostname: XOpenCTIHostnameAddInput
    XOpenCTIText: XOpenCTITextAddInput
    XOpenCTIUserAgent: XOpenCTIUserAgentAddInput
  ): StixCyberObservable @auth(for: [KNOWLEDGE_KNUPDATE])
  stixCyberObservableEdit(id: ID!): StixCyberObservableEditMutations
  stixCyberObservablesExportAsk(
    format: String!
    exportType: String!
    maxMarkingDefinition: String
    context: String
    types: [String]
    search: String
    orderBy: StixCyberObservablesOrdering
    orderMode: OrderingMode
    filters: [StixCyberObservablesFiltering]
    filterMode: FilterMode
  ): FileConnection @auth(for: [KNOWLEDGE_KNGETEXPORT_KNASKEXPORT])
  stixCyberObservablesExportPush(file: Upload!, listFilters: String): Boolean

  ######## STIX RELATIONSHIPS

  ######## STIX CORE RELATIONSHIPS
  stixCoreRelationshipAdd(input: StixCoreRelationshipAddInput, reversedReturn: Boolean): StixCoreRelationship
    @auth(for: [KNOWLEDGE_KNUPDATE])
  stixCoreRelationshipEdit(id: ID!): StixCoreRelationshipEditMutations @auth(for: [KNOWLEDGE_KNUPDATE])
  stixCoreRelationshipDelete(fromId: String!, toId: String!, relationship_type: String!): Boolean!
    @auth(for: [KNOWLEDGE_KNUPDATE])

  ######## STIX CYBER OBSERVABLE RELATIONSHIPS
  stixCyberObservableRelationshipAdd(input: StixCyberObservableRelationshipAddInput): StixCyberObservableRelationship
    @auth(for: [KNOWLEDGE_KNUPDATE])
  stixCyberObservableRelationshipEdit(id: ID!): StixCyberObservableRelationshipEditMutations
    @auth(for: [KNOWLEDGE_KNUPDATE])

  ######## STIX SIGHTING RELATIONSHIPS
  stixSightingRelationshipAdd(input: StixSightingRelationshipAddInput): StixSightingRelationship
    @auth(for: [KNOWLEDGE_KNUPDATE])
  stixSightingRelationshipEdit(id: ID!): StixSightingRelationshipEditMutations @auth(for: [KNOWLEDGE_KNUPDATE])
}
